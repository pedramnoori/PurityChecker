[ {
  "id" : 1103823,
  "repository" : "https://github.com/raphw/byte-buddy.git",
  "sha1" : "372f4ae6cebcd664e3b43cade356d1df233f6467",
  "url" : "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
  "author" : "Rafael Winterhalter",
  "time" : "6/8/15 12:07 PM",
  "refactorings" : [ {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection to public ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Retaining moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.Retaining",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public onType(typeDescription TypeDescription) : TypeVariableProxy from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to public onType(typeDescription TypeDescription) : TypeVariableProxy from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : "Second Opinion, Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the method is the same since both class implement the same extends the same class | Davood: If you accept moving from a class which no longer exists to a new class, this is TP. Otherwise FP. However, I would mark the entire thing as a rename class. All the methods/attributes of the removed class is being repeated (with small modifications) in the new class. Matin, Davood: FP, condidate move and rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public onMethod(methodDescription MethodDescription) : TypeVariableProxy from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to public onMethod(methodDescription MethodDescription) : TypeVariableProxy from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : "Second Opinion, Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the method is the same since both class implement the same extends the same class | Davood: same as above",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription extracted from public prepare(instrumentedType InstrumentedType) : InstrumentedType in class net.bytebuddy.implementation.FieldAccessor.ForNamedField.PreparationHandler.FieldDefiner & moved to class net.bytebuddy.dynamic.TargetType",
    "comment" : "call to resolve() with three args in old vrs call to resolve() with two args in new",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription extracted from protected resolveReturnType(instrumentedType TypeDescription) : TypeDescription in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken & moved to class net.bytebuddy.dynamic.TargetType",
    "comment" : "The call to method resolve() with three params is changed to method resolve() with two params in the refactored version. Not an extract method refactroing.",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription extracted from protected resolveFieldType(instrumentedType TypeDescription) : TypeDescription in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.FieldToken & moved to class net.bytebuddy.dynamic.TargetType",
    "comment" : "call to resolve() with three args in old vrs call to resolve() with two args in new",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private substitutionMatcher : ElementMatcher<? super TypeDescription> from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to private substitutionMatcher : ElementMatcher<? super TypeDescription> from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : "Second Opinion. Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the attribute is the same since both class implement the same extends the same class |  Davood: If you accept moving from a class which no longer exists to a new class, this is TP. Otherwise FP",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private substitute : TypeDescription from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to private substitute : TypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : "Second Opinion. Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the attribute is the same since both class implement the same extends the same class | Davood: If you accept moving from a class which no longer exists to a new class, this is TP. Otherwise FP",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor moved and renamed to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable resolved : List<GenericTypeDescription> to substituted : List<GenericTypeDescription> in method public resolve(typeDescriptions List<? extends GenericTypeDescription>, substitute TypeDescription) : GenericTypeList from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter typeList : List<? extends GenericTypeDescription> to typeDescriptions : List<? extends GenericTypeDescription> in method public resolve(typeDescriptions List<? extends GenericTypeDescription>, substitute TypeDescription) : GenericTypeList from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private MethodToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, methodDescription MethodDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute targetType : TypeDescription to levelType : TypeDescription in class net.bytebuddy.dynamic.scaffold.inline.InlineInstrumentedTypeTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method protected ParameterToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, parameterDescription ParameterDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.ParameterToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.TypeVariableToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private FieldToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, fieldDescription FieldDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.FieldToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type parameterTypes : List<? extends TypeDescription> to parameterTypes : List<? extends GenericTypeDescription> in method public MethodToken(parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type exceptionTypes : List<? extends TypeDescription> to exceptionTypes : List<? extends GenericTypeDescription> in method public MethodToken(parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type returnType : TypeDescription to returnType : GenericTypeDescription in method public MethodToken(internalName String, returnType GenericTypeDescription, parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type parameterTypes : List<? extends TypeDescription> to parameterTypes : List<? extends GenericTypeDescription> in method public MethodToken(internalName String, returnType GenericTypeDescription, parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type exceptionTypes : List<? extends TypeDescription> to exceptionTypes : List<? extends GenericTypeDescription> in method public MethodToken(internalName String, returnType GenericTypeDescription, parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private FieldToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, fieldDescription FieldDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.FieldToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private MethodToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, methodDescription MethodDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.TypeVariableToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method protected ParameterToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, parameterDescription ParameterDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.ParameterToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type exceptionMatcher : ElementMatcher<? super List<? extends TypeDescription>> to exceptionMatcher : ElementMatcher<? super Iterable<? extends TypeDescription>> in method public declaresException(exceptionMatcher ElementMatcher<? super Iterable<? extends TypeDescription>>) : ElementMatcher.Junction<T> from class net.bytebuddy.matcher.ElementMatchers",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TypeDescription to GenericTypeDescription in method protected resolveReturnType(instrumentedType TypeDescription) : GenericTypeDescription from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method protected resolveParameterTypes(instrumentedType TypeDescription) : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method protected resolveExceptionTypes(instrumentedType TypeDescription) : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TypeDescription to GenericTypeDescription in method public getReturnType() : GenericTypeDescription from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method public getParameterTypes() : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method public getExceptionTypes() : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TypeDescription to GenericTypeDescription in method protected resolveFieldType(instrumentedType TypeDescription) : GenericTypeDescription from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.FieldToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter substitutionMatcher : ElementMatcher<? super TypeDescription> to typeDescription : GenericTypeDescription in method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription in class net.bytebuddy.dynamic.TargetType",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type returnType : TypeDescription to returnType : GenericTypeDescription in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type parameterTypes : List<TypeDescription> to parameterTypes : List<GenericTypeDescription> in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type exceptionTypes : List<TypeDescription> to exceptionTypes : List<GenericTypeDescription> in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type parameterTypes : TypeList to parameterTypes : GenericTypeList in class net.bytebuddy.dynamic.DynamicTypeBuilderTokenTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type exceptionTypes : TypeList to exceptionTypes : GenericTypeList in class net.bytebuddy.dynamic.DynamicTypeBuilderTokenTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection to public ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.ForType moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForType",
    "comment" : "<p>Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getInterfacesGen() : GenericTypeList from class net.bytebuddy.description.type.TypeDescription to public getInterfacesGen() : GenericTypeList from class net.bytebuddy.description.type.generic.GenericTypeDescription",
    "comment" : "<p>These are abstract methods</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getSuperTypeGen() : GenericTypeDescription from class net.bytebuddy.description.type.TypeDescription to public getSuperTypeGen() : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription",
    "comment" : "<p>this is an abstract method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public onMethod(methodDescription MethodDescription) : TypeVariableProxy from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter substitutionMatcher : ElementMatcher<? super TypeDescription> in method public resolve(typeList List<? extends GenericTypeDescription>, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : GenericTypeList from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public asRawType() : TypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.ForWildcardType",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected ForType(substitute TypeDescription) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected ForRawType(substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public resolve(observed TypeDescription, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : TypeDescription from class net.bytebuddy.dynamic.TargetType to public onRawType(typeDescription TypeDescription) : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n- Rename Variable-",
      "mappingState" : 1,
      "validationComment" : "Rename Variable on top"
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter substitutionMatcher : ElementMatcher<? super TypeDescription> in method public resolve(observed TypeDescription, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : TypeDescription from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter substitute : TypeDescription in method public resolve(observed TypeDescription, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : TypeDescription from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter observed : TypeDescription to typeDescription : TypeDescription in method public onRawType(typeDescription TypeDescription) : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public onRawType(typeDescription TypeDescription) : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type TypeDescription to GenericTypeDescription in method public onRawType(typeDescription TypeDescription) : GenericTypeDescription from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to public in attribute public ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method public resolve(observed TypeDescription, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : TypeDescription from class net.bytebuddy.dynamic.TargetType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.TypeVariableToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.TypeVariableToken",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier static in class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method protected AbstractBase(loadedTypeInitializer LoadedTypeInitializer, typeInitializer TypeInitializer, matcher ElementMatcher<? super TypeDescription>, typeVariables List<? extends GenericTypeDescription>, fieldDescriptions List<? extends FieldDescription>, methodDescriptions List<? extends MethodDescription>) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected ForMethod(substitute TypeDescription, typeVariableMethodMatcher ElementMatcher<? super MethodDescription>) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter methodDescription : MethodDescription to typeVariableMethodMatcher : ElementMatcher<? super MethodDescription> in method protected ForMethod(substitute TypeDescription, typeVariableMethodMatcher ElementMatcher<? super MethodDescription>) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type methodDescription : MethodDescription to typeVariableMethodMatcher : ElementMatcher<? super MethodDescription> in method protected ForMethod(substitute TypeDescription, typeVariableMethodMatcher ElementMatcher<? super MethodDescription>) from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute methodDescription : MethodDescription to typeVariableMethodMatcher : ElementMatcher<? super MethodDescription> in class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type methodDescription : MethodDescription to typeVariableMethodMatcher : ElementMatcher<? super MethodDescription> in class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.ForMethod",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getSuperTypeGen() : GenericTypeDescription extracted from public next() : GenericTypeDescription in class net.bytebuddy.description.type.TypeDescription.AbstractTypeDescription.SuperTypeIterator & moved to class net.bytebuddy.description.type.generic.GenericTypeDescription.ForParameterizedType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 4590
}, {
  "id" : 1105950,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "cc0eaf7faa408a04b68e2b5820f3ebcc75420b5b",
  "url" : "https://github.com/JetBrains/intellij-community/commit/cc0eaf7faa408a04b68e2b5820f3ebcc75420b5b",
  "author" : "Bas Leijdekkers",
  "time" : "6/8/15 11:39 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private canBinaryExpressionBeUnboxed(lhs PsiExpression, rhs PsiExpression) : boolean extracted from private canBeUnboxed(expression PsiExpression) : boolean in class com.siyeh.ig.migration.UnnecessaryBoxingInspection.UnnecessaryBoxingVisitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Functionality has been changed"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private isAnnotatedNotNull(expression PsiExpression) : boolean from class com.siyeh.ig.psiutils.SwitchUtils to private isAnnotated(expression PsiExpression, nullable boolean) : boolean from class com.siyeh.ig.psiutils.ExpressionUtils",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n",
      "mappingState" : 1,
      "validationComment" : "change happened inside the ternary operation. PurityChecker cannot evaluate the expression based on the argument passed"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private isAnnotatedNullable(expression PsiExpression) : boolean from class com.siyeh.ig.psiutils.SwitchUtils to private isAnnotated(expression PsiExpression, nullable boolean) : boolean from class com.siyeh.ig.psiutils.ExpressionUtils",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n",
      "mappingState" : 1,
      "validationComment" : "change happened inside the ternary operation. PurityChecker cannot evaluate the expression based on the argument passed"
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter nullable : boolean in method private isAnnotated(expression PsiExpression, nullable boolean) : boolean from class com.siyeh.ig.psiutils.ExpressionUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 15592
}, {
  "id" : 1109077,
  "repository" : "https://github.com/FasterXML/jackson-databind.git",
  "sha1" : "44dea1f292933192ea5287d9b3e14a7daaef3c0f",
  "url" : "https://github.com/FasterXML/jackson-databind/commit/44dea1f292933192ea5287d9b3e14a7daaef3c0f",
  "author" : "Cowtowncoder",
  "time" : "6/10/15 8:33 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class com.fasterxml.jackson.failing.TestExternalTypeId222.Issue222BeanB moved to com.fasterxml.jackson.databind.jsontype.TestExternalId.Issue222BeanB",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.fasterxml.jackson.failing.TestExternalTypeId222.Issue222Bean moved to com.fasterxml.jackson.databind.jsontype.TestExternalId.Issue222Bean",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public testIssue222() : void from class com.fasterxml.jackson.failing.TestExternalTypeId222 to public testExternalTypeWithProp222() : void from class com.fasterxml.jackson.databind.jsontype.TestExternalId",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute protected _typeSerializer : TypeSerializer from class com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
    "comment" : "<p>public void assignTypeSerializer(TypeSerializer typeSer)<br />is called in<br />protected List&lt;BeanPropertyWriter&gt; removeOverlappingTypeIds()<br />src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute protected _typeSerializer : TypeSerializer from class com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1439
}, {
  "id" : 1109449,
  "repository" : "https://github.com/Alluxio/alluxio.git",
  "sha1" : "0ba343846f21649e29ffc600f30a7f3e463fb24c",
  "url" : "https://github.com/Alluxio/alluxio/commit/0ba343846f21649e29ffc600f30a7f3e463fb24c",
  "author" : "Bin Fan",
  "time" : "6/10/15 3:33 AM",
  "refactorings" : [ {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass tachyon.worker.block.meta.BlockMetaBase from class tachyon.worker.block.meta.BlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass tachyon.worker.block.meta.BlockMetaBase from class tachyon.worker.block.meta.TempBlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getParentDir() : StorageDir from class tachyon.worker.block.meta.BlockMeta to public getParentDir() : StorageDir from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getBlockId() : long from class tachyon.worker.block.meta.BlockMeta to public getBlockId() : long from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getBlockSize() : long from class tachyon.worker.block.meta.BlockMeta to public getBlockSize() : long from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private mDir : StorageDir from class tachyon.worker.block.meta.BlockMeta to protected mDir : StorageDir from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private mBlockSize : long from class tachyon.worker.block.meta.BlockMeta to protected mBlockSize : long from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private mBlockId : long from class tachyon.worker.block.meta.BlockMeta to protected mBlockId : long from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public getTmpPath(userId long) : String from class tachyon.worker.block.meta.BlockMeta to public getPath() : String from class tachyon.worker.block.meta.TempBlockMeta",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n",
      "mappingState" : 1,
      "validationComment" : "The paramenter -userId- has been replaced with the new field -mUserId-. This change seems pure but there is no information available for justifying this change."
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getPath() : String from class tachyon.worker.block.meta.BlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getPath() : String from class tachyon.worker.block.meta.TempBlockMeta",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter userId : long in method public getTmpPath(userId long) : String from class tachyon.worker.block.meta.BlockMeta",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected mBlockId : long from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected mBlockSize : long from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected mDir : StorageDir from class tachyon.worker.block.meta.BlockMetaBase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1111161,
  "repository" : "https://github.com/undertow-io/undertow.git",
  "sha1" : "d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
  "url" : "https://github.com/undertow-io/undertow/commit/d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
  "author" : "Stuart Douglas",
  "time" : "6/15/15 6:06 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public addPredicatedHandler(predicate Predicate, handlerWrapper HandlerWrapper, elseBranch HandlerWrapper) : PredicatesHandler extracted from public addPredicatedHandler(predicate Predicate, handlerWrapper HandlerWrapper) : PredicatesHandler in class io.undertow.predicate.PredicatesHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "elsebranch has been added to the Holder constructor. So, it's not pure when we have this replacement."
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private isOperator(op String) : boolean from class io.undertow.predicate.PredicateParser to private isOperator(op String) : boolean from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class io.undertow.util.PredicateTokeniser.Token moved to io.undertow.server.handlers.builder.PredicatedHandlersParser.Token",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private isOperator(op String) : boolean from class io.undertow.server.handlers.builder.HandlerParser to private isOperator(op String) : boolean from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private coerceToType(string String, token Token, type Class<?>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.predicate.PredicateParser to private coerceToType(string String, token Token, type Class<?>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package tokenize(string String) : Deque<Token> from class io.undertow.server.handlers.builder.HandlerParser to public tokenize(string String) : Deque<Token> from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private isSpecialChar(token String) : boolean from class io.undertow.predicate.PredicateParser to private isSpecialChar(token String) : boolean from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private coerceToType(string String, token Token, type Class<?>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.server.handlers.builder.HandlerParser to private coerceToType(string String, token Token, type Class<?>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Change has been caused because of the nested move method refactoring. In this case, within this commit, the -error- method has been moved from -PredicateTokeniser- class to -PredicatedHandlersParser- class. So, the change is a pure change!"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private precedence(operator String) : int from class io.undertow.server.handlers.builder.HandlerParser to private precedence(operator String) : int from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private precedence(operator String) : int from class io.undertow.predicate.PredicateParser to private precedence(operator String) : int from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private isSpecialChar(token String) : boolean from class io.undertow.server.handlers.builder.HandlerParser to private isSpecialChar(token String) : boolean from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private handleSingleArrayValue(string String, builder PredicateBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String) : Node from class io.undertow.predicate.PredicateParser to private handleSingleArrayValue(string String, builder Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Logic has been changed"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public error(string String, pos int, reason String) : IllegalStateException from class io.undertow.util.PredicateTokeniser to public error(string String, pos int, reason String) : IllegalStateException from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method package parse(string String, tokens Deque<Token>) : Node extracted from public parse(contents String, classLoader ClassLoader) : List<PredicatedHandler> in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "<p>There is a very small number of common statements between the original and the extracted method,<br />while a very big number of new statements in the extracted method.</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private readArrayType(string String, tokens Deque<Token>, expectedEndToken String) : List<Token> extracted from private handleSingleArrayValue(string String, builder PredicateBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String) : Node in class io.undertow.predicate.PredicateParser & moved to class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "<p>added</p><p>Even the original methods used to call&nbsp;readArrayType, so I can't mark this as TP</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private loadPredicateBuilders(classLoader ClassLoader) : Map<String,PredicateBuilder> extracted from public parse(contents String, classLoader ClassLoader) : List<PredicatedHandler> in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "<p>added</p><p>The method which is reported to be extracted seems to be in the original method being unified as well, but with different name (loadBuilders), so this is false positive.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private collapseOutput(token Object, tokens Deque<Object>) : Node from class io.undertow.predicate.PredicateParser to private collapseOutput(token Node, tokens Deque<Node>) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private handleSingleArrayValue(string String, builder HandlerBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String, last Token) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser to private handleSingleArrayValue(string String, builder Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "<p>added</p><p>There were two&nbsp;handleSingleArrayValue methods, they seem to be unified and moved to the target class, but one is more similar to the handleSingleArrayValue method in the target class. Since <a href='219'>the other one</a> is marked as TP, we should mark this as FP.</p><p>Update: After seeing this case, I understood that we accepted similar cases as TP in both cases.</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method public parse(string String, tokens Deque<Token>, classLoader ClassLoader) : Predicate moved from class io.undertow.predicate.PredicateParser to class io.undertow.server.handlers.builder.PredicatedHandlersParser & inlined to public parse(contents String, classLoader ClassLoader) : List<PredicatedHandler>",
    "comment" : "<p>The method is Inlined from class <span class='blob-code-inner'><span class='pl-en'>PredicateParser.<br /></span></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private handleNode(contents String, node Node, predicateBuilders Map<String,PredicateBuilder>, handlerBuilders Map<String,HandlerBuilder>, attributeParser ExchangeAttributeParser) : List<PredicatedHandler> extracted from public parse(contents String, classLoader ClassLoader) : List<PredicatedHandler> in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "<p>added</p><p>DOUBLE CHECK WITH MATIN. This is one of the cases I believe should be FP because the original code does not have anything to do with the extracted code.</p><p>Nikos: The added code is completely new functionality. It has not been extracted from existing code.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public tokenize(string String) : Deque<Token> from class io.undertow.util.PredicateTokeniser to public tokenize(string String) : Deque<Token> from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private handleLineEnd(string String, operatorStack Deque<Token>, output Deque<Node>, blocks List<Node>) : void extracted from package parse(string String, tokens Deque<Token>, builders Map<String,PredicateBuilder>, attributeParser ExchangeAttributeParser) : Predicate in class io.undertow.predicate.PredicateParser & moved to class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package parse(string String, tokens Deque<Token>, builders Map<String,PredicateBuilder>, attributeParser ExchangeAttributeParser) : Predicate from class io.undertow.predicate.PredicateParser to package parse(string String, tokens Deque<Token>, topLevel boolean) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder PredicateBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String) : Object from class io.undertow.predicate.PredicateParser to private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "<p>added</p><p>&nbsp;</p><p>This is like case refactroing with ID= 4278</p><p>Two methods (with very similar body) with name readArrayType(..) from two different classes PredicateParser and HandlerParser are moved to class PredicatedHandlersParser. We also verified it with Nik.</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Logic has been changed completely"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder HandlerBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String, last Token) : Object from class io.undertow.server.handlers.builder.HandlerParser to private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Logic has been changed completely"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private loadHandlerBuilders(classLoader ClassLoader) : Map<String,HandlerBuilder> extracted from public parse(contents String, classLoader ClassLoader) : List<PredicatedHandler> in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "added",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private node : Node from class io.undertow.predicate.PredicateParser.NotNode to private node : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser.NotNode",
    "comment" : "added",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public parsePredicate(string String, classLoader ClassLoader) : Predicate extracted from public parse(string String, classLoader ClassLoader) : Predicate in class io.undertow.predicate.PredicateParser & moved to class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public parseHandler(string String, classLoader ClassLoader) : HandlerWrapper extracted from public parse(string String, classLoader ClassLoader) : HandlerWrapper in class io.undertow.server.handlers.builder.HandlerParser & moved to class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "added",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type builder : PredicateBuilder to builder : Token in method private handleSingleArrayValue(string String, builder Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable wrappers : List<PredicatedHandler> to values : List<Object> in method private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "<p>method private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) is new</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private handleSingleVarArgsValue(string String, builder PredicateBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String) : Node from class io.undertow.predicate.PredicateParser to private handleSingleVarArgsValue(string String, expressionName Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter attributeParser : ExchangeAttributeParser to parser : ExchangeAttributeParser in method private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type paramName : Token to paramName : String in method private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type others : List<Deque<Token>> to handlerBuilders : Map<String,HandlerBuilder> in method public parseHandler(string String, classLoader ClassLoader) : HandlerWrapper in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method public parse(string String, tokens Deque<Token>, classLoader ClassLoader) : HandlerWrapper moved from class io.undertow.server.handlers.builder.HandlerParser to class io.undertow.server.handlers.builder.PredicatedHandlersParser & inlined to public parse(contents String, classLoader ClassLoader) : List<PredicatedHandler>",
    "comment" : "<p>The method is inlined from class <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>HandlerParser</span></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Laleh, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private loadBuilders(classLoader ClassLoader) : Map<String,PredicateBuilder> from class io.undertow.predicate.PredicateParser to private loadPredicateBuilders(classLoader ClassLoader) : Map<String,PredicateBuilder> from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private loadBuilders(classLoader ClassLoader) : Map<String,HandlerBuilder> from class io.undertow.server.handlers.builder.HandlerParser to private loadHandlerBuilders(classLoader ClassLoader) : Map<String,HandlerBuilder> from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private precedence(operator String) : int inlined to package parse(string String, tokens Deque<Token>, topLevel boolean) : Node in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private parsePredicate(string String, token Token, tokens Deque<Token>, builders Map<String,PredicateBuilder>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.predicate.PredicateParser to private parseExpression(string String, token Token, tokens Deque<Token>) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Severe Changes",
      "mappingState" : 5,
      "validationComment" : "null check has been removed along with other non-justifiable changes"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private parseBuilder(string String, token Token, tokens Deque<Token>, builders Map<String,HandlerBuilder>, attributeParser ExchangeAttributeParser) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser to private parseExpression(string String, token Token, tokens Deque<Token>) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Severe Changes",
      "mappingState" : 5,
      "validationComment" : "Lots of unjustifiable changes happened on top of the refactoring"
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Predicate to Node in method package parse(string String, tokens Deque<Token>, topLevel boolean) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type HandlerWrapper to Node in method private parseExpression(string String, token Token, tokens Deque<Token>) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Object to Node in method private parseExpression(string String, token Token, tokens Deque<Token>) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter elseBranch : HttpHandler in method private Holder(predicate Predicate, handler HttpHandler, elseBranch HttpHandler) from class io.undertow.predicate.PredicatesHandler.Holder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter builders : Map<String,PredicateBuilder> in method private parsePredicate(string String, token Token, tokens Deque<Token>, builders Map<String,PredicateBuilder>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.predicate.PredicateParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter attributeParser : ExchangeAttributeParser in method private parsePredicate(string String, token Token, tokens Deque<Token>, builders Map<String,PredicateBuilder>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.predicate.PredicateParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter token : Token in method private handleSingleArrayValue(string String, builder PredicateBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String) : Node from class io.undertow.predicate.PredicateParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter attributeParser : ExchangeAttributeParser in method private handleSingleArrayValue(string String, builder PredicateBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String) : Node from class io.undertow.predicate.PredicateParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter attributeParser : ExchangeAttributeParser in method private handleSingleVarArgsValue(string String, builder PredicateBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String) : Node from class io.undertow.predicate.PredicateParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter builders : Map<String,HandlerBuilder> in method private parseBuilder(string String, token Token, tokens Deque<Token>, builders Map<String,HandlerBuilder>, attributeParser ExchangeAttributeParser) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter attributeParser : ExchangeAttributeParser in method private parseBuilder(string String, token Token, tokens Deque<Token>, builders Map<String,HandlerBuilder>, attributeParser ExchangeAttributeParser) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public tokenize(string String) : Deque<Token> from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private attribute : ExchangeAttribute from class io.undertow.predicate.ContainsPredicate",
    "comment" : "<p>public ExchangeAttribute getAttribute()<br />is called in file<br />core/src/test/java/io/undertow/server/handlers/builder/PredicatedHandlersParserTestCase.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private header : HttpString from class io.undertow.server.handlers.SetHeaderHandler",
    "comment" : "<p>called in method public void testParsedHandler2()<br />core/src/test/java/io/undertow/server/handlers/builder/PredicatedHandlersParserTestCase.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private value : ExchangeAttribute from class io.undertow.server.handlers.SetHeaderHandler",
    "comment" : "<p>called in method public void testParsedHandler2()<br />core/src/test/java/io/undertow/server/handlers/builder/PredicatedHandlersParserTestCase.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier final in method public parse(string String, classLoader ClassLoader) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter attributeParser : ExchangeAttributeParser in method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder PredicateBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String) : Object from class io.undertow.predicate.PredicateParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter attributeParser : ExchangeAttributeParser in method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder HandlerBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String, last Token) : Object from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter topLevel : boolean in method package parse(string String, tokens Deque<Token>, topLevel boolean) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter builders : Map<String,PredicateBuilder> in method package parse(string String, tokens Deque<Token>, builders Map<String,PredicateBuilder>, attributeParser ExchangeAttributeParser) : Predicate from class io.undertow.predicate.PredicateParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter attributeParser : ExchangeAttributeParser in method package parse(string String, tokens Deque<Token>, builders Map<String,PredicateBuilder>, attributeParser ExchangeAttributeParser) : Predicate from class io.undertow.predicate.PredicateParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter value : ArrayNode in method private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter tokens : Deque<Token> in method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder PredicateBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String) : Object from class io.undertow.predicate.PredicateParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter builder : PredicateBuilder in method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder PredicateBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String) : Object from class io.undertow.predicate.PredicateParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter expectedEndToken : String in method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder PredicateBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String) : Object from class io.undertow.predicate.PredicateParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter tokens : Deque<Token> in method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder HandlerBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String, last Token) : Object from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter builder : HandlerBuilder in method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder HandlerBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String, last Token) : Object from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter expectedEndToken : String in method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder HandlerBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String, last Token) : Object from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter last : Token in method private readArrayType(string String, tokens Deque<Token>, paramName Token, builder HandlerBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String, last Token) : Object from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter token : Token in method private handleSingleArrayValue(string String, builder HandlerBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String, last Token) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter last : Token in method private handleSingleArrayValue(string String, builder HandlerBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String, last Token) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter attributeParser : ExchangeAttributeParser in method private handleSingleArrayValue(string String, builder HandlerBuilder, tokens Deque<Token>, token Token, attributeParser ExchangeAttributeParser, endChar String, last Token) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type builder : HandlerBuilder to builder : Token in method private handleSingleArrayValue(string String, builder Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type HandlerWrapper to Node in method private handleSingleArrayValue(string String, builder Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class io.undertow.predicate.ContainsPredicate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier public to package in class io.undertow.server.handlers.builder.PredicatedHandlersParser.Token",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable type : Class<?> to type : Class in method private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type type : Class<?> to type : Class in method private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type output : Deque<Object> to output : Deque<Node> in method package parse(string String, tokens Deque<Token>, topLevel boolean) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type top : String to top : Token in method package parse(string String, tokens Deque<Token>, topLevel boolean) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type operatorStack : Deque<String> to operatorStack : Deque<Token> in method package parse(string String, tokens Deque<Token>, topLevel boolean) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type op : String to op : Token in method package parse(string String, tokens Deque<Token>, topLevel boolean) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type values : Map<String,Object> to values : Map<String,Node> in method private parseExpression(string String, token Token, tokens Deque<Token>) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type array : Object to array : List<Token> in method private handleSingleVarArgsValue(string String, expressionName Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type array : Object to array : List<Token> in method private handleSingleArrayValue(string String, builder Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable last : Token in method private parseBuilder(string String, token Token, tokens Deque<Token>, builders Map<String,HandlerBuilder>, attributeParser ExchangeAttributeParser) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser",
    "comment" : "<p>Token last = tokens.isEmpty() ? token : tokens.getLast();&nbsp;</p><p>In the pairs of matched statements where both 'tokens' and 'last' are used, 'last' is removed<br /><br />return handleSingleArrayValue(string, builder, tokens, next, attributeParser, endChar, last);<br />return handleSingleArrayValue(string, token, tokens, endChar);<br /><br />values.put(next.getToken(), readArrayType(string, tokens, next, builder, attributeParser, '}', last));<br />values.put(next.getToken(), new ArrayNode(value, readArrayType(string, tokens,'}')));</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter builder : PredicateBuilder to expressionName : Token in method private handleSingleVarArgsValue(string String, expressionName Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type builder : PredicateBuilder to expressionName : Token in method private handleSingleVarArgsValue(string String, expressionName Token, tokens Deque<Token>, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1117304,
  "repository" : "https://github.com/graphhopper/graphhopper.git",
  "sha1" : "7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
  "url" : "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
  "author" : "Peter",
  "time" : "6/17/15 5:42 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected edgeCount : int from class com.graphhopper.storage.GraphHopperStorage to protected edgeCount : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private flagsSizeIsLong : boolean from class com.graphhopper.storage.GraphHopperStorage to package flagsSizeIsLong : boolean from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected N_ELE : int from class com.graphhopper.storage.GraphHopperStorage to protected N_ELE : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package internalEdgeDisconnect(edgeToRemove int, edgeToUpdatePointer long, baseNode int, adjNode int) : long from class com.graphhopper.storage.GraphHopperStorage to package internalEdgeDisconnect(edgeToRemove int, edgeToUpdatePointer long, baseNode int, adjNode int) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private removedNodes : GHBitSet from class com.graphhopper.storage.GraphHopperStorage to private removedNodes : GHBitSet from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_ADDITIONAL : int from class com.graphhopper.storage.GraphHopperStorage to protected E_ADDITIONAL : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private NO_NODE : int from class com.graphhopper.storage.GraphHopperStorage to private NO_NODE : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private initialized : boolean from class com.graphhopper.storage.GraphHopperStorage to private initialized : boolean from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_NODEA : int from class com.graphhopper.storage.GraphHopperStorage to protected E_NODEA : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package bounds : BBox from class com.graphhopper.storage.GraphHopperStorage to package bounds : BBox from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected N_ADDITIONAL : int from class com.graphhopper.storage.GraphHopperStorage to protected N_ADDITIONAL : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected nodes : DataAccess from class com.graphhopper.storage.GraphHopperStorage to protected nodes : DataAccess from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private wayGeometry : DataAccess from class com.graphhopper.storage.GraphHopperStorage to package wayGeometry : DataAccess from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getDebugInfo(node int, area int) : String from class com.graphhopper.storage.GraphHopperStorage to public getDebugInfo(node int, area int) : String from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected N_LAT : int from class com.graphhopper.storage.GraphHopperStorage to protected N_LAT : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private maxGeoRef : int from class com.graphhopper.storage.GraphHopperStorage to private maxGeoRef : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected createSingleEdge(edgeId int, nodeId int) : SingleEdge from class com.graphhopper.storage.GraphHopperStorage to protected createSingleEdge(edgeId int, nodeId int) : SingleEdge from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getDist(pointer long) : double from class com.graphhopper.storage.GraphHopperStorage to private getDist(pointer long) : double from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected N_LON : int from class com.graphhopper.storage.GraphHopperStorage to protected N_LON : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private nodeAccess : NodeAccess from class com.graphhopper.storage.GraphHopperStorage to package nodeAccess : NodeAccess from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected setNodesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected setNodesHeader() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected loadNodesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected loadNodesHeader() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private nextEdge() : int from class com.graphhopper.storage.GraphHopperStorage to private nextEdge() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private nodeCount : int from class com.graphhopper.storage.GraphHopperStorage to protected nodeCount : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_LINKB : int from class com.graphhopper.storage.GraphHopperStorage to protected E_LINKB : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected initStorage() : void from class com.graphhopper.storage.GraphHopperStorage to package initStorage() : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private edgeEntryIndex : int from class com.graphhopper.storage.GraphHopperStorage to private edgeEntryIndex : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private MAX_EDGES : int from class com.graphhopper.storage.GraphHopperStorage to private MAX_EDGES : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package extStorage : GraphExtension from class com.graphhopper.storage.GraphHopperStorage to package extStorage : GraphExtension from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_LINKA : int from class com.graphhopper.storage.GraphHopperStorage to protected E_LINKA : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private ensureEdgeIndex(edgeIndex int) : void from class com.graphhopper.storage.GraphHopperStorage to private ensureEdgeIndex(edgeIndex int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private ensureGeometry(bytePos long, byteLength int) : void from class com.graphhopper.storage.GraphHopperStorage to private ensureGeometry(bytePos long, byteLength int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected setEdgesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected setEdgesHeader() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected N_EDGE_REF : int from class com.graphhopper.storage.GraphHopperStorage to protected N_EDGE_REF : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private nextGeoRef(arrayLength int) : int from class com.graphhopper.storage.GraphHopperStorage to private nextGeoRef(arrayLength int) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_FLAGS : int from class com.graphhopper.storage.GraphHopperStorage to protected E_FLAGS : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package setEdgeCount(cnt int) : void from class com.graphhopper.storage.GraphHopperStorage to package setEdgeCount(cnt int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private connectNewEdge(fromNode int, newOrExistingEdge int) : void from class com.graphhopper.storage.GraphHopperStorage to private connectNewEdge(fromNode int, newOrExistingEdge int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private inPlaceNodeRemove(removeNodeCount int) : void from class com.graphhopper.storage.GraphHopperStorage to package inPlaceNodeRemove(removeNodeCount int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected setWayGeometryHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected setWayGeometryHeader() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected initNodeAndEdgeEntrySize() : void from class com.graphhopper.storage.GraphHopperStorage to protected initNodeAndEdgeEntrySize() : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getOtherNode(nodeThis int, edgePointer long) : int from class com.graphhopper.storage.GraphHopperStorage to private getOtherNode(nodeThis int, edgePointer long) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private initNodeRefs(oldCapacity long, newCapacity long) : void from class com.graphhopper.storage.GraphHopperStorage to package initNodeRefs(oldCapacity long, newCapacity long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_DIST : int from class com.graphhopper.storage.GraphHopperStorage to protected E_DIST : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package checkInit() : void from class com.graphhopper.storage.GraphHopperStorage to package checkInit() : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private invalidateEdge(edgePointer long) : void from class com.graphhopper.storage.GraphHopperStorage to private invalidateEdge(edgePointer long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected nodeEntryBytes : int from class com.graphhopper.storage.GraphHopperStorage to protected nodeEntryBytes : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package copyProperties(from EdgeIteratorState, to EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage to package copyProperties(from EdgeIteratorState, to EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_NAME : int from class com.graphhopper.storage.GraphHopperStorage to protected E_NAME : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected getLinkPosInEdgeArea(nodeThis int, nodeOther int, edgePointer long) : long from class com.graphhopper.storage.GraphHopperStorage to protected getLinkPosInEdgeArea(nodeThis int, nodeOther int, edgePointer long) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private writeEdge(edge int, nodeThis int, nodeOther int, nextEdge int, nextEdgeOther int) : long from class com.graphhopper.storage.GraphHopperStorage to private writeEdge(edge int, nodeThis int, nodeOther int, nextEdge int, nextEdgeOther int) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected edges : DataAccess from class com.graphhopper.storage.GraphHopperStorage to protected edges : DataAccess from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private distToInt(distance double) : int from class com.graphhopper.storage.GraphHopperStorage to private distToInt(distance double) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private nodeEntryIndex : int from class com.graphhopper.storage.GraphHopperStorage to private nodeEntryIndex : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_GEO : int from class com.graphhopper.storage.GraphHopperStorage to protected E_GEO : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getRemovedNodes() : GHBitSet from class com.graphhopper.storage.GraphHopperStorage to package getRemovedNodes() : GHBitSet from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected loadEdgesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected loadEdgesHeader() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected edgeEntryBytes : int from class com.graphhopper.storage.GraphHopperStorage to protected edgeEntryBytes : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private isTestingEnabled() : boolean from class com.graphhopper.storage.GraphHopperStorage to private isTestingEnabled() : boolean from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected nextNodeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.GraphHopperStorage to protected nextNodeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private nameIndex : NameIndex from class com.graphhopper.storage.GraphHopperStorage to package nameIndex : NameIndex from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected E_NODEB : int from class com.graphhopper.storage.GraphHopperStorage to protected E_NODEB : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private trimToSize() : void from class com.graphhopper.storage.GraphHopperStorage to protected trimToSize() : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package internalEdgeAdd(fromNodeId int, toNodeId int) : int from class com.graphhopper.storage.GraphHopperStorage to package internalEdgeAdd(fromNodeId int, toNodeId int) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private INT_DIST_FACTOR : double from class com.graphhopper.storage.GraphHopperStorage to private INT_DIST_FACTOR : double from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected nextEdgeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.GraphHopperStorage to protected nextEdgeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private stringHashCode(str String) : int from class com.graphhopper.storage.GraphHopperStorage to private stringHashCode(str String) : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected loadWayGeometryHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected loadWayGeometryHeader() : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private bitUtil : BitUtil from class com.graphhopper.storage.GraphHopperStorage to package bitUtil : BitUtil from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package ensureNodeIndex(nodeIndex int) : void from class com.graphhopper.storage.GraphHopperStorage to package ensureNodeIndex(nodeIndex int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.graphhopper.storage.LevelGraphStorageTest renamed to com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createGraph(is3D boolean) : Graph renamed to protected createGHStorage(is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createGraph(em EncodingManager, is3D boolean) : Graph renamed to protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package calcPathViaQuery(weighting String, graph Graph, fromLat double, fromLon double, toLat double, toLon double) : Path renamed to package calcPathViaQuery_(weighting String, ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected newRAMGraph() : GraphStorage renamed to protected newRAMGHStorage() : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createGraph() : GraphStorage renamed to protected createGHStorage() : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createTarjanTestGraph() : GraphStorage renamed to package createTarjanTestStorage() : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createGraph(eman EncodingManager) : GraphStorage renamed to package createStorage(eman EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createDeadEndUnvisitedNetworkGraph(em EncodingManager) : GraphStorage renamed to package createDeadEndUnvisitedNetworkStorage(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createSubnetworkTestGraph2(em EncodingManager) : GraphStorage renamed to package createSubnetworkTestStorage2(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createSubnetworkTestGraph() : GraphStorage renamed to package createSubnetworkTestStorage() : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createGraph(location String, enabled3D boolean) : GraphStorage renamed to public createGHStorage(location String, enabled3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected newGraph(dir Directory, enabled3D boolean) : GraphStorage renamed to protected newGHStorage(dir Directory, enabled3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getGraph() : GraphStorage renamed to public getGraphHopperStorage() : GraphHopperStorage in class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setGraph(graph GraphStorage) : void renamed to public setGraphHopperStorage(ghStorage GraphHopperStorage) : void in class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createGraph(dir Directory, encodingManager EncodingManager, is3D boolean) : Graph renamed to package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.index.AbstractLocationIndexTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected newGraph(dir Directory, is3D boolean) : GraphStorage renamed to protected newGHStorage(dir Directory, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createGraph(em EncodingManager) : GraphStorage renamed to protected createStorage(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createGraph(location String, is3D boolean) : GraphStorage renamed to public createGHStorage(location String, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphStorageViaMMapTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createTestGraph() : Graph renamed to protected createTestStorage() : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setAdditionalEdgeField(edgePointer long, value int) : void extracted from public setAdditionalEdgeField(edgePointer long, value int) : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.graphhopper.storage.LevelGraphStorage renamed to com.graphhopper.storage.LevelGraphImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.graphhopper.storage.GraphExtension.NoExtendedStorage renamed to com.graphhopper.storage.GraphExtension.NoOpExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected createGraph(em EncodingManager, is3D boolean) : LevelGraph renamed to protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createGraph(dir Directory, encodingManager EncodingManager, is3D boolean) : LevelGraph renamed to package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package guessStorage(g Graph, outdir Directory, encodingManager EncodingManager) : GraphStorage renamed to public newStorage(store GraphHopperStorage) : GraphHopperStorage in class com.graphhopper.util.GHUtility",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, GumTreeDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createGraph() : LevelGraph renamed to package createGHStorage() : GraphHopperStorage in class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public newGraph(dir Directory, is3D boolean) : GraphStorage renamed to public newGHStorage(dir Directory, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getAdjNode() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getAdjNode() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getBaseNode() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getBaseNode() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public toString() : String from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public toString() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getAdjNode() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getAdjNode() : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getBaseNode() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getBaseNode() : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getEdge() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getEdge() : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getEdgePointer() : long from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to private getEdgePointer() : long from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public toString() : String from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public toString() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "original class moved to antoher class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public next() : boolean from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public next() : boolean from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected setEdgeId(edgeId int) : void from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to protected setEdgeId(edgeId int) : void from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : " Inner class EdgeIterable is deleted in the base version and inner class EdgeIterable is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "the original Class moved to another class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public next() : boolean from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public next() : boolean from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setBaseNode(baseNode int) : EdgeIterator from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setBaseNode(baseNode int) : EdgeIterator from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : " Inner class EdgeIterable is deleted in the base version and inner class EdgeIterable is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getEdge() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getEdge() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getName() : String from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getName() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getName() : String from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getName() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "In reality method getName() from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "<p>The inner class has moved and contains the method which is marked as moved</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getDistance() : double from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getDistance() : double from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getDistance() : double from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getDistance() : double from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "In reality method getDistance() from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getAdditionalField() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getAdditionalField() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getAdditionalField() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getAdditionalField() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "original class moved to another class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : " Inner class EdgeIterable is deleted in the base version and inner class EdgeIterable is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getCount() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getCount() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "In reality method copyPropertiesTo(edge EdgeIteratorState) from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public fetchWayGeometry(mode int) : PointList from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public fetchWayGeometry(mode int) : PointList from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public fetchWayGeometry(type int) : PointList from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public fetchWayGeometry(type int) : PointList from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "In reality method setWayGeometry(pillarNodes PointList) from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setFlags(fl long) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setFlags(fl long) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setFlags(flags long) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setFlags(flags long) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getGraph(ghStorage GraphHopperStorage) : Graph extracted from public testTwoWeightsPerEdge2() : void in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Not Reported bt RM"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getGraph(ghStorage GraphHopperStorage) : Graph extracted from public testWithCoordinates() : void in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Not Reported bt RM"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getGraph(ghStorage GraphHopperStorage) : LevelGraph extracted from public createFactory(g Graph, opts AlgorithmOptions) : RoutingAlgorithmFactory in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : "It will be hard to detect, it needs semantic analysis.",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Not Reported bt RM"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package close() : void extracted from public close() : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package create(initSize long) : void extracted from public create(byteCount long) : GraphStorage in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package flush() : void extracted from public flush() : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package loadExisting(dim String) : void extracted from public loadExisting() : boolean in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package setSegmentSize(bytes int) : void extracted from public setSegmentSize(bytes int) : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package toDetailsString() : String extracted from public toDetailsString() : String in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public isCHPossible() : boolean extracted from public toString() : String in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public isCHPossible() : boolean extracted from package _copyTo(clonedG GraphHopperStorage) : Graph in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "The  statement in isCHPossible() does not match to any statements in  _copyTo(clonedG GraphHopperStorage)",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private nodeA : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to private nodeA : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private nodeB : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to private nodeB : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package baseNode : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package baseNode : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package edgeId : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package edgeId : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package nextEdge : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package nextEdge : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private reverse : boolean from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to private reverse : boolean from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected edgePointer : long from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to protected edgePointer : long from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private maxEdges : long from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to private maxEdges : long from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package reverse : boolean from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package reverse : boolean from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package filter : EdgeFilter from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package filter : EdgeFilter from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package edgePointer : long from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package edgePointer : long from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package adjNode : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to package adjNode : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "Move class refactoring",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package calcPathViaQuery(graph Graph, fromLat double, fromLon double, toLat double, toLon double) : Path renamed to package calcPathViaQuery_(ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.graphhopper.storage.GraphHopperStorage.EdgeIterable moved to com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator moved to com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testCalcShortestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testWeightLimit() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testViaEdges_FromEqualsTo() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graphShortest : Graph to ghStorage : GraphHopperStorage in method public testCalcFootPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testViaEdges_WithCoordinates() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testWikipediaShortestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : Graph to ghStorage : GraphHopperStorage in method protected createAlgo(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter graph : Graph to ghStorage : GraphHopperStorage in method package calcPath(ghStorage GraphHopperStorage, fromNode1 int, fromNode2 int, toNode1 int, toNode2 int) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter graph : Graph to ghStorage : GraphHopperStorage in method package calcPathViaQuery_(weighting String, ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable g : LevelGraphStorage to lg : LevelGraphImpl in method public testGetWeightIfAdvancedEncoder() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable lg : LevelGraph to ghStorage : GraphHopperStorage in method public getMatrixGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable g : Graph to ghStorage : GraphHopperStorage in method public testBaseGraph() : void from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : Graph to ghStorage : GraphHopperStorage in method public createFactory(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter tmpGraph : GraphStorage to ghStorage : GraphHopperStorage in method protected createReader(ghStorage GraphHopperStorage) : DataReader from class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter graph : GraphStorage to ghStorage : GraphHopperStorage in method public setGraphHopperStorage(ghStorage GraphHopperStorage) : void from class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : LevelGraph to baseGraph : Graph in method public PrepareContractionHierarchies(dir Directory, baseGraph Graph, levelGraph LevelGraph, encoder FlagEncoder, weighting Weighting, traversalMode TraversalMode) from class com.graphhopper.routing.ch.PrepareContractionHierarchies",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : GraphStorage to ghStorage : GraphHopperStorage in method public testEstimatedCenter() : void from class com.graphhopper.reader.OSMReaderTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : GraphStorage to graph : GraphHopperStorage in method public TarjansStronglyConnectedComponentsAlgorithm(graph GraphHopperStorage, edgeFilter EdgeFilter) from class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : GraphStorage to ghStorage : GraphHopperStorage in method public testGetRestrictionAsEntries() : void from class com.graphhopper.reader.OSMTurnRelationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : GraphStorage to ghStorage : GraphHopperStorage in method public PrepareRoutingSubnetworks(ghStorage GraphHopperStorage, em EncodingManager) from class com.graphhopper.routing.util.PrepareRoutingSubnetworks",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute graph : GraphStorage to ghStorage : GraphHopperStorage in class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute graphStorage : GraphStorage to graph : Graph in class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute g : GraphStorage to graph : GraphHopperStorage in class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute g : GraphStorage to baseGraph : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworks",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute level : boolean to levelGraph : boolean in class com.graphhopper.storage.GraphBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute graphStorage : GraphStorage to ghStorage : GraphStorage in class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable ghStorage : GraphHopperStorage in method public testRelation() : void from class com.graphhopper.reader.OSMReaderTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable ghStorage : GraphHopperStorage in method public testTurnFlagCombination() : void from class com.graphhopper.reader.OSMReaderTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter bothDirections : boolean to bothDirection : boolean in method public edge(a int, b int, distance double, bothDirection boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph",
    "comment" : "<p>Move Method public edge(a int, b int, distance double, bothDirections boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph to public edge(a int, b int, distance double, bothDirections boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage<br /><br /> Move Method public edge(a int, b int, distance double, bothDirection boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage to public edge(a int, b int, distance double, bothDirection boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package abstract createGraph(location String, is3D boolean) : GraphStorage renamed to package abstract createGHStorage(location String, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter graph : Graph to ghStorage : GraphHopperStorage in method package calcPathViaQuery_(ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : Graph to ghStorage : GraphHopperStorage in method public abstract createFactory(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : LevelGraph to levelGraph : LevelGraph in method public PrepareContractionHierarchies(dir Directory, baseGraph Graph, levelGraph LevelGraph, encoder FlagEncoder, weighting Weighting, traversalMode TraversalMode) from class com.graphhopper.routing.ch.PrepareContractionHierarchies",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter storage : GraphStorage to ghStorage : GraphHopperStorage in method public OSMReader(ghStorage GraphHopperStorage) from class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : Graph to ghStorage : GraphHopperStorage in method package createAlgos(ghStorage GraphHopperStorage, idx LocationIndex, encoder FlagEncoder, withCh boolean, tMode TraversalMode, weighting Weighting, manager EncodingManager) : List<AlgoHelperEntry> from class com.graphhopper.routing.RoutingAlgorithmIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : GraphStorage to g : GraphHopperStorage in method protected loadGraph(g GraphHopperStorage) : GraphHopper from class com.graphhopper.GraphHopper",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type graph : GraphStorage to ghStorage : GraphHopperStorage in method public setGraphHopperStorage(ghStorage GraphHopperStorage) : void from class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type tmpGraph : GraphStorage to ghStorage : GraphHopperStorage in method protected createReader(ghStorage GraphHopperStorage) : DataReader from class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type storage : GraphStorage to ghStorage : GraphHopperStorage in method public OSMReader(ghStorage GraphHopperStorage) from class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : GraphStorage to ghStorage : GraphHopperStorage in method public PrepareRoutingSubnetworks(ghStorage GraphHopperStorage, em EncodingManager) from class com.graphhopper.routing.util.PrepareRoutingSubnetworks",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : GraphStorage to graph : GraphHopperStorage in method public TarjansStronglyConnectedComponentsAlgorithm(graph GraphHopperStorage, edgeFilter EdgeFilter) from class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type that : GraphHopperStorage to that : BaseGraph in method public GHNodeAccess(that BaseGraph, withElevation boolean) from class com.graphhopper.storage.GHNodeAccess",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type graph : GraphStorage to graph : Graph in method public init(graph Graph, dir Directory) : void from class com.graphhopper.storage.TurnCostExtension",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type tmpGraph : GraphStorage to tmpGraph : GraphHopperStorage in method protected createReader(tmpGraph GraphHopperStorage) : DataReader from class com.graphhopper.reader.OSMReaderTest.GraphHopperTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.AStarBidirectionTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.AStarTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to g : GraphHopperStorage in method protected createAlgo(g GraphHopperStorage) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method protected createAlgo(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type graph : Graph to ghStorage : GraphHopperStorage in method package calcPathViaQuery_(ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type graph : Graph to ghStorage : GraphHopperStorage in method package calcPathViaQuery_(weighting String, ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type graph : Graph to ghStorage : GraphHopperStorage in method package calcPath(ghStorage GraphHopperStorage, fromNode1 int, fromNode2 int, toNode1 int, toNode2 int) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.DijkstraBidirectionRefTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.DijkstraOneToManyTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.DijkstraTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method package createAlgos(ghStorage GraphHopperStorage, idx LocationIndex, encoder FlagEncoder, withCh boolean, tMode TraversalMode, weighting Weighting, manager EncodingManager) : List<AlgoHelperEntry> from class com.graphhopper.routing.RoutingAlgorithmIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method public createFactory(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : LevelGraphStorage to g : LevelGraph in method package initUnpackingGraph(g LevelGraph, w Weighting) : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : GraphStorage to g : GraphHopperStorage in method private printGraphDetails(g GraphHopperStorage, vehicleStr String) : void from class com.graphhopper.tools.Measurement",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type graph : GraphStorage to graph : Graph in method public init(graph Graph, dir Directory) : void from class com.graphhopper.storage.GraphExtension",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method public abstract createFactory(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public getGraphHopperStorage() : GraphHopperStorage from class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraphStorage to LevelGraph in method public levelGraphBuild() : LevelGraph from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraphStorage to LevelGraph in method public levelGraphCreate() : LevelGraph from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public build() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public create() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public load() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public create(byteCount long) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package newGraph(directory String, encodingManager EncodingManager, is3D boolean, turnRestrictionsImport boolean) : GraphHopperStorage from class com.graphhopper.reader.OSMReaderTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method protected createWikipediaTestGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method public getMatrixGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method public getMatrixAlikeGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method private createMatrixAlikeGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method protected createGHStorage(is3D boolean) : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method protected createTestStorage() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method protected createStorage(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method public getMatrixGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraph to GraphHopperStorage in method protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraph to GraphHopperStorage in method package createExampleGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraph to GraphHopperStorage in method package createGHStorage() : GraphHopperStorage from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package createStorage(eman EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package createSubnetworkTestStorage() : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package createSubnetworkTestStorage2(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package createDeadEndUnvisitedNetworkStorage(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package createTarjanTestStorage() : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method protected createGHStorage() : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method protected newRAMGHStorage() : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public createGHStorage(location String, enabled3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorageTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method protected newGHStorage(dir Directory, enabled3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorageTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method protected newGHStorage(dir Directory, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public createGHStorage(location String, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphStorageViaMMapTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.index.AbstractLocationIndexTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraph to GraphHopperStorage in method package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method package abstract createGHStorage(location String, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type graph : GraphStorage to ghStorage : GraphHopperStorage in class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type graphStorage : GraphStorage to graph : Graph in class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : LevelGraph to baseGraph : Graph in method public PrepareContractionHierarchies(dir Directory, baseGraph Graph, levelGraph LevelGraph, encoder FlagEncoder, weighting Weighting, traversalMode TraversalMode) from class com.graphhopper.routing.ch.PrepareContractionHierarchies",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type g : GraphStorage to baseGraph : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworks",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type g : GraphStorage to graph : GraphHopperStorage in class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to ghStorage : GraphHopperStorage in method public testEstimatedCenter() : void from class com.graphhopper.reader.OSMReaderTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to ghStorage : GraphHopperStorage in method public testGetRestrictionAsEntries() : void from class com.graphhopper.reader.OSMTurnRelationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testCalcShortestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testWeightLimit() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graphShortest : Graph to ghStorage : GraphHopperStorage in method public testCalcFootPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testWikipediaShortestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testViaEdges_FromEqualsTo() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testViaEdges_WithCoordinates() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : Graph to ghStorage : GraphHopperStorage in method public testBaseGraph() : void from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type lg : LevelGraph to ghStorage : GraphHopperStorage in method public getMatrixGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to lg : LevelGraphImpl in method public testGetWeightIfAdvancedEncoder() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type newGraph : GraphStorage to newGraph : GraphHopperStorage in method protected optimize() : void from class com.graphhopper.GraphHopper",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type prepareGraph : LevelGraph to prepareGraph : LevelGraphImpl in class com.graphhopper.routing.ch.PrepareContractionHierarchies",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type that : GraphHopperStorage to that : BaseGraph in class com.graphhopper.storage.GHNodeAccess",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to graph : GraphHopperStorage in method public build() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method public load() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to graph : GraphHopperStorage in method public testLoad() : void from class com.graphhopper.GraphHopperAPITest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to graph : GraphHopperStorage in method public testDisconnected179() : void from class com.graphhopper.GraphHopperAPITest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to graph : GraphHopperStorage in method public testMain() : void from class com.graphhopper.reader.OSMReaderTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : GraphStorage to graph : Graph in method public testTurnRestrictions() : void from class com.graphhopper.reader.OSMReaderTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type tmpGraph : GraphStorage to tmpGraph : GraphHopperStorage in method protected importData() : DataReader from class com.graphhopper.reader.OSMReaderTest.GraphHopperTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type matrixGraph : Graph to matrixGraph : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testWeightLimit_issue380() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graphShortest : Graph to graphShortest : GraphHopperStorage in method public testCalcFastestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graphFastest : Graph to graphFastest : GraphHopperStorage in method public testCalcFastestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testNoPathFound() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testBidirectional() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testBidirectional2() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testCannotCalculateSP() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testDirectedGraphBug1() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testDirectedGraphBug2() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testWithCoordinates() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testViaEdges_BiGraph() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testViaEdges_SpecialCases() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testQueryGraphAndFastest() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public test0SpeedButUnblocked_Issue242() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method protected createWikipediaTestGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method protected createTestStorage() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : Graph to g : GraphHopperStorage in method public testIssue239_and362() : void from class com.graphhopper.routing.DijkstraOneToManyTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testBasicTurnRestriction() : void from class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testUTurns() : void from class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testBasicTurnCosts() : void from class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testFound() : void from class com.graphhopper.routing.PathTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testTime() : void from class com.graphhopper.routing.PathTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testWayList() : void from class com.graphhopper.routing.PathTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type g : GraphStorage to g : GraphHopperStorage in class com.graphhopper.routing.QueryGraphTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type preparedMatrixGraph : Graph to preparedMatrixGraph : GraphHopperStorage in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : Graph to g : GraphHopperStorage in method public testBaseGraphMultipleVehicles() : void from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testShortestPathSkipNode() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testShortestPathSkipNode2() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testShortestPathLimit() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testAddShortcuts() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testDirectedGraph() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testDirectedGraph2() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testDirectedGraph3() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testRoundaboutUnpacking() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to g : GraphHopperStorage in method public testFindShortcuts_Roundabout() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to g : GraphHopperStorage in method public testUnpackingOrder() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to g : GraphHopperStorage in method public testUnpackingOrder_Fastest() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testCircleBug() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testBug178() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method package createExampleGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testFindSubnetworks() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testKeepLargestNetworks() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testRemoveSubnetworkIfOnlyOneVehicle() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testRemoveDeadEndUnvisitedNetworks() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testTarjan() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testNodeOrderingRegression() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package createSubnetworkTestStorage() : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package createSubnetworkTestStorage2(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package createDeadEndUnvisitedNetworkStorage(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package createTarjanTestStorage() : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type graph : GraphStorage to graph : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method public testCopyTo() : void from class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method public createGHStorage(location String, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphStorageViaMMapTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testLevelGraph() : void from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package start(args CmdArgs) : void from class com.graphhopper.tools.Measurement",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type baseGraph : Graph to baseGraph : BaseGraph in class com.graphhopper.storage.LevelGraphImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testCannotBeLoadedWithNormalGraphHopperStorageClass() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable queryGraph : QueryGraph to routingGraph : Graph in method protected getPaths(request GHRequest, rsp GHResponse) : List<Path> in class com.graphhopper.GraphHopper",
    "comment" : "<p>queryGraph is composed of routingGraph<br /><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-smi'>QueryGraph</span> queryGraph <span class='pl-k'>=</span> <span class='pl-k'>new</span> <span class='pl-smi'>QueryGraph</span>(routingGraph);</span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute lg : LevelGraph to listener : InternalGraphEventListener in class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter lg : LevelGraph to listener : InternalGraphEventListener in method public BaseGraph(dir Directory, encodingManager EncodingManager, withElevation boolean, listener InternalGraphEventListener, internalPropAccess InternalGraphPropertyAccess, extendedStorage GraphExtension) in class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter edgeIterState : EdgeIteratorState to from : EdgeIteratorState in method package copyProperties(from EdgeIteratorState, to EdgeIteratorState) : EdgeIteratorState in class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter edgeIterState : EdgeIteratorState to to : EdgeIteratorState in method package copyProperties(from EdgeIteratorState, to EdgeIteratorState) : EdgeIteratorState in class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter list : PointList to pillarNodes : PointList in method public setWayGeometry(pillarNodes PointList) : EdgeIteratorState in class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "<p>method&nbsp;setWayGeometry() is moved from&nbsp;GraphHopperStorage to BaseGraph with the same parameter name</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute bitUtil : BitUtil to baseGraph : BaseGraph in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "<p>GraphHopperStorage has a containment relationship with BaseGraph after refactoring, and bitUtil is moved to BaseGraph</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter sizeInBytes : int to enableCH : boolean in method public GraphHopperStorage(enableCH boolean, dir Directory, encodingManager EncodingManager, withElevation boolean, extendedStorage GraphExtension) in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter name : String to clazz : Class<T> in method public getGraph(clazz Class<T>) : T in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : Graph to store : GraphHopperStorage in method public newStorage(store GraphHopperStorage) : GraphHopperStorage in class com.graphhopper.util.GHUtility",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter g : Graph to ghStorage : GraphHopperStorage in method protected getGraph(ghStorage GraphHopperStorage) : LevelGraph in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : "<p>getGraph() is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable g : LevelGraph to lg : LevelGraph in method public testMoreComplexGraph() : void in class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : "<p>lg is created through g<br /><span class='pl-smi'>LevelGraph</span> lg <span class='pl-k'>=</span> g<span class='pl-k'>.</span>getGraph(<span class='pl-smi'>LevelGraph</span><span class='pl-k'>.</span>class);</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable lg : LevelGraph to g : GraphHopperStorage in method public testSortHighLevelFirst() : void in class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : "<p>lg is created through g<br /><span class='pl-k'>final</span> <span class='pl-smi'>LevelGraph</span> lg <span class='pl-k'>=</span> g<span class='pl-k'>.</span>getGraph(<span class='pl-smi'>LevelGraph</span><span class='pl-k'>.</span>class);</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type lg : LevelGraph to listener : InternalGraphEventListener in method public BaseGraph(dir Directory, encodingManager EncodingManager, withElevation boolean, listener InternalGraphEventListener, internalPropAccess InternalGraphPropertyAccess, extendedStorage GraphExtension) in class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type sizeInBytes : int to enableCH : boolean in method public GraphHopperStorage(enableCH boolean, dir Directory, encodingManager EncodingManager, withElevation boolean, extendedStorage GraphExtension) in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to store : GraphHopperStorage in method public newStorage(store GraphHopperStorage) : GraphHopperStorage in class com.graphhopper.util.GHUtility",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method createAlgos(ghStorage GraphHopperStorage, idx LocationIndex, encoder FlagEncoder, withCh boolean, tMode TraversalMode, weighting Weighting, manager EncodingManager) : List<AlgoHelperEntry> in class com.graphhopper.routing.RoutingAlgorithmIT",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method protected getGraph(ghStorage GraphHopperStorage) : LevelGraph in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type tmpGraph : Graph to tmpGraph : GraphHopperStorage in method private createMatrixAlikeGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testPerformance() : void from class com.graphhopper.routing.RoutingAlgorithmIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type LevelGraphStorage to LevelGraph in method public create(bytes long) : LevelGraph from class com.graphhopper.storage.LevelGraphImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter nodeCount : long to bytes : long in method public create(bytes long) : LevelGraph from class com.graphhopper.storage.LevelGraphImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type int to double in method public getDistance() : double in class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type int to long in method public getFlags() : long in class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to double in method public getDistance() : double in class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type EdgeIteratorState to T in method public getGraph(clazz Class<T>) : T in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to boolean in method public isCHPossible() : boolean in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type PointList to GraphHopperStorage in method public create(byteCount long) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type int to long in method public getCapacity() : long in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type EdgeIteratorState to BaseGraph.SingleEdge in method public createSingleEdge(edgeId int, nodeId int) : BaseGraph.SingleEdge in class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.baseGraphPropAccess",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type EdgeIteratorState to BaseGraph.SingleEdge in method public createSingleEdge(edgeId int, nodeId int) : BaseGraph.SingleEdge in class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.chPropAccess",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type long to void in method public initStorage() : void in class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.listener",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method abstract createGHStorage(location String, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type queryGraph : QueryGraph to routingGraph : Graph in method protected getPaths(request GHRequest, rsp GHResponse) : List<Path> in class com.graphhopper.GraphHopper",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type lg : LevelGraph to listener : InternalGraphEventListener in class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type bitUtil : BitUtil to baseGraph : BaseGraph in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type nodeAccess : NodeAccess to chGraph : LevelGraphImpl in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type hash : int to cnt : long in method public getCapacity() : long in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type iter : EdgeIterable to chPropAccess : InternalGraphPropertyAccess in method public GraphHopperStorage(enableCH boolean, dir Directory, encodingManager EncodingManager, withElevation boolean, extendedStorage GraphExtension) in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type edgePointer : long to isShortcut : boolean in method public reverseFlags(edgePointer long, flags long...) : long in class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.chPropAccess",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testTwoWeightsPerEdge() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testTwoWeightsPerEdge2() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : Graph to g : GraphHopperStorage in method public testDifferentEdgeFilter() : void from class com.graphhopper.routing.DijkstraOneToManyTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type graphWithTurnCosts : GraphStorage to graphWithTurnCosts : GraphHopperStorage in method public testTurnCostsProperlyPropagated_Issue282() : void from class com.graphhopper.routing.QueryGraphTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g2 : LevelGraphStorage to g2 : LevelGraphImpl in method public testPathRecursiveUnpacking() : void from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method private initExampleGraph() : Graph from class com.graphhopper.routing.util.Bike2WeightFlagEncoderTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method protected createGHStorage() : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method public createGHStorage(location String, enabled3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorageTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package getCapacity() : long extracted from public getCapacity() : long in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public loadExisting() : boolean extracted from public loadExisting() : boolean in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.LevelGraphImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package toDetailsString() : String extracted from public toDetailsString() : String in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.LevelGraphImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createGraph(encodingManager EncodingManager) : Graph renamed to package createGHStorage(encodingManager EncodingManager) : GraphHopperStorage in class com.graphhopper.storage.index.AbstractLocationIndexTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.graphhopper.storage.GraphHopperStorage.SingleEdge moved to com.graphhopper.storage.BaseGraph.SingleEdge",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private getFlags(edgePointer long, reverse boolean) : long from class com.graphhopper.storage.GraphHopperStorage to package getFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "- Rename Variable-",
      "mappingState" : 5,
      "validationComment" : "Rename Variable and Move Method on top"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private setFlags(edgePointer long, reverse boolean, flags long) : void from class com.graphhopper.storage.GraphHopperStorage to package setFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean, flags long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Changes are within the Move Method refactoring mechanics\n",
      "mappingState" : 1,
      "validationComment" : "Move Method mechanics caused a justifiable change"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private setWayGeometry(pillarNodes PointList, edgePointer long, reverse boolean) : void from class com.graphhopper.storage.GraphHopperStorage to private setWayGeometry_(pillarNodes PointList, edgePointer long, reverse boolean) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private fetchWayGeometry(edgePointer long, reverse boolean, mode int, baseNode int, adjNode int) : PointList from class com.graphhopper.storage.GraphHopperStorage to private fetchWayGeometry_(edgePointer long, reverse boolean, mode int, baseNode int, adjNode int) : PointList from class com.graphhopper.storage.BaseGraph",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter edge : int to edgeId : int in method public SingleLevelEdge(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, edgeId int, nodeId int) from class com.graphhopper.storage.LevelGraphImpl.SingleLevelEdge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package createGraph(location String, is3D boolean) : GraphStorage renamed to package createGHStorage(location String, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : "<p>abstract methods</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getNodes() : int extracted from package contractNodes() : void in class com.graphhopper.routing.ch.PrepareContractionHierarchies & moved to class com.graphhopper.storage.LevelGraphImpl",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setGraphHopperStorage(ghStorage GraphHopperStorage) : void extracted from protected importData() : DataReader in class com.graphhopper.reader.OSMReaderTest.GraphHopperTest & moved to class com.graphhopper.GraphHopper",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNodeAccess() : NodeAccess renamed to protected setNodesHeader() : int in class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getBounds() : BBox renamed to protected loadEdgesHeader() : int in class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public copyTo(g Graph) : Graph renamed to public setAdditionalEdgeField(edgePointer long, value int) : void in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private inPlaceNodeRemove(removeNodeCount int) : void renamed to private _copyTo(clonedG GraphHopperStorage) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected initStorage() : void renamed to public flush() : void in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected loadNodesHeader() : int renamed to public getCapacity() : long in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected setNodesHeader() : int renamed to public toString() : String in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected loadEdgesHeader() : int renamed to public getNodes() : int in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected setEdgesHeader() : int renamed to public getNodeAccess() : NodeAccess in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected loadWayGeometryHeader() : int renamed to public getBounds() : BBox in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected setWayGeometryHeader() : int renamed to public edge(a int, b int) : EdgeIteratorState in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public close() : void renamed to public getEdgeProps(edgeId int, adjNode int) : EdgeIteratorState in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isClosed() : boolean renamed to public getAllEdges() : AllEdgesIterator in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getExtension() : GraphExtension renamed to public createEdgeExplorer(filter EdgeFilter) : EdgeExplorer in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCapacity() : long renamed to public createEdgeExplorer() : EdgeExplorer in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private stringHashCode(str String) : int renamed to public getExtension() : GraphExtension in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public toString() : String renamed to public getBaseGraph() : Graph in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public reverseFlags(edgePointer long, flags long) : long from class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.baseGraphPropAccess.new InternalGraphPropertyAccess",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method protected initStorage() : void from class com.graphhopper.storage.LevelGraphStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method protected createSingleEdge(edge int, nodeId int) : SingleEdge from class com.graphhopper.storage.LevelGraphStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method protected loadEdgesHeader() : int from class com.graphhopper.storage.LevelGraphStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method protected setEdgesHeader() : int from class com.graphhopper.storage.LevelGraphStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseGraph : Graph in method public PrepareContractionHierarchies(dir Directory, baseGraph Graph, levelGraph LevelGraph, encoder FlagEncoder, weighting Weighting, traversalMode TraversalMode) from class com.graphhopper.routing.ch.PrepareContractionHierarchies",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseGraph : Graph in method public AlgoHelperEntry(g Graph, baseGraph Graph, opts AlgorithmOptions, idx LocationIndex) from class com.graphhopper.routing.util.TestAlgoCollector.AlgoHelperEntry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter dir : Directory in method public init(graph Graph, dir Directory) : void from class com.graphhopper.storage.TurnCostExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseGraph : BaseGraph in method public EdgeIterable(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, filter EdgeFilter) from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter propAccess : InternalGraphPropertyAccess in method public EdgeIterable(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, filter EdgeFilter) from class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseGraph : BaseGraph in method public EdgeSkipIteratorImpl(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, filter EdgeFilter) from class com.graphhopper.storage.LevelGraphImpl.EdgeSkipIteratorImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter propAccess : InternalGraphPropertyAccess in method public EdgeSkipIteratorImpl(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, filter EdgeFilter) from class com.graphhopper.storage.LevelGraphImpl.EdgeSkipIteratorImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseGraph : BaseGraph in method public SingleLevelEdge(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, edgeId int, nodeId int) from class com.graphhopper.storage.LevelGraphImpl.SingleLevelEdge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter propAccess : InternalGraphPropertyAccess in method public SingleLevelEdge(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, edgeId int, nodeId int) from class com.graphhopper.storage.LevelGraphImpl.SingleLevelEdge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter tmpPropAccess : InternalGraphPropertyAccess in method package getFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter tmpPropAccess : InternalGraphPropertyAccess in method package setFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean, flags long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter dir : Directory in method public init(graph Graph, dir Directory) : void from class com.graphhopper.storage.GraphExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getFlags() : long from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "<p>new method in new inner class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "<p>new method in new inner class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getName() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : "<p>new method in new inner class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public markNodeRemoved(index int) : void from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public isNodeRemoved(index int) : boolean from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public isClosed() : boolean from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public getExtension() : GraphExtension from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public toDetailsString() : String from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public reverseFlags(edgePointer long, flags long) : long from class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.baseGraphPropAccess.new InternalGraphPropertyAccess",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected createAlgo(g GraphHopperStorage) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected createAlgo(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package initStorage() : void from class com.graphhopper.storage.LevelGraphImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package initNodeRefs(oldCapacity long, newCapacity long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package getFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package setFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean, flags long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package getRemovedNodes() : GHBitSet from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected trimToSize() : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package inPlaceNodeRemove(removeNodeCount int) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package initStorage() : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter propAccess : InternalGraphPropertyAccess in method public SingleEdge(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, edgeId int, nodeId int) from class com.graphhopper.storage.BaseGraph.SingleEdge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter baseGraph : BaseGraph in method public SingleEdge(baseGraph BaseGraph, propAccess InternalGraphPropertyAccess, edgeId int, nodeId int) from class com.graphhopper.storage.BaseGraph.SingleEdge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package lastEdgeIndex : int from class com.graphhopper.storage.LevelGraphImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package scDirMask : long from class com.graphhopper.storage.LevelGraphImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected nodeCount : int from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package wayGeometry : DataAccess from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package nameIndex : NameIndex from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package bitUtil : BitUtil from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package flagsSizeIsLong : boolean from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package nodeAccess : NodeAccess from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public getNodes() : int from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public getNodeAccess() : NodeAccess from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public getBounds() : BBox from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public edge(a int, b int, distance double, bothDirections boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public edge(a int, b int) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public getAllEdges() : AllEdgesIterator from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public getEdgeProps(edgeId int, adjNode int) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public createEdgeExplorer(filter EdgeFilter) : EdgeExplorer from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public createEdgeExplorer() : EdgeExplorer from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public copyTo(g Graph) : Graph from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public getExtension() : GraphExtension from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method protected newRAMGHStorage() : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method package getFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method package setFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean, flags long) : void from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method protected createAlgo(g GraphHopperStorage) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method protected createAlgo(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier final in method public reverseFlags(edgePointer long, flags long) : long from class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.baseGraphPropAccess.new InternalGraphPropertyAccess",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private exitOnlyPillarNodeException : boolean from class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private outExplorerMap : Map<FlagEncoder,EdgeExplorer> from class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private inExplorerMap : Map<FlagEncoder,EdgeExplorer> from class com.graphhopper.reader.OSMReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public newGHStorage(dir Directory, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type grap : GraphStorage to grap : Graph in method public init(grap Graph, dir Directory) : void from class com.graphhopper.storage.GraphExtension.NoOpExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter dir : Directory in method public init(grap Graph, dir Directory) : void from class com.graphhopper.storage.GraphExtension.NoOpExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter g : GraphStorage in method public TarjansStronglyConnectedComponentsAlgorithm(g GraphStorage, edgeFilter EdgeFilter) from class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter filter : EdgeFilter in method public createEdgeExplorer(filter EdgeFilter) : EdgeExplorer from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier final in class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier static in class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier static in class com.graphhopper.storage.BaseGraph.EdgeIterable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Graph to GraphHopperStorage in method package createGHStorage(encodingManager EncodingManager) : GraphHopperStorage from class com.graphhopper.storage.index.AbstractLocationIndexTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to g : LevelGraphImpl in method public testDisconnectEdge() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to g : LevelGraphImpl in method public testGetWeight() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testMoreComplexGraph() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testFindShortcuts_Roundabout() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testLevelGraph() : void from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testDirectedGraph2() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testAddShortcuts() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testUnpackingOrder_Fastest() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testRoundaboutUnpacking() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testDirectedGraph() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testUnpackingOrder() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable graph : GraphHopperStorage to storage : GraphHopperStorage in method public internalDisconnect() : void from class com.graphhopper.storage.GraphHopperStorageTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable lg : LevelGraphStorage to g : GraphHopperStorage in method public testLevelGraphBug() : void from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable g : LevelGraphStorage to storage : GraphHopperStorage in method public testPriosWhileDeleting() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type g : LevelGraphStorage to storage : GraphHopperStorage in method public testPriosWhileDeleting() : void from class com.graphhopper.storage.GraphHopperStorageCHTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type lg : LevelGraphStorage to g : GraphHopperStorage in method public testLevelGraphBug() : void from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type tmpGraph : GraphStorage to tmpGraph : GraphHopperStorage in method protected createReader(tmpGraph GraphHopperStorage) : DataReader from class com.graphhopper.reader.OSMReaderTest.testWithBounds.hopper.new GraphHopperTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type tmpGraph : GraphStorage to tmpGraph : GraphHopperStorage in method protected createReader(tmpGraph GraphHopperStorage) : DataReader from class com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM.hopper.importOrLoad.setElevation.new GraphHopperTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable res : long to resFlags : long in method package getFlags_(tmpPropAccess InternalGraphPropertyAccess, edgePointer long, reverse boolean) : long from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier static in class com.graphhopper.storage.BaseGraph.SingleEdge",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method package guessStorage(g Graph, outdir Directory, encodingManager EncodingManager) : GraphStorage inlined to public newStorage(store GraphHopperStorage) : GraphHopperStorage in class com.graphhopper.util.GHUtility",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "if statement has been removed. Although the new method only accepts GraphHopperStorage, the logic has been changed. Also, the replacement between the two constructor is not justifiable because there is no corresponding Add Parameter refactoring for that change"
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type store : GraphStorage to store : GraphHopperStorage in method public newStorage(store GraphHopperStorage) : GraphHopperStorage from class com.graphhopper.util.GHUtility",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type GraphStorage to GraphHopperStorage in method public newStorage(store GraphHopperStorage) : GraphHopperStorage from class com.graphhopper.util.GHUtility",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public edge(a int, b int, distance double, bothDirections boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph to public edge(a int, b int, distance double, bothDirections boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public edge(a int, b int, distance double, bothDirection boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage to public edge(a int, b int, distance double, bothDirection boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable lg : LevelGraph in method public testMoreComplexGraph() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3012
}, {
  "id" : 1118067,
  "repository" : "https://github.com/Graylog2/graylog2-server.git",
  "sha1" : "2ef067fc70055fc4d55c75937303414ddcf07e0e",
  "url" : "https://github.com/Graylog2/graylog2-server/commit/2ef067fc70055fc4d55c75937303414ddcf07e0e",
  "author" : "Dennis Oelkers",
  "time" : "6/17/15 8:59 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class integration.BaseRestTest.KeysPresentMatcher moved to integration.BaseRestTestHelper.KeysPresentMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass integration.BaseRestTestHelper from class integration.BaseRestTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getServerUrl() : URL renamed to private getDefaultServerUrl() : URL in class integration.util.graylog.GraylogControl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public containsAllKeys(keys String...) : ResponseAwareMatcher<Response> from class integration.BaseRestTest to public containsAllKeys(keys String...) : ResponseAwareMatcher<Response> from class integration.BaseRestTestHelper",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected jsonResourceForMethod() : byte[] from class integration.BaseRestTest to protected jsonResourceForMethod() : byte[] from class integration.BaseRestTestHelper",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method protected jsonResource(relativeFileName String) : byte[] from class integration.BaseRestTest to protected jsonResource(relativeFileName String) : byte[] from class integration.BaseRestTestHelper",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class integration.RestAssuredSetupRule from class integration.BaseRestTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class integration.RequiredVersionRule from class integration.BaseRestTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private log : Logger from class integration.BaseRestTest to private log : Logger from class integration.RequiredVersionRule",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private serverUnderTestVersion : Version from class integration.BaseRestTest to private serverUnderTestVersion : Version from class integration.RestAssuredSetupRule",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public setupTestSuite() : void from class integration.BaseRestTest to protected before() : void from class integration.RestAssuredSetupRule",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Tolerable changes in the body\n",
      "mappingState" : 5,
      "validationComment" : "The change -getServerURL -> getURL- is pure based on manual validation but PurityChecker does not have enough information to justify the change"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public onTestStart(iTestResult ITestResult) : void from class integration.SeedListener to public apply(base Statement, method FrameworkMethod, target Object) : Statement from class integration.MongoDbSeedRule",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public run(callBack IHookCallBack, testResult ITestResult) : void from class integration.BaseRestTest to public apply(base Statement, method FrameworkMethod, target Object) : Statement from class integration.RequiredVersionRule",
    "comment" : "<p>its associated with Extract class refactoring: Extract Class integration.RequiredVersionRule from class integration.BaseRestTest</p>",
    "validation" : "TP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method protected before() : void from class integration.RestAssuredSetupRule",
    "comment" : "<p>@BeforeSuite public void setupTestSuite() -&gt; @Override protected void before()</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @BeforeSuite in method public setupTestSuite() : void from class integration.BaseRestTest",
    "comment" : "<p>@BeforeSuite public void setupTestSuite() -&gt; @Override protected void before()</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Test(dependsOnMethods = \"createGrokPattern\") to @Test in method public listPatterns() : void from class integration.system.grok.GrokTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Test(dependsOnMethods = \"listPatterns\") to @Test in method public deletePattern() : void from class integration.system.grok.GrokTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Test(dependsOnMethods = \"createInputTest\") to @Test in method public listInput() : void from class integration.system.inputs.InputsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @Listeners({BaseRestTest.class,SeedListener.class}) in class integration.BaseRestTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test in method public listPatterns() : void from class integration.system.grok.GrokTests",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test in method public deletePattern() : void from class integration.system.grok.GrokTests",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Test in method public listInput() : void from class integration.system.inputs.InputsTest",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Test(dependsOnMethods = \"createGrokPattern\") in method public listPatterns() : void from class integration.system.grok.GrokTests",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Test(dependsOnMethods = \"listPatterns\") in method public deletePattern() : void from class integration.system.grok.GrokTests",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Test(dependsOnMethods = \"createInputTest\") in method public listInput() : void from class integration.system.inputs.InputsTest",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type Throwable in method protected before() : void from class integration.RestAssuredSetupRule",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private getDefaultServerUrl() : URL from class integration.util.graylog.GraylogControl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected before() : void from class integration.RestAssuredSetupRule",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private url : URL from class integration.util.graylog.GraylogControl",
    "comment" : "<p>public URL getUrl()<br />called in file<br />integration-tests/src/test/java/integration/RestAssuredSetupRule.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : URISyntaxException to e : URISyntaxException|MalformedURLException in method private getDefaultServerUrl() : URL from class integration.util.graylog.GraylogControl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable uriBuilder : URIBuilder in method private getDefaultServerUrl() : URL from class integration.util.graylog.GraylogControl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable graylogController : GraylogControl in method protected before() : void from class integration.RestAssuredSetupRule",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable url : URL in method protected before() : void from class integration.RestAssuredSetupRule",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1121326,
  "repository" : "https://github.com/droolsjbpm/drools.git",
  "sha1" : "c8e09e2056c54ead97bce4386a25b222154223b1",
  "url" : "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
  "author" : "kedzie",
  "time" : "6/21/15 6:50 PM",
  "refactorings" : [ {
    "type" : "Extract Interface",
    "description" : "Extract Interface org.drools.core.util.ByteArrayClassLoader from class org.drools.core.base.ClassFieldAccessorCache.ByteArrayClassLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public loadClass(className String, classLoader ClassLoader) : Class<?> extracted from public instantiateObject(className String, classLoader ClassLoader) : Object in class org.drools.core.util.ClassUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Return expression has been added"
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.drools.core.base.ClassFieldAccessorCache.ByteArrayClassLoader renamed to org.drools.core.base.ClassFieldAccessorCache.DefaultByteArrayClassLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method protected loadClass(name String, resolve boolean) : Class<?> from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to protected loadClass(name String, resolve boolean) : Class<?> from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
    "comment" : "InternalTypesClassLoader renamed to DefaultInternalTypesClassLoader. a new interface is added which is called InternalTypesClassLoader ",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private makeClassLoader() : InternalTypesClassLoader extracted from private defineType(name String, bytecode byte[]) : Class<?> in class org.drools.core.common.ProjectClassLoader",
    "comment" : "<p>There is only one class instance creation statement in the extracted method which exists in the place where the method is also extracted. It&nbsp;<strong>can be</strong>&nbsp;extract method then.</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "compeletely different"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private makeClassLoader() : ClassLoader extracted from public onAdd(registry DialectRuntimeRegistry, rootClassLoader ClassLoader) : void in class org.drools.core.rule.JavaDialectRuntimeData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "compeletely different"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private makeClassLoader() : ClassLoader extracted from public reload() : void in class org.drools.core.rule.JavaDialectRuntimeData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "compeletely different"
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method private loadType(name String, resolve boolean) : Class<?> from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to public loadType(name String, resolve boolean) : Class<?> from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method public defineClass(name String, bytecode byte[]) : Class<?> from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to public defineClass(name String, bytecode byte[]) : Class<?> from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Attribute",
    "description" : "Push Down Attribute private projectClassLoader : ProjectClassLoader from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to private projectClassLoader : ProjectClassLoader from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
    "comment" : "<p>InternalTypesClassLoader renamed to DefaultInternalTypesClassLoader. a new interface is added which is called InternalTypesClassLoader</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Subclass",
    "description" : "Extract Subclass org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type classLoader : PackageClassLoader to classLoader : ClassLoader in method private wireAll(classLoader ClassLoader, invokerLookups Map<String,Object>, wireList List<String>) : void from class org.drools.core.rule.JavaDialectRuntimeData",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type classLoader : PackageClassLoader to classLoader : ClassLoader in method private wire(classLoader ClassLoader, invokerLookups Map<String,Object>, className String) : void from class org.drools.core.rule.JavaDialectRuntimeData",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type classLoader : PackageClassLoader to classLoader : ClassLoader in method private wire(classLoader ClassLoader, className String, invoker Object) : void from class org.drools.core.rule.JavaDialectRuntimeData",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type classLoader : PackageClassLoader to classLoader : ClassLoader in method private WiringExecutor(classLoader ClassLoader, invokerLookups Map<String,Object>, wireList List<String>) from class org.drools.core.rule.JavaDialectRuntimeData.WiringExecutor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type classLoader : PackageClassLoader to classLoader : ClassLoader in class org.drools.core.rule.JavaDialectRuntimeData",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type classLoader : PackageClassLoader to classLoader : ClassLoader in class org.drools.core.rule.JavaDialectRuntimeData.WiringExecutor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private InternalTypesClassLoader(projectClassLoader ProjectClassLoader) from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to private DefaultInternalTypesClassLoader(projectClassLoader ProjectClassLoader) from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public instantiateObject(className String, args Object...) : Object extracted from public instantiateObject(className String) : Object in class org.drools.core.util.ClassUtils",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x, RMiner-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public defineClass(name String, bytecode byte[]) : Class<?> from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to public defineClass(name String, bytecode byte[]) : Class<?> from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
    "comment" : "<p>Push Down Method</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private loadType(name String, resolve boolean) : Class<?> from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to public loadType(name String, resolve boolean) : Class<?> from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
    "comment" : "<p>Push Down Method</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private projectClassLoader : ProjectClassLoader from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to private projectClassLoader : ProjectClassLoader from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
    "comment" : "<p>Push Down Attribute</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected loadClass(name String, resolve boolean) : Class<?> from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to protected loadClass(name String, resolve boolean) : Class<?> from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
    "comment" : "<p>Push Down Method</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package internalLoadClass(name String, resolve boolean) : Class<?> from class org.drools.core.common.ProjectClassLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package tryDefineType(name String, cnfe ClassNotFoundException) : Class<?> from class org.drools.core.common.ProjectClassLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public loadType(name String, resolve boolean) : Class<?> from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to package in class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier static in class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Type Declaration Kind",
    "description" : "Change Type Declaration Kind class to interface in type org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2686
}, {
  "id" : 1122787,
  "repository" : "https://github.com/wildfly/wildfly.git",
  "sha1" : "37d842bfed9779e662321a5ee43c36b058386843",
  "url" : "https://github.com/wildfly/wildfly/commit/37d842bfed9779e662321a5ee43c36b058386843",
  "author" : "Brian Stansberry",
  "time" : "6/23/15 8:14 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public executeReloadAndWaitForCompletion(client ModelControllerClient, timeout int) : void extracted from public executeReloadAndWaitForCompletion(client ModelControllerClient) : void in class org.jboss.as.test.shared.ServerReload",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private reloadServer(managementClient ManagementClient, timeout int) : void from class org.jboss.as.test.manualmode.ws.ReloadWSDLPublisherTestCase to public executeReloadAndWaitForCompletion(client ModelControllerClient, timeout int) : void from class org.jboss.as.test.shared.ServerReload",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter managementClient : ManagementClient to client : ModelControllerClient in method public executeReloadAndWaitForCompletion(client ModelControllerClient, timeout int) : void from class org.jboss.as.test.shared.ServerReload",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type managementClient : ManagementClient to client : ModelControllerClient in method public executeReloadAndWaitForCompletion(client ModelControllerClient, timeout int) : void from class org.jboss.as.test.shared.ServerReload",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private reloadServer(managementClient ManagementClient, timeout int) : void inlined to public testHelloStringAfterReload() : void in class org.jboss.as.test.manualmode.ws.ReloadWSDLPublisherTestCase",
    "comment" : "<p>Call to <span class='blob-code-inner blob-code-marker' data-code-marker='-'>executeReload</span>() changes to <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='x x-first x-last'>executeReloadAndWaitForCompletion</span>(</span>)<br />This is not an Inline Method.<br />reloadServer(managementClient ManagementClient, timeout int) : void<br />is a local method that is deleted, and its call is replaced with a call to <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='x x-first x-last'>executeReloadAndWaitForCompletion</span>(</span>)<br />which is statically imported<br /><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>import static</span> <span class='pl-smi'>org.jboss.as.test.shared.ServerReload.executeReloadAndWaitForCompletion</span></span></p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method private reloadServer(managementClient ManagementClient, timeout int) : void from class org.jboss.as.test.manualmode.ws.ReloadWSDLPublisherTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public executeReloadAndWaitForCompletion(client ModelControllerClient, timeout int) : void from class org.jboss.as.test.shared.ServerReload",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Attribute",
    "description" : "Parameterize Attribute TIMEOUT : int to timeout : int in method public executeReloadAndWaitForCompletion(client ModelControllerClient, timeout int) : void from class org.jboss.as.test.shared.ServerReload",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method public executeReloadAndWaitForCompletion(client ModelControllerClient, timeout int) : void from class org.jboss.as.test.shared.ServerReload",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 7514
}, {
  "id" : 1123651,
  "repository" : "https://github.com/WhisperSystems/Signal-Android.git",
  "sha1" : "99528dcc3b4a82b5e52a87d3e7aed5c6479028c7",
  "url" : "https://github.com/WhisperSystems/Signal-Android/commit/99528dcc3b4a82b5e52a87d3e7aed5c6479028c7",
  "author" : "Moxie Marlinspike",
  "time" : "6/23/15 2:15 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.thoughtcrime.securesms.contacts.ContactPhotoFactory.ExpandingLayerDrawable moved to org.thoughtcrime.securesms.contacts.avatars.ResourceContactPhoto.ExpandingLayerDrawable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private getSynchronousRecipient(context Context, recipientId long) : Recipient inlined to package getRecipient(context Context, recipientId long, asynchronous boolean) : Recipient in class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : "<p>getSynchronousRecipient() is renamed to getRecipientDetailsSync()</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private getRecipientDetails(context Context, number String) : RecipientDetails renamed to private getIndividualRecipientDetails(context Context, number String) : RecipientDetails in class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.thoughtcrime.securesms.contacts.ContactPhotoFactory moved to org.thoughtcrime.securesms.contacts.avatars.ContactPhotoFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable avatar : Drawable to contactPhoto : ContactPhoto in method private getGroupRecipientDetails(context Context, groupId String) : RecipientDetails from class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type avatar : Drawable to avatar : ContactPhoto in method public RecipientDetails(name String, number String, contactUri Uri, avatar ContactPhoto) from class org.thoughtcrime.securesms.recipients.RecipientProvider.RecipientDetails",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Drawable to ContactPhoto in method public getContactPhoto() : ContactPhoto from class org.thoughtcrime.securesms.recipients.Recipient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Drawable to ContactPhoto in method public getContactPhoto() : ContactPhoto from class org.thoughtcrime.securesms.recipients.Recipients",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Drawable to ContactPhoto in method public getGroupContactPhoto(avatar byte[]) : ContactPhoto from class org.thoughtcrime.securesms.contacts.avatars.ContactPhotoFactory",
    "comment" : "<p>Move   changeType&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type avatar : Drawable to contactPhoto : ContactPhoto in method private getGroupRecipientDetails(context Context, groupId String) : RecipientDetails from class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type contactPhoto : Drawable to contactPhoto : ContactPhoto in class org.thoughtcrime.securesms.recipients.Recipient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type contactPhoto : Drawable to contactPhoto : ContactPhoto in method private getIndividualRecipientDetails(context Context, number String) : RecipientDetails from class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type avatar : Drawable to avatar : ContactPhoto in class org.thoughtcrime.securesms.recipients.RecipientProvider.RecipientDetails",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter name : String to details : RecipientDetails in method package Recipient(recipientId long, details RecipientDetails) in class org.thoughtcrime.securesms.recipients.Recipient",
    "comment" : "<p>Parameters: <span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-smi x'>String</span> <span class='pl-v x'>number</span><span class='x x-last'>, </span><span class='pl-k'>long</span> <span class='pl-v'>recipientId</span>, <span class='pl-smi x x-first'>Uri</span> <span class='pl-v x'>contactUri</span><span class='x'>, </span><span class='pl-smi x'>Drawable</span> <span class='pl-v x x-last'>contactPhoto</span></span> were merged to <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-smi x x-first'>RecipientDetails</span> <span class='pl-v x x-last'>details</span></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter recipientId : long to number : String in method private getRecipientDetailsAsync(context Context, number String) : ListenableFutureTask<RecipientDetails> in class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : "<p>There is a local variable named number<br /><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>final</span> <span class='pl-smi'>String</span> number <span class='pl-k'>=</span> <span class='pl-smi'>CanonicalAddressDatabase</span><span class='pl-k'>.</span>getInstance(context)<span class='pl-k'>.</span>getAddressFromId(recipientId);</span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [number : String, contactUri : Uri, name : String, contactPhoto : Drawable] to details : RecipientDetails in method package Recipient(recipientId long, details RecipientDetails) from class org.thoughtcrime.securesms.recipients.Recipient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type name : String to details : RecipientDetails in method package Recipient(recipientId long, details RecipientDetails) in class org.thoughtcrime.securesms.recipients.Recipient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Drawable to ContactPhoto in method public getContactPhoto(context Context, uri Uri, name String) : ContactPhoto from class org.thoughtcrime.securesms.contacts.avatars.ContactPhotoFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private getAsynchronousRecipient(context Context, recipientId long) : Recipient renamed to private getRecipientDetailsAsync(context Context, number String) : ListenableFutureTask<RecipientDetails> in class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : "<p>The logic of the method changed as a different type is returned, but some statements are common.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getRecipientDetailsSync(context Context, number String) : RecipientDetails extracted from private getAsynchronousRecipient(context Context, recipientId long) : Recipient in class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : "<p>getSynchronousRecipient() is renamed to getRecipientDetailsSync()</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getContactPhoto(context Context, uri Uri, name String) : Drawable from class org.thoughtcrime.securesms.contacts.ContactPhotoFactory to public getContactPhoto(context Context, uri Uri, name String) : ContactPhoto from class org.thoughtcrime.securesms.contacts.avatars.ContactPhotoFactory",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getContactPhotoStream(context Context, uri Uri) : InputStream from class org.thoughtcrime.securesms.contacts.ContactPhotoFactory to private getContactPhotoStream(context Context, uri Uri) : InputStream from class org.thoughtcrime.securesms.contacts.avatars.ContactPhotoFactory",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getGroupContactPhoto(context Context, avatar byte[]) : Drawable from class org.thoughtcrime.securesms.contacts.ContactPhotoFactory to public getGroupContactPhoto(avatar byte[]) : ContactPhoto from class org.thoughtcrime.securesms.contacts.avatars.ContactPhotoFactory",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private TAG : String from class org.thoughtcrime.securesms.contacts.ContactPhotoFactory to private TAG : String from class org.thoughtcrime.securesms.contacts.avatars.ContactPhotoFactory",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public getDefaultGroupPhoto(context Context) : Drawable from class org.thoughtcrime.securesms.contacts.ContactPhotoFactory to public asDrawable(context Context) : Drawable from class org.thoughtcrime.securesms.contacts.avatars.ResourceContactPhoto",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Severe Changes",
      "mappingState" : 5,
      "validationComment" : "non-mapped leaves are not justifiable"
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private TAG : String from class org.thoughtcrime.securesms.contacts.ContactPhotoFactory to private TAG : String from class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable bde : BitmapDecodingException to e : BitmapDecodingException in method public getContactPhoto(context Context, uri Uri, name String) : ContactPhoto from class org.thoughtcrime.securesms.contacts.avatars.ContactPhotoFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @NonNull in method public getContactPhoto() : ContactPhoto from class org.thoughtcrime.securesms.recipients.Recipient",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='x x-first'>@</span><span class='pl-smi x'>NonNull</span> <span class='pl-smi x x-last'>ContactPhoto</span></span> (return type)</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @NonNull in method private getGroupRecipientDetails(context Context, groupId String) : RecipientDetails from class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @NonNull in method private getIndividualRecipientDetails(context Context, number String) : RecipientDetails from class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @NonNull in method public getContactPhoto() : ContactPhoto from class org.thoughtcrime.securesms.recipients.Recipients",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter contactPhoto : Drawable in method package Recipient(number String, contactPhoto Drawable, recipientId long, future ListenableFutureTask<RecipientDetails>) from class org.thoughtcrime.securesms.recipients.Recipient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter context : Context in method public getUnknownRecipient(context Context) : Recipient from class org.thoughtcrime.securesms.recipients.Recipient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter context : Context in method public getContactPhoto(context Context) : Drawable from class org.thoughtcrime.securesms.recipients.Recipients",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter context : Context in method public getGroupContactPhoto(context Context, avatar byte[]) : Drawable from class org.thoughtcrime.securesms.contacts.ContactPhotoFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter context : Context in method public getDefaultContactPhoto(context Context, name String) : Drawable from class org.thoughtcrime.securesms.contacts.ContactPhotoFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Drawable to ContactPhoto in method public getDefaultContactPhoto(name String) : ContactPhoto from class org.thoughtcrime.securesms.contacts.avatars.ContactPhotoFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable inputStream : InputStream in method public getContactPhoto(context Context, uri Uri, name String) : Drawable from class org.thoughtcrime.securesms.contacts.ContactPhotoFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable targetSize : int in method public getContactPhoto(context Context, uri Uri, name String) : Drawable from class org.thoughtcrime.securesms.contacts.ContactPhotoFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method public getDefaultGroupPhoto(context Context) : Drawable from class org.thoughtcrime.securesms.contacts.ContactPhotoFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public asDrawable(context Context) : Drawable from class org.thoughtcrime.securesms.contacts.avatars.ResourceContactPhoto",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private getSynchronousRecipient(context Context, recipientId long) : Recipient renamed to private getRecipientDetailsSync(context Context, number String) : RecipientDetails in class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @NonNull in method private getRecipientDetailsSync(context Context, number String) : RecipientDetails from class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @NonNull in method private getRecipientDetailsAsync(context Context, number String) : ListenableFutureTask<RecipientDetails> from class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable isGroupRecipient : boolean in method private getSynchronousRecipient(context Context, recipientId long) : Recipient from class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable number : String to number : String in method private getRecipientDetailsAsync(context Context, number String) : ListenableFutureTask<RecipientDetails> from class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable number : String to number : String in method private getRecipientDetailsSync(context Context, number String) : RecipientDetails from class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Recipient to RecipientDetails in method private getRecipientDetailsSync(context Context, number String) : RecipientDetails from class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Recipient to ListenableFutureTask<RecipientDetails> in method private getRecipientDetailsAsync(context Context, number String) : ListenableFutureTask<RecipientDetails> from class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter context : Context in method private getSynchronousRecipient(context Context, recipientId long) : Recipient from class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter recipientId : long in method private getAsynchronousRecipient(context Context, recipientId long) : Recipient from class org.thoughtcrime.securesms.recipients.RecipientProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Reorder Parameter",
    "description" : "Reorder Parameter [number : String, contactPhoto : Drawable, recipientId : long, future : ListenableFutureTask<RecipientDetails>] to [recipientId : long, number : String, future : ListenableFutureTask<RecipientDetails>] in method package Recipient(recipientId long, number String, future ListenableFutureTask<RecipientDetails>) from class org.thoughtcrime.securesms.recipients.Recipient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1123684,
  "repository" : "https://github.com/phishman3579/java-algorithms-implementation.git",
  "sha1" : "ab98bcacf6e5bf1c3a06f6bcca68f178f880ffc9",
  "url" : "https://github.com/phishman3579/java-algorithms-implementation/commit/ab98bcacf6e5bf1c3a06f6bcca68f178f880ffc9",
  "author" : "Justin Wetherell",
  "time" : "6/24/15 5:48 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int extracted from public main(args String[]) : void in class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private runTests(testable Testable, tests int, unsorteds Integer[][], sorteds Integer[][], strings String[]) : boolean extracted from private runTests() : boolean in class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaRedBlackTreeString : java.util.TreeSet<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaRedBlackTreeString : java.util.TreeSet<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackStringTree",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaLinkedQueue : java.util.Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaLinkedQueue : java.util.Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedQueue",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaLinkedList : java.util.List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaLinkedList : java.util.List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedList",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaMaxArrayHeap : java.util.PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaMaxArrayHeap : java.util.PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMaxHeap",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaMinArrayHeap : java.util.PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaMinArrayHeap : java.util.PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMinHeap",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaStack : java.util.Stack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaStack : java.util.Stack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaStack",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaArrayList : java.util.List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaArrayList : java.util.List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayList",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaArrayQueue : java.util.Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaArrayQueue : java.util.Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayQueue",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaRedBlackTreeInteger : java.util.TreeSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaRedBlackTreeInteger : java.util.TreeSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackIntegerTree",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaSkipListMap : ConcurrentSkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaSkipListMap : ConcurrentSkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipListMap",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaTreeMap : java.util.Map<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaTreeMap : java.util.Map<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaTreeMap",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaHashMap : java.util.Map<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaHashMap : java.util.Map<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaHashMap",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private cHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package cHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHashMapChaining",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private aHeapMin : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package aHeapMin : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testMinHeapArray",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private redBlackTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package redBlackTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRedBlackTree",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private avlTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package avlTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testAVLTree",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private linkedQueue : Queue.LinkedQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package linkedQueue : Queue.LinkedQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedQueue",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private bTree : BTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package bTree : BTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBTree",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private arrayQueue : Queue.ArrayQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package arrayQueue : Queue.ArrayQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayQueue",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private arrayList : List.ArrayList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package arrayList : List.ArrayList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayList",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private tHeapMax : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package tHeapMax : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testMaxHeapTree",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private radixTrie : RadixTrie<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package radixTrie : RadixTrie<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRadixTrie",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private skipList : SkipList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package skipList : SkipList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipList",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private hamt : HashArrayMappedTrie<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package hamt : HashArrayMappedTrie<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHAMT",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private treeMap : TreeMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package treeMap : TreeMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreeMap",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private trie : Trie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package trie : Trie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrie",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private javaSkipList : NavigableSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package javaSkipList : NavigableSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipList",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private splayTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package splayTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSplayTree",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private linkedStack : Stack.LinkedStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package linkedStack : Stack.LinkedStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedStack",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private pHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package pHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHashMapProbing",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private arrayStack : Stack.ArrayStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package arrayStack : Stack.ArrayStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayStack",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private trieMap : TrieMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package trieMap : TrieMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrieMap",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private bst : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package bst : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBST",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private aHeapMax : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package aHeapMax : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testMaxHeapArray",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private linkedList : List.LinkedList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package linkedList : List.LinkedList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedList",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private tHeapMin : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package tHeapMin : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testMinHeapTree",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private patriciaTrie : PatriciaTrie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package patriciaTrie : PatriciaTrie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testPatriciaTrie",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private skipListMap : SkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package skipListMap : SkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipListMap",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private treap : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to package treap : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreap",
    "comment" : "the target did not exist in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Integer to item : T in method private testJavaCollection(collection Collection<T>, type Class<T>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean in class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : "<p>Variable item already exists in the original code<br />Integer value = unsorted[i];<br />T item = Utils.parseT(value, type);<br />===================&gt;<br />T item = unsorted[i];</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute mergeInPlaceResults : double[] to mergeResults : double[] in class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'>mergeInPlaceResultsand mergeNotInPlaceResults attributes are merged into attribute mergeResults<br />https://github.com/phishman3579/java-algorithms-implementation/commit/ab98bcacf6e5bf1c3a06f6bcca68f178f880ffc9#diff-19f604c062f25432275863f522a438e2R338<br /></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable aShell : long to aInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable aQuick : long to aInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable bQuick : long to bInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable bMerge : long to bInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable aHeap : long to aInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable bShell : long to bInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable aMerge : long to aInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable aRadix : long to aInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable aCounting : long to aInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable bRadix : long to bInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable bCounting : long to bInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable bHeap : long to bInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaRedBlackStringTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackStringTree",
    "comment" : "<p>looks tp</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaMinHeap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMinHeap",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaArrayList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayList",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaRedBlackIntegerTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackIntegerTree",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaSkipListMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipListMap",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaArrayQueue() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayQueue",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaLinkedList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedList",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaMaxHeap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMaxHeap",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaLinkedQueue() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedQueue",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaHashMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaHashMap",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testAVLTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testAVLTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testBTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testBST() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBST",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testHAMT() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHAMT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Severe Changes",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaStack() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaTreeMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testArrayList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testLinkedList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testPatriciaTrie() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testPatriciaTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testArrayQueue() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testLinkedQueue() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testRadixTrie() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRadixTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testRedBlackTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRedBlackTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testJavaSkipList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testSkipList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testSplayTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSplayTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testArrayStack() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testLinkedStack() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testTreap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testTreeMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testTrie() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testTrieMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrieMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private testSkipListMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipListMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Add Parameter-",
      "mappingState" : 5,
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"unchecked\") in method private testJavaCollection(collection Collection<T>, type Class<T>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method private handleError(input String, obj Object) : void from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter _unsorted : Integer[] in method private testJavaCollection(collection Collection<T>, type Class<T>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter _sorted : Integer[] in method private testJavaCollection(collection Collection<T>, type Class<T>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method private testJavaCollection(collection Collection<T>, type Class<T>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter valueType : Class<V> in method private testJavaMap(map Map<K,V>, keyType Class<K>, valueType Class<V>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter _unsorted : Integer[] in method private testJavaMap(map Map<K,V>, keyType Class<K>, valueType Class<V>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter _sorted : Integer[] in method private testJavaMap(map Map<K,V>, keyType Class<K>, valueType Class<V>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method private testJavaMap(map Map<K,V>, keyType Class<K>, valueType Class<V>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testAVLTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testAVLTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testAVLTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBST",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBST",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBST",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHAMT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHAMT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHAMT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaHashMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaHashMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaHashMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMinHeap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMinHeap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMinHeap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMaxHeap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMaxHeap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMaxHeap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackIntegerTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackIntegerTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackIntegerTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackStringTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackStringTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackStringTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testPatriciaTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testPatriciaTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testPatriciaTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRadixTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRadixTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRadixTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRedBlackTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRedBlackTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRedBlackTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSplayTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSplayTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSplayTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrieMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrieMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrieMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipListMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipListMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipListMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unsorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipListMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter sorted : Integer[] in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipListMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter input : String in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipListMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testAVLTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBST",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHAMT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaHashMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMinHeap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMaxHeap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackIntegerTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackStringTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testPatriciaTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedQueue",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRadixTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRedBlackTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipList",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSplayTree",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreeMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrie",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrieMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipListMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public run(unsorted Integer[], sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipListMap",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package avlTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testAVLTree",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package bTree : BTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBTree",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package bst : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testBST",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package aHeapMin : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testMinHeapArray",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package tHeapMin : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testMinHeapTree",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package aHeapMax : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testMaxHeapArray",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package tHeapMax : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testMaxHeapTree",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package pHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHashMapProbing",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package cHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHashMapChaining",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package hamt : HashArrayMappedTrie<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testHAMT",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaHashMap : Map<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaHashMap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaMinArrayHeap : PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMinHeap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaMaxArrayHeap : PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMaxHeap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaArrayList : List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayList",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaLinkedList : List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedList",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaArrayQueue : Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayQueue",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaLinkedQueue : Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedQueue",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaRedBlackTreeInteger : TreeSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackIntegerTree",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaRedBlackTreeString : TreeSet<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackStringTree",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaStack : Stack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaStack",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaTreeMap : Map<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaTreeMap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package arrayList : List.ArrayList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayList",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package linkedList : List.LinkedList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedList",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package patriciaTrie : PatriciaTrie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testPatriciaTrie",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package arrayQueue : Queue.ArrayQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayQueue",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package linkedQueue : Queue.LinkedQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedQueue",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package radixTrie : RadixTrie<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRadixTrie",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package redBlackTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testRedBlackTree",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaSkipList : NavigableSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipList",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package skipList : SkipList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipList",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package splayTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSplayTree",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package arrayStack : Stack.ArrayStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testArrayStack",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package linkedStack : Stack.LinkedStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testLinkedStack",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package treap : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package treeMap : TreeMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTreeMap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package trie : Trie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrie",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package trieMap : TrieMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testTrieMap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package javaSkipListMap : ConcurrentSkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipListMap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package skipListMap : SkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testSkipListMap",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Attribute",
    "description" : "Parameterize Attribute string : String to input : String in method private handleError(input String, obj Object) : void from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testAVLTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testBTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testBST() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testHAMT() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaHashMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaMinHeap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaMaxHeap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaArrayList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaLinkedList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaArrayQueue() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaLinkedQueue() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaRedBlackIntegerTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaRedBlackStringTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaStack() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaTreeMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testArrayList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testLinkedList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testPatriciaTrie() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testArrayQueue() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testLinkedQueue() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testRadixTrie() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testRedBlackTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaSkipList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testSkipList() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testSplayTree() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testArrayStack() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testLinkedStack() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testTreap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testTreeMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testTrie() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testTrieMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testJavaSkipListMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private testSkipListMap() : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private insertionResults : double[] from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private bubbleResults : double[] from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private shellResults : double[] from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private quickResults : double[] from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private heapResults : double[] from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private countingResults : double[] from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private radixResults : double[] from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private americanFlagResults : double[] from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable bBubble : long to bInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable aBubble : long to aInsertion : long in method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int from class com.jwetherell.algorithms.sorts.timing.SortsTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Attribute With Variable",
    "description" : "Replace Attribute With Variable sorted : Integer[] to kSorted : K[] in method private testJavaMap(map Map<K,V>, keyType Class<K>, valueType Class<V>, name String, _unsorted Integer[], _sorted Integer[], input String) : boolean from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private avlTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private avlTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private bTree : BTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private bTree : BTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private bst : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private bst : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private aHeapMin : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private aHeapMin : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private tHeapMin : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private tHeapMin : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private aHeapMax : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private aHeapMax : BinaryHeap.BinaryHeapArray<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private tHeapMax : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private tHeapMax : BinaryHeap.BinaryHeapTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private pHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private pHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private cHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private cHashMap : HashMap<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private hamt : HashArrayMappedTrie<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private hamt : HashArrayMappedTrie<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaHashMap : Map<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaHashMap : Map<Integer,String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaMinArrayHeap : PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaMinArrayHeap : PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaMaxArrayHeap : PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaMaxArrayHeap : PriorityQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaArrayList : List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaArrayList : List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaLinkedList : List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaLinkedList : List<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaArrayQueue : Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaArrayQueue : Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaLinkedQueue : Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaLinkedQueue : Deque<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaRedBlackTreeInteger : TreeSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaRedBlackTreeInteger : TreeSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaRedBlackTreeString : TreeSet<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaRedBlackTreeString : TreeSet<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaStack : Stack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaStack : Stack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaTreeMap : Map<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaTreeMap : Map<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private arrayList : List.ArrayList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private arrayList : List.ArrayList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private linkedList : List.LinkedList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private linkedList : List.LinkedList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private patriciaTrie : PatriciaTrie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private patriciaTrie : PatriciaTrie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private arrayQueue : Queue.ArrayQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private arrayQueue : Queue.ArrayQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private linkedQueue : Queue.LinkedQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private linkedQueue : Queue.LinkedQueue<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private radixTrie : RadixTrie<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private radixTrie : RadixTrie<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private redBlackTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private redBlackTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaSkipList : NavigableSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaSkipList : NavigableSet<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private skipList : SkipList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private skipList : SkipList<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private splayTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private splayTree : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private arrayStack : Stack.ArrayStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private arrayStack : Stack.ArrayStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private linkedStack : Stack.LinkedStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private linkedStack : Stack.LinkedStack<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private treap : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private treap : BinarySearchTree<Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private treeMap : TreeMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private treeMap : TreeMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private trie : Trie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private trie : Trie<String> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private trieMap : TrieMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private trieMap : TrieMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private javaSkipListMap : ConcurrentSkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private javaSkipListMap : ConcurrentSkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private skipListMap : SkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private skipListMap : SkipListMap<String,Integer> from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 644
}, {
  "id" : 1123770,
  "repository" : "https://github.com/bitcoinj/bitcoinj.git",
  "sha1" : "a6601066ddc72ef8e71c46c5a51e1252ea0a1af5",
  "url" : "https://github.com/bitcoinj/bitcoinj/commit/a6601066ddc72ef8e71c46c5a51e1252ea0a1af5",
  "author" : "Amichai Rothman",
  "time" : "6/24/15 10:21 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private digest : MessageDigest from class org.bitcoinj.core.Utils to private digest : MessageDigest from class org.bitcoinj.core.Sha256Hash",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public newSha256Digest() : MessageDigest from class org.bitcoinj.core.Utils to public newDigest() : MessageDigest from class org.bitcoinj.core.Sha256Hash",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public singleDigest(input byte[], offset int, length int) : byte[] from class org.bitcoinj.core.Utils to public calcHashBytes(input byte[], offset int, length int) : byte[] from class org.bitcoinj.core.Sha256Hash",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n- Rename Method-",
      "mappingState" : 1,
      "validationComment" : "Rename Method on top"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public doubleDigest(input byte[], offset int, length int) : byte[] from class org.bitcoinj.core.Utils to public calcDoubleHashBytes(input byte[], offset int, length int) : byte[] from class org.bitcoinj.core.Sha256Hash",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public doubleDigestTwoBuffers(input1 byte[], offset1 int, length1 int, input2 byte[], offset2 int, length2 int) : byte[] from class org.bitcoinj.core.Utils to public calcDoubleHashBytes(input1 byte[], offset1 int, length1 int, input2 byte[], offset2 int, length2 int) : byte[] from class org.bitcoinj.core.Sha256Hash",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public doubleDigest(input byte[]) : byte[] from class org.bitcoinj.core.Utils to public calcDoubleHashBytes(input byte[]) : byte[] from class org.bitcoinj.core.Sha256Hash",
    "comment" : "<p>references renamed appropriately</p>",
    "validation" : "TP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public singleDigest(input byte[]) : byte[] from class org.bitcoinj.core.Utils to public calcHashBytes(input byte[]) : byte[] from class org.bitcoinj.core.Sha256Hash",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1883
}, {
  "id" : 1123899,
  "repository" : "https://github.com/apache/cassandra.git",
  "sha1" : "f797bfa4da53315b49f8d97b784047f33ba1bf5f",
  "url" : "https://github.com/apache/cassandra/commit/f797bfa4da53315b49f8d97b784047f33ba1bf5f",
  "author" : "Stefania Alborghetti",
  "time" : "6/24/15 1:10 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private fromUnixTimestamp(timestamp long, nanos long) : long extracted from private fromUnixTimestamp(timestamp long) : long in class org.apache.cassandra.utils.UUIDGen",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "-nanos- has been added to the logic."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected createTableName() : String extracted from protected createTable(query String) : String in class org.apache.cassandra.cql3.CQLTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private makeCasRequest(queryState QueryState, options QueryOptions) : CQL3CasRequest extracted from public executeWithCondition(queryState QueryState, options QueryOptions) : ResultMessage in class org.apache.cassandra.cql3.statements.ModificationStatement",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private executeInternalWithoutCondition(queryState QueryState, options QueryOptions) : ResultMessage extracted from public executeInternal(queryState QueryState, options QueryOptions) : ResultMessage in class org.apache.cassandra.cql3.statements.BatchStatement",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Logic has been changed completely"
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.cql3.TypeTest moved to org.apache.cassandra.cql3.validation.entities.TypeTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private makeCasRequest(options BatchQueryOptions, state QueryState) : Pair<CQL3CasRequest,Set<ColumnDefinition>> extracted from private executeWithConditions(options BatchQueryOptions, state QueryState) : ResultMessage in class org.apache.cassandra.cql3.statements.BatchStatement",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.cql3.CrcCheckChanceTest moved to org.apache.cassandra.cql3.validation.miscellaneous.CrcCheckChanceTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.cql3.SSTableMetadataTrackingTest moved to org.apache.cassandra.cql3.validation.miscellaneous.SSTableMetadataTrackingTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected assertInvalidThrowMessage(errorMessage String, exception Class<? extends Throwable>, query String, values Object...) : void extracted from protected assertInvalidMessage(errorMessage String, query String, values Object...) : void in class org.apache.cassandra.cql3.CQLTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Logic has been changed"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public executeInternalWithoutCondition(queryState QueryState, options QueryOptions) : ResultMessage extracted from public executeInternal(queryState QueryState, options QueryOptions) : ResultMessage in class org.apache.cassandra.cql3.statements.ModificationStatement",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.cql3.FrozenCollectionsTest moved to org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.cql3.UserTypesTest moved to org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.SliceQueryFilterWithTombstonesTest moved and renamed to org.apache.cassandra.cql3.validation.miscellaneous.TombstonesTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.UseStatementTest moved and renamed to org.apache.cassandra.cql3.validation.operations.UseTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.MultiColumnRelationTest moved and renamed to org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.SingleColumnRelationTest moved and renamed to org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.AlterTableTest moved and renamed to org.apache.cassandra.cql3.validation.operations.AlterTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testInvalidCollectionsMix() : void from class org.apache.cassandra.cql3.CollectionsTest to public testInvalidCollectionsMix() : void from class org.apache.cassandra.cql3.validation.entities.CollectionsTest",
    "comment" : "<p>It is more like extract sub package refactoring, since RefDiff cannot detetc package level refactroing I was expecting to see move class refactroing instead.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testLists() : void from class org.apache.cassandra.cql3.CollectionsTest to public testLists() : void from class org.apache.cassandra.cql3.validation.entities.CollectionsTest",
    "comment" : "It is more like extract sub package refactoring, since RefDiff cannot detetc package level refactroing I was expecting  to see move class refactroing instead.",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMapBulkRemoval() : void from class org.apache.cassandra.cql3.CollectionsTest to public testMapBulkRemoval() : void from class org.apache.cassandra.cql3.validation.entities.CollectionsTest",
    "comment" : "It is more like extract sub package refactoring, since RefDiff cannot detetc package level refactroing I was expecting  to see move class refactroing instead.",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMaps() : void from class org.apache.cassandra.cql3.CollectionsTest to public testMaps() : void from class org.apache.cassandra.cql3.validation.entities.CollectionsTest",
    "comment" : "It is more like extract sub package refactoring, since RefDiff cannot detetc package level refactroing I was expecting  to see move class refactroing instead.",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testSets() : void from class org.apache.cassandra.cql3.CollectionsTest to public testSets() : void from class org.apache.cassandra.cql3.validation.entities.CollectionsTest",
    "comment" : "<p>It is more like extract sub package refactoring, since RefDiff cannot detetc package level refactroing I was expecting to see move class refactroing instead.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testContainsKeyAndContainsWithIndexOnMapKey() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testContainsKeyAndContainsWithIndexOnMapKey() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testContainsKeyAndContainsWithIndexOnMapValue() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testContainsKeyAndContainsWithIndexOnMapValue() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testFilterForContains() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testFilterForContains() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testIndexLookupWithClusteringPrefix() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testIndexLookupWithClusteringPrefix() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Laleh, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testListContains() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testListContains() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testListContainsWithFiltering() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testListContainsWithFiltering() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMapKeyContains() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testMapKeyContains() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMapValueContains() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testMapValueContains() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testQueryMultipleIndexTypes() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testQueryMultipleIndexTypes() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testSetContains() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testSetContains() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private removeQuotes(indexName String) : String from class org.apache.cassandra.cql3.CreateIndexStatementTest to private removeQuotes(indexName String) : String from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testCreateAndDropIndex() : void from class org.apache.cassandra.cql3.CreateIndexStatementTest to public testCreateAndDropIndex() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testCreateAndDropIndexWithCamelCaseIdentifier() : void from class org.apache.cassandra.cql3.CreateIndexStatementTest to public testCreateAndDropIndexWithCamelCaseIdentifier() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testCreateAndDropIndexWithQuotedIdentifier() : void from class org.apache.cassandra.cql3.CreateIndexStatementTest to public testCreateAndDropIndexWithQuotedIdentifier() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testCQL3PartitionKeyOnlyTable() : void from class org.apache.cassandra.cql3.CreateTableTest to public testCQL3PartitionKeyOnlyTable() : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateTableTest<br />org.apache.cassandra.cql3.CreateTriggerStatementTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.CreateTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private assertTriggerExists(name String, clazz Class<?>) : void from class org.apache.cassandra.cql3.CreateTriggerStatementTest to private assertTriggerExists(name String, clazz Class<?>) : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateTableTest<br />org.apache.cassandra.cql3.CreateTriggerStatementTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.CreateTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testCreateTrigger() : void from class org.apache.cassandra.cql3.CreateTriggerStatementTest to public testCreateTrigger() : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateTableTest<br />org.apache.cassandra.cql3.CreateTriggerStatementTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.CreateTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testCreateTriggerIfNotExists() : void from class org.apache.cassandra.cql3.CreateTriggerStatementTest to public testCreateTriggerIfNotExists() : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateTableTest<br />org.apache.cassandra.cql3.CreateTriggerStatementTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.CreateTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testDropTrigger() : void from class org.apache.cassandra.cql3.CreateTriggerStatementTest to public testDropTrigger() : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateTableTest<br />org.apache.cassandra.cql3.CreateTriggerStatementTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.CreateTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testDropTriggerIfExists() : void from class org.apache.cassandra.cql3.CreateTriggerStatementTest to public testDropTriggerIfExists() : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateTableTest<br />org.apache.cassandra.cql3.CreateTriggerStatementTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.CreateTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public augment(key ByteBuffer, update ColumnFamily) : Collection<Mutation> from class org.apache.cassandra.cql3.CreateTriggerStatementTest.TestTrigger to public augment(key ByteBuffer, update ColumnFamily) : Collection<Mutation> from class org.apache.cassandra.cql3.validation.operations.CreateTest.TestTrigger",
    "comment" : "<p>org.apache.cassandra.cql3.CreateTableTest<br />org.apache.cassandra.cql3.CreateTriggerStatementTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.CreateTest</p><p>Inner class org.apache.cassandra.cql3.CreateTriggerStatementTest.TestTrigger was also merged</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public failInsert(insertCQL String, args Object...) : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public failInsert(insertCQL String, args Object...) : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public succeedInsert(insertCQL String, args Object...) : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public succeedInsert(insertCQL String, args Object...) : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testCompactTableWithValueOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testCompactTableWithValueOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testIndexOnClusteringColumnInsertPartitionKeyAndClusteringsOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnClusteringColumnInsertPartitionKeyAndClusteringsOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testIndexOnClusteringColumnInsertValueOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnClusteringColumnInsertValueOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testIndexOnCollectionKeyInsertPartitionKeyAndClusteringOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnCollectionKeyInsertPartitionKeyAndClusteringOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testIndexOnCollectionValueInsertPartitionKeyAndCollectionKeyOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnCollectionValueInsertPartitionKeyAndCollectionKeyOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testIndexOnCompositeValueOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnCompositeValueOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testIndexOnFullCollectionEntryInsertCollectionValueOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnFullCollectionEntryInsertCollectionValueOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testIndexOnPartitionKeyInsertValueOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnPartitionKeyInsertValueOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTokenFunctionWithCompoundPartitionAndClusteringCols() : void from class org.apache.cassandra.cql3.SelectWithTokenFunctionTest to public testTokenFunctionWithCompoundPartitionAndClusteringCols() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest",
    "comment" : "<p>Rename class, but with the possibility of move method</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTokenFunctionWithMultiColumnPartitionKey() : void from class org.apache.cassandra.cql3.SelectWithTokenFunctionTest to public testTokenFunctionWithMultiColumnPartitionKey() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest",
    "comment" : "<p>Rename class, but with the possibility of move method</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTokenFunctionWithPartitionKeyAndClusteringKeyArguments() : void from class org.apache.cassandra.cql3.SelectWithTokenFunctionTest to public testTokenFunctionWithPartitionKeyAndClusteringKeyArguments() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest",
    "comment" : "<p>Rename class, but with the possibility of move method</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTokenFunctionWithSingleColumnPartitionKey() : void from class org.apache.cassandra.cql3.SelectWithTokenFunctionTest to public testTokenFunctionWithSingleColumnPartitionKey() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest",
    "comment" : "<p>Rename class, but with the possibility of move method</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testFieldSelectionOrderSingleClustering() : void from class org.apache.cassandra.cql3.SelectionOrderingTest to public testFieldSelectionOrderSingleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderByTest",
    "comment" : "<p>Seems to be rename class</p><p>It can be move as well, but there are new methods in the target class that did not exist in the previous revision</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testFunctionSelectionOrderMultipleClustering() : void from class org.apache.cassandra.cql3.SelectionOrderingTest to public testFunctionSelectionOrderMultipleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderByTest",
    "comment" : "<p>Seems to be rename class</p><p>It can be move as well, but there are new methods in the target class that did not exist in the previous revision</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testFunctionSelectionOrderSingleClustering() : void from class org.apache.cassandra.cql3.SelectionOrderingTest to public testFunctionSelectionOrderSingleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderByTest",
    "comment" : "<p>Seems to be rename class</p><p>It can be move as well, but there are new methods in the target class that did not exist in the previous revision</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testNormalSelectionOrderMultipleClustering() : void from class org.apache.cassandra.cql3.SelectionOrderingTest to public testNormalSelectionOrderMultipleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderByTest",
    "comment" : "<p>Seems to be rename class</p><p>It can be move as well, but there are new methods in the target class that did not exist in the previous revision</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testNormalSelectionOrderSingleClustering() : void from class org.apache.cassandra.cql3.SelectionOrderingTest to public testNormalSelectionOrderSingleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderByTest",
    "comment" : "<p>Seems to be rename class</p><p>It can be move as well, but there are new methods in the target class that did not exist in the previous revision</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testSingleClustering() : void from class org.apache.cassandra.cql3.StaticColumnsQueryTest to public testSingleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testSingleClusteringReversed() : void from class org.apache.cassandra.cql3.StaticColumnsQueryTest to public testSingleClusteringReversed() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testNegativeTimestamps() : void from class org.apache.cassandra.cql3.TimestampTest to public testNegativeTimestamps() : void from class org.apache.cassandra.cql3.validation.entities.TimestampTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testInvalidQueries() : void from class org.apache.cassandra.cql3.TupleTypeTest to public testInvalidQueries() : void from class org.apache.cassandra.cql3.validation.entities.TupleTypeTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testNestedTuple() : void from class org.apache.cassandra.cql3.TupleTypeTest to public testNestedTuple() : void from class org.apache.cassandra.cql3.validation.entities.TupleTypeTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTupleInClusteringKey() : void from class org.apache.cassandra.cql3.TupleTypeTest to public testTupleInClusteringKey() : void from class org.apache.cassandra.cql3.validation.entities.TupleTypeTest",
    "comment" : "<p>It's move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTupleInPartitionKey() : void from class org.apache.cassandra.cql3.TupleTypeTest to public testTupleInPartitionKey() : void from class org.apache.cassandra.cql3.validation.entities.TupleTypeTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTuplePutAndGet() : void from class org.apache.cassandra.cql3.TupleTypeTest to public testTuplePutAndGet() : void from class org.apache.cassandra.cql3.validation.entities.TupleTypeTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testAlterUDT() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlterUDT() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testAlteringUserTypeNestedWithinList() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlteringUserTypeNestedWithinList() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testAlteringUserTypeNestedWithinMap() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlteringUserTypeNestedWithinMap() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testAlteringUserTypeNestedWithinNestedTuple() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlteringUserTypeNestedWithinNestedTuple() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testAlteringUserTypeNestedWithinSet() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlteringUserTypeNestedWithinSet() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testAlteringUserTypeNestedWithinTuple() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlteringUserTypeNestedWithinTuple() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testAlteringUserTypeNestedWithinUserType() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlteringUserTypeNestedWithinUserType() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testCassandra8105() : void from class org.apache.cassandra.cql3.UserTypesTest to public testCassandra8105() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testCreateInvalidTablesWithUDT() : void from class org.apache.cassandra.cql3.UserTypesTest to public testCreateInvalidTablesWithUDT() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testFor7684() : void from class org.apache.cassandra.cql3.UserTypesTest to public testFor7684() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testInvalidField() : void from class org.apache.cassandra.cql3.UserTypesTest to public testInvalidField() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private assertTriggerDoesNotExists(name String, clazz Class<?>) : void from class org.apache.cassandra.cql3.CreateTriggerStatementTest to private assertTriggerDoesNotExists(name String, clazz Class<?>) : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateTableTest<br />org.apache.cassandra.cql3.CreateTriggerStatementTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.CreateTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public requestNames() : List<ColumnSpecification> extracted from public metadata() : List<ColumnSpecification> in class org.apache.cassandra.cql3.UntypedResultSet.FromResultSet & moved to class org.apache.cassandra.cql3.ResultSet.Metadata",
    "comment" : "<p>Extract and Move to other&nbsp; class</p><p>Moved to class&nbsp; ResultSet.<span class='pl-en'>Metadata</span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private TOO_BIG : int from class org.apache.cassandra.cql3.IndexedValuesValidationTest to private TOO_BIG : int from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.cql3.TupleTypeTest moved to org.apache.cassandra.cql3.validation.entities.TupleTypeTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.SelectionOrderingTest moved and renamed to org.apache.cassandra.cql3.validation.operations.SelectOrderByTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.cql3.TimestampTest moved to org.apache.cassandra.cql3.validation.entities.TimestampTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.cql3.CollectionsTest moved to org.apache.cassandra.cql3.validation.entities.CollectionsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.SelectWithTokenFunctionTest moved and renamed to org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.ContainsRelationTest moved and renamed to org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : "<p>org.apache.cassandra.cql3.ContainsRelationTest<br />org.apache.cassandra.cql3.StaticColumnsQueryTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.SelectTest</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.cassandra.cql3.CreateTriggerStatementTest.TestTrigger moved to org.apache.cassandra.cql3.validation.operations.CreateTest.TestTrigger",
    "comment" : "<p>The inner class TestTrigger was merged along with the outer class CreateTriggerStatementTest in class CreateTest<br />http://refactoring.encs.concordia.ca/oracle/refactoring-details/1123899/4815</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter clockSeqAndNode : long to nanos : long in method public getTimeUUID(when long, nanos long) : UUID from class org.apache.cassandra.utils.UUIDGen",
    "comment" : "<p>Parameter nanos is added to <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>getTimeUUID</span>(<span class='pl-k'>long</span> <span class='pl-v'>when</span>, <span class='pl-k'>long</span> <span class='pl-v x x-first'>nanos</span><span class='x'>, </span><span class='pl-k x'>long</span> <span class='pl-v'>clockSeqAndNode</span>)</span></p>",
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private testCreateAndDropIndex(indexName String, addKeyspaceOnDrop boolean) : void from class org.apache.cassandra.cql3.CreateIndexStatementTest to private testCreateAndDropIndex(indexName String, addKeyspaceOnDrop boolean) : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public testCreateAndAlterWithDoubleWith() : void from class org.apache.cassandra.cql3.CreateAndAlterKeyspaceTest to public testDoubleWith() : void from class org.apache.cassandra.cql3.validation.operations.AlterTest",
    "comment" : "<p>testCreateAndAlterWithDoubleWith was split (and moved) to AlterTest.testWithDouble() and CreateTest.testWithDouble()</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Tolerable changes in the body",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.CreateTriggerStatementTest moved and renamed to org.apache.cassandra.cql3.validation.operations.CreateTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateTableTest<br />org.apache.cassandra.cql3.CreateTriggerStatementTest<br />merged to<br />org.apache.cassandra.cql3.validation.operations.CreateTest</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.IndexedValuesValidationTest moved and renamed to org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : "<p>org.apache.cassandra.cql3.CreateIndexStatementTest<br />org.apache.cassandra.cql3.IndexedValuesValidationTest<br />merged to<br />org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public testCassandra8558() : void from class org.apache.cassandra.cql3.RangeDeletionTest to public testRangeDeletion() : void from class org.apache.cassandra.cql3.validation.operations.DeleteTest",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.TimestampTest moved and renamed to org.apache.cassandra.cql3.validation.entities.DateTypeTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public executeInternal(queryState QueryState, options QueryOptions) : ResultMessage renamed to private executeInternalWithoutCondition(queryState QueryState, options QueryOptions) : ResultMessage in class org.apache.cassandra.cql3.statements.BatchStatement",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setUpClass() : void renamed to public beforeTest() : void in class org.apache.cassandra.cql3.CQLTester",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected assertInvalidMessage(errorMessage String, query String, values Object) : void renamed to protected assertInvalidThrowMessage(errorMessage String, exception Class<? extends Throwable>, query String, values Object) : void in class org.apache.cassandra.cql3.CQLTester",
    "comment" : "<p>Extract Method protected assertInvalidThrowMessage(errorMessage String, exception Class&lt;? extends Throwable&gt;, query String, values Object...) : void extracted from protected assertInvalidMessage(errorMessage String, query String, values Object...) : void in class org.apache.cassandra.cql3.CQLTester</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @VisibleForTesting in method public getTimeUUID(when long, clockSeqAndNode long) : UUID from class org.apache.cassandra.utils.UUIDGen",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Before in method public beforeTest() : void from class org.apache.cassandra.cql3.CQLTester",
    "comment" : "<p>beforeTest() is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Thrown Exception Type",
    "description" : "Add Thrown Exception Type TruncateException in method public executeInternal(state QueryState, options QueryOptions) : ResultMessage from class org.apache.cassandra.cql3.statements.TruncateStatement",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Throwable in method public setUpClass() : void from class org.apache.cassandra.cql3.CQLTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected schemaChange(query String) : void from class org.apache.cassandra.cql3.CQLTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package cfm : CFMetaData from class org.apache.cassandra.cql3.statements.CQL3CasRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package key : ByteBuffer from class org.apache.cassandra.cql3.statements.CQL3CasRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package now : long from class org.apache.cassandra.cql3.statements.CQL3CasRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package isBatch : boolean from class org.apache.cassandra.cql3.statements.CQL3CasRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : InvalidRequestException to e : CassandraException in method protected assertInvalidThrowMessage(errorMessage String, exception Class<? extends Throwable>, query String, values Object...) : void from class org.apache.cassandra.cql3.CQLTester",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testNonEqualsRelation() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testNonEqualsRelation() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMultipleMultiColumnRelation() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testMultipleMultiColumnRelation() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testSingleClusteringInvalidQueries() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testSingleClusteringInvalidQueries() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMultipleClustering() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testMultipleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMultipleClusteringWithIndex() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testMultipleClusteringWithIndex() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testSinglePartitionInvalidQueries() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testSinglePartitionInvalidQueries() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMultiAndSingleColumnRelationMix() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testMultiAndSingleColumnRelationMix() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testSingleClustering() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testSingleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testSingleClustering() : void from class org.apache.cassandra.cql3.StaticColumnsQueryTest to public testSingleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMultiClusteringInvalidQueries() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testMultiClusteringInvalidQueries() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMultipleClusteringReversedComponents() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testMultipleClusteringReversedComponents() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testMultiplePartitionKeyAndMultiClusteringWithIndex() : void from class org.apache.cassandra.cql3.MultiColumnRelationTest to public testMultiplePartitionKeyAndMultiClusteringWithIndex() : void from class org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Class",
    "description" : "Merge Class [org.apache.cassandra.cql3.CreateTableTest, org.apache.cassandra.cql3.CreateTriggerStatementTest] merged to org.apache.cassandra.cql3.validation.operations.CreateTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Class",
    "description" : "Merge Class [org.apache.cassandra.cql3.CreateIndexStatementTest, org.apache.cassandra.cql3.IndexedValuesValidationTest] merged to org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Class",
    "description" : "Merge Class [org.apache.cassandra.cql3.MultiColumnRelationTest, org.apache.cassandra.cql3.StaticColumnsQueryTest] merged to org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Class",
    "description" : "Merge Class [org.apache.cassandra.cql3.ContainsRelationTest, org.apache.cassandra.cql3.StaticColumnsQueryTest] merged to org.apache.cassandra.cql3.validation.operations.SelectTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 7672
}, {
  "id" : 1124355,
  "repository" : "https://github.com/apache/drill.git",
  "sha1" : "00aa01fb90f3210d1e3027d7f759fb1085b814bd",
  "url" : "https://github.com/apache/drill/commit/00aa01fb90f3210d1e3027d7f759fb1085b814bd",
  "author" : "Sudheesh Katkam",
  "time" : "6/24/15 8:24 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method public setSessionOption(drillClient DrillClient, option String, value String) : void extracted from public setControls(drillClient DrillClient, controls String) : void in class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "All the replacements can be justified."
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private assertCancelled(controls String, testQuery String, listener WaitUntilCompleteListener) : void inlined to private assertCancelledWithoutException(controls String, listener WaitUntilCompleteListener, query String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Rename Method on top of the Inline Method"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private assertCompleteState(result Pair<QueryState,Exception>, expectedState QueryState) : void renamed to private assertStateCompleted(result Pair<QueryState,Exception>, expectedState QueryState) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public resumeFragment(outcomeListener RpcOutcomeListener<Ack>, handle FragmentHandle) : void renamed to public unpauseFragment(outcomeListener RpcOutcomeListener<Ack>, handle FragmentHandle) : void in class org.apache.drill.exec.rpc.control.ControlTunnel",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public cancelBeforeAnyResultsArrive() : void renamed to public cancelWhenQueryIdArrives() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testInterruptingPartitionerThreadFragment() : void renamed to public interruptingPartitionerThreadFragment() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testInterruptingAfterMSorterSetup() : void renamed to public failsAfterMSorterSetup() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testInterruptingAfterMSorterSorting() : void renamed to public failsAfterMSorterSorting() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private testInterruptingBlockedFragmentsWaitingForData(control String) : void renamed to private interruptingBlockedFragmentsWaitingForData(control String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private assertExceptionInjected(throwable Throwable, exceptionClass Class<? extends Throwable>, desc String) : void renamed to private assertExceptionMessage(throwable Throwable, exceptionClass Class<? extends Throwable>, desc String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public settingNoopInjectionsAndQuery() : void renamed to public settingNoOpInjectionsAndQuery() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testInterruptingWhileFragmentIsBlockedInAcquiringSendingTicket() : void renamed to public interruptingWhileFragmentIsBlockedInAcquiringSendingTicket() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testInterruptingBlockedMergingRecordBatch() : void renamed to public interruptingBlockedMergingRecordBatch() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testInterruptingBlockedUnorderedReceiverBatch() : void renamed to public interruptingBlockedUnorderedReceiverBatch() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createExceptionOnBit(endpoint DrillbitEndpoint, desc String, nSkip int, nFire int, exceptionClass String) : String from class org.apache.drill.exec.testing.TestExceptionInjection to public createExceptionOnBit(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createException(desc String, nSkip int, nFire int, exceptionClass String) : String from class org.apache.drill.exec.testing.TestExceptionInjection to public createException(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public newBuilder() : Builder extracted from private testForeman(desc String) : void in class org.apache.drill.exec.server.TestDrillbitResilience & moved to class org.apache.drill.exec.testing.Controls",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public addException(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>, nSkip int, nFire int) : Builder extracted from public checkedInjection() : void in class org.apache.drill.exec.testing.TestExceptionInjection & moved to class org.apache.drill.exec.testing.Controls.Builder",
    "comment" : "<p>Extract and Move to other&nbsp; class</p><p>Moved to class <span class='blob-code-inner'><span class='pl-en'>Controls.<span class='pl-smi'>Builder</span> (it as an added class)</span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public addException(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>, nSkip int, nFire int) : Builder extracted from public skipAndLimit() : void in class org.apache.drill.exec.testing.TestExceptionInjection & moved to class org.apache.drill.exec.testing.Controls.Builder",
    "comment" : "<p>Extract and Move to other&nbsp; class</p><p>Moved to class <span class='blob-code-inner'><span class='pl-en'>Controls.<span class='pl-smi'>Builder</span> (it as an added class)</span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public addExceptionOnBit(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint, nSkip int, nFire int) : Builder extracted from public injectionOnSpecificBit() : void in class org.apache.drill.exec.testing.TestExceptionInjection & moved to class org.apache.drill.exec.testing.Controls.Builder",
    "comment" : "<p>Extract and Move to other class.</p><p>Moved to class <span class='blob-code-inner'><span class='pl-en'>Controls.<span class='pl-smi'>Builder</span> (it is an added class)</span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public setSessionOption(drillClient DrillClient, option String, value String) : void extracted from private setSessionOption(option String, value String) : void in class org.apache.drill.exec.server.TestDrillbitResilience & moved to class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "<p>Detected&nbsp; as Extract and Move to other class.&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public validateControlsString(jsonString String) : void extracted from private validateControlsString(controls String) : void in class org.apache.drill.exec.testing.ControlsInjectionUtil & moved to class org.apache.drill.exec.testing.ExecutionControls",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public validateControlsString(jsonString String) : void extracted from public validate(v OptionValue) : void in class org.apache.drill.exec.testing.ExecutionControls.ControlsOptionValidator & moved to class org.apache.drill.exec.testing.ExecutionControls",
    "comment" : "Extract and Move to the inner class",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable jsonString : String to controls : String in method public pauseOnSpecificBit() : void from class org.apache.drill.exec.testing.TestPauseInjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable jsonString : String to controls : String in method public pauseInjected() : void from class org.apache.drill.exec.testing.TestPauseInjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable jsonString : String to controls : String in method public latchInjected() : void from class org.apache.drill.exec.testing.TestCountDownLatchInjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter bitName : String to name : String in method private getEndpoint(name String) : DrillbitEndpoint in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable query : String in method public memoryLeaksWhenCancelled() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable query : String in method public memoryLeaksWhenFailed() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type logger : Logger to REPEAT_RULE : TestRule in class org.apache.drill.test.DrillTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private createSingleException(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>) : String from class org.apache.drill.exec.server.TestDrillbitResilience to public createException(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n",
      "mappingState" : 1,
      "validationComment" : "The returned string has been changed"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private createSingleExceptionOnBit(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>, bitName String) : String from class org.apache.drill.exec.server.TestDrillbitResilience to public createExceptionOnBit(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Severe Changes",
      "mappingState" : 5,
      "validationComment" : "The returned string has been changed"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private createPauseInjection(siteClass Class, siteDesc String, nSkip int) : String from class org.apache.drill.exec.server.TestDrillbitResilience to public createPause(siteClass Class, desc String, nSkip int) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n- Rename Variable-",
      "mappingState" : 1,
      "validationComment" : "The returned string has been changed"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter siteDesc : String to desc : String in method public createPause(siteClass Class, desc String, nSkip int) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setControls(drillClient DrillClient, controls String...) : void renamed to public setSessionOption(drillClient DrillClient, option String, value String) : void in class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private createSingleExceptionOnBit(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>, bitName String) : String renamed to private getEndpoint(name String) : DrillbitEndpoint in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public settingNoopInjectionsAndQuery() : void renamed to private setSessionOption(option String, value String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private testForeman(desc String) : void renamed to public settingNoOpInjectionsAndQuery() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private setSessionOption(option String, value String) : void renamed to private testForeman(desc String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public close() : void from class org.apache.drill.exec.physical.impl.ScanBatch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public foreman_runTryBeginning() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Ignore in method public foreman_runTryEnd() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public cancelInMiddleOfFetchingResults() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public cancelAfterAllResultsProduced() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public cancelAfterEverythingIsCompleted() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public memoryLeaksWhenCancelled() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Ignore in method public memoryLeaksWhenFailed() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public interruptingBlockedMergingRecordBatch() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public interruptingBlockedUnorderedReceiverBatch() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Repeat(count = NUM_RUNS) in method public interruptingPartitionerThreadFragment() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Ignore in method public interruptingWhileFragmentIsBlockedInAcquiringSendingTicket() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Ignore in method public cancelAfterEverythingIsCompleted() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @Ignore in class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter nSkip : int in method public createException(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter nFire : int in method public createException(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Rule in attribute public REPEAT_RULE : TestRule from class org.apache.drill.test.DrillTest",
    "comment" : "<p>new field</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public testInterruptingWhileFragmentIsBlockedInAcquiringSendingTicket() : void from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public validateControlsString(controls String) : void from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public createException(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public createExceptionOnBit(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public createPause(siteClass Class, desc String, nSkip int) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method private countAllocatedMemory() : long from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier volatile in attribute private cancelRequested : boolean from class org.apache.drill.exec.server.TestDrillbitResilience.memoryLeaksWhenCancelled.listener.new WaitUntilCompleteListener",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : InterruptedException in method private countAllocatedMemory() : long from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable name : String in method private countAllocatedMemory() : long from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : RpcException in method public setSessionOption(drillClient DrillClient, option String, value String) : void from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : Exception in method public setControls(session UserSession, controls String) : void from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : Exception in method public validateControlsString(controls String) : void from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter nSkip : int in method public createExceptionOnBit(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter nFire : int in method public createExceptionOnBit(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter bitName : String in method private createSingleExceptionOnBit(siteClass Class<?>, desc String, exceptionClass Class<? extends Throwable>, bitName String) : String from class org.apache.drill.exec.server.TestDrillbitResilience",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier public to private in class org.apache.drill.exec.testing.ExecutionControls.Controls",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type exceptionClass : String to exceptionClass : Class<? extends Throwable> in method public skipAndLimit() : void from class org.apache.drill.exec.testing.TestExceptionInjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type exceptionClass : String to exceptionClass : Class<? extends Throwable> in method public injectionOnSpecificBit() : void from class org.apache.drill.exec.testing.TestExceptionInjection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable endpoint : DrillbitEndpoint to endpoint : DrillbitEndpoint in method public createExceptionOnBit(siteClass Class<?>, desc String, nSkip int, nFire int, exceptionClass Class<? extends Throwable>, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2963
}, {
  "id" : 1124370,
  "repository" : "https://github.com/aws/aws-sdk-java.git",
  "sha1" : "4baf0a4de8d03022df48d696d210cc8b3117d38a",
  "url" : "https://github.com/aws/aws-sdk-java/commit/4baf0a4de8d03022df48d696d210cc8b3117d38a",
  "author" : "AWS",
  "time" : "6/24/15 8:54 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private pause(delay long) : void extracted from private pauseExponentially(retries int) : void in class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "if statement has been added"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private callUntilCompletion(batch Map<String,List<WriteRequest>>) : FailedBatch renamed to private doBatchWriteItemWithRetry(batch Map<String,List<WriteRequest>>, batchWriteRetryStrategy BatchWriteRetryStrategy) : FailedBatch in class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private server : ServerSocket from class com.amazonaws.util.EC2MetadataUtilsTest to private server : ServerSocket from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private outputInstanceInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private outputInstanceInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private outputIamCredList(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private outputIamCredList(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private handleConnection(input BufferedReader, output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private handleConnection(input BufferedReader, output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private outputIamCred(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private outputIamCred(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private outputIamInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private outputIamInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private ignoreRequest(input BufferedReader) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private ignoreRequest(input BufferedReader) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>This seems to be extract class refactoring!</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable pendingItems : Map<String,List<WriteRequest>> in method private doBatchWriteItemWithRetry(batch Map<String,List<WriteRequest>>, batchWriteRetryStrategy BatchWriteRetryStrategy) : FailedBatch from class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Tag to ele : Tag in method public withTags(tags Tag...) : DescribeTagsResult from class com.amazonaws.services.elasticfilesystem.model.DescribeTagsResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to ele : String in method public withSecurityGroups(securityGroups String...) : ModifyMountTargetSecurityGroupsRequest from class com.amazonaws.services.elasticfilesystem.model.ModifyMountTargetSecurityGroupsRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Artifact to ele : Artifact in method public withArtifactList(artifactList Artifact...) : UpdateJobResult from class com.amazonaws.services.importexport.model.UpdateJobResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to ele : String in method public withTagKeys(tagKeys String...) : DeleteTagsRequest from class com.amazonaws.services.elasticfilesystem.model.DeleteTagsRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Artifact to ele : Artifact in method public withArtifactList(artifactList Artifact...) : CreateJobResult from class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : FileSystemDescription to ele : FileSystemDescription in method public withFileSystems(fileSystems FileSystemDescription...) : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Artifact to ele : Artifact in method public withArtifactList(artifactList Artifact...) : GetStatusResult from class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to ele : String in method public withSecurityGroups(securityGroups String...) : CreateMountTargetRequest from class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to ele : String in method public withSecurityGroups(securityGroups String...) : DescribeMountTargetSecurityGroupsResult from class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetSecurityGroupsResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Tag to ele : Tag in method public withTags(tags Tag...) : CreateTagsRequest from class com.amazonaws.services.elasticfilesystem.model.CreateTagsRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to ele : String in method public withJobIds(jobIds String...) : GetShippingLabelRequest from class com.amazonaws.services.importexport.model.GetShippingLabelRequest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : MountTargetDescription to ele : MountTargetDescription in method public withMountTargets(mountTargets MountTargetDescription...) : DescribeMountTargetsResult from class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : Job to ele : Job in method public withJobs(jobs Job...) : ListJobsResult from class com.amazonaws.services.importexport.model.ListJobsResult",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to maxItems : String in method public marshall(describeMountTargetsRequest DescribeMountTargetsRequest) : Request<DescribeMountTargetsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to maxItems : String in method public marshall(describeFileSystemsRequest DescribeFileSystemsRequest) : Request<DescribeFileSystemsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to fileSystemId : String in method public marshall(describeFileSystemsRequest DescribeFileSystemsRequest) : Request<DescribeFileSystemsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to fileSystemId : String in method public marshall(describeMountTargetsRequest DescribeMountTargetsRequest) : Request<DescribeMountTargetsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to marker : String in method public marshall(describeTagsRequest DescribeTagsRequest) : Request<DescribeTagsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeTagsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to marker : String in method public marshall(describeMountTargetsRequest DescribeMountTargetsRequest) : Request<DescribeMountTargetsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to creationToken : String in method public marshall(describeFileSystemsRequest DescribeFileSystemsRequest) : Request<DescribeFileSystemsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to marker : String in method public marshall(describeFileSystemsRequest DescribeFileSystemsRequest) : Request<DescribeFileSystemsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable value : String to maxItems : String in method public marshall(describeTagsRequest DescribeTagsRequest) : Request<DescribeTagsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeTagsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute server : ServerSocket to SERVER : EC2MetadataUtilsServer in class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable response : Response<Void> in method public deleteMountTarget(deleteMountTargetRequest DeleteMountTargetRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable response : Response<Void> in method public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable response : Response<Void> in method public createTags(createTagsRequest CreateTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable response : Response<Void> in method public deleteTags(deleteTagsRequest DeleteTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable response : Response<Void> in method public deleteFileSystem(deleteFileSystemRequest DeleteFileSystemRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class com.amazonaws.util.EC2MetadataUtilsServer from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected constructInstanceInfo() : String extracted from private outputInstanceInfo(output PrintWriter) : void in class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter executorService : ExecutorService to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "<p>Reordered constructors</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter clientConfiguration : ClientConfiguration to executorService : java.util.concurrent.ExecutorService in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "<p>Reordered constructors</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter responseHandler : HttpResponseHandler<AmazonWebServiceResponse<X>> to unmarshaller : Unmarshaller<X,JsonUnmarshallerContext> in method private invoke(request Request<Y>, unmarshaller Unmarshaller<X,JsonUnmarshallerContext>, executionContext ExecutionContext) : Response<X> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : "<p>responseHandler is instantiated inside invoke() and wraps the unmarshaller<br />JsonResponseHandler&lt;X&gt; responseHandler = new JsonResponseHandler&lt;X&gt;(unmarshaller);</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable target : String to uriResourcePath : String in method public marshall(describeFileSystemsRequest DescribeFileSystemsRequest) : Request<DescribeFileSystemsRequest> in class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable target : String to uriResourcePath : String in method public marshall(describeMountTargetsRequest DescribeMountTargetsRequest) : Request<DescribeMountTargetsRequest> in class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable target : String to uriResourcePath : String in method public marshall(describeTagsRequest DescribeTagsRequest) : Request<DescribeTagsRequest> in class com.amazonaws.services.elasticfilesystem.model.transform.DescribeTagsRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter executorService : ExecutorService to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "<p>Reordered constructors</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter clientConfiguration : ClientConfiguration to executorService : java.util.concurrent.ExecutorService in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "<p>Reordered constructors</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonElasticFileSystemAsyncClient(clientConfiguration com.amazonaws.ClientConfiguration) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "<p>from non-qualified to qualified</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonImportExportAsyncClient(clientConfiguration com.amazonaws.ClientConfiguration) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "<p>from non-qualified to qualified</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type server : ServerSocket to SERVER : EC2MetadataUtilsServer in class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type jsonErrorUnmarshallers : List<JsonErrorUnmarshaller> to jsonErrorUnmarshallers : List<JsonErrorUnmarshallerV2> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type errorResponseHandler : JsonErrorResponseHandler to errorResponseHandler : JsonErrorResponseHandlerV2 in method private invoke(request Request<Y>, unmarshaller Unmarshaller<X,JsonUnmarshallerContext>, executionContext ExecutionContext) : Response<X> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type securityGroups : ListWithAutoConstructFlag<String> to securityGroups : SdkInternalList<String> in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type tags : ListWithAutoConstructFlag<Tag> to tags : SdkInternalList<Tag> in class com.amazonaws.services.elasticfilesystem.model.CreateTagsRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type tagKeys : ListWithAutoConstructFlag<String> to tagKeys : SdkInternalList<String> in class com.amazonaws.services.elasticfilesystem.model.DeleteTagsRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type fileSystems : ListWithAutoConstructFlag<FileSystemDescription> to fileSystems : SdkInternalList<FileSystemDescription> in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type securityGroups : ListWithAutoConstructFlag<String> to securityGroups : SdkInternalList<String> in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetSecurityGroupsResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type mountTargets : ListWithAutoConstructFlag<MountTargetDescription> to mountTargets : SdkInternalList<MountTargetDescription> in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type tags : ListWithAutoConstructFlag<Tag> to tags : SdkInternalList<Tag> in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type securityGroups : ListWithAutoConstructFlag<String> to securityGroups : SdkInternalList<String> in class com.amazonaws.services.elasticfilesystem.model.ModifyMountTargetSecurityGroupsRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type artifactList : ListWithAutoConstructFlag<Artifact> to artifactList : SdkInternalList<Artifact> in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type jobIds : ListWithAutoConstructFlag<String> to jobIds : SdkInternalList<String> in class com.amazonaws.services.importexport.model.GetShippingLabelRequest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type artifactList : ListWithAutoConstructFlag<Artifact> to artifactList : SdkInternalList<Artifact> in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type jobs : ListWithAutoConstructFlag<Job> to jobs : SdkInternalList<Job> in class com.amazonaws.services.importexport.model.ListJobsResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type artifactList : ListWithAutoConstructFlag<Artifact> to artifactList : SdkInternalList<Artifact> in class com.amazonaws.services.importexport.model.UpdateJobResult",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult> in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : java.util.concurrent.Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : java.util.concurrent.Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateTagsRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void> in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DeleteFileSystemRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DeleteFileSystemRequest,Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteFileSystemRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DeleteMountTargetRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void> in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DeleteTagsRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void> in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult> in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : java.util.concurrent.Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeTagsRequest,DescribeTagsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest,DescribeTagsResult> in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : java.util.concurrent.Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void> in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonElasticFileSystemAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonElasticFileSystemAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonElasticFileSystemAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentials : AWSCredentials to awsCredentials : com.amazonaws.auth.AWSCredentials in method public AmazonElasticFileSystemAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentials : AWSCredentials to awsCredentials : com.amazonaws.auth.AWSCredentials in method public AmazonElasticFileSystemAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentials : AWSCredentials to awsCredentials : com.amazonaws.auth.AWSCredentials in method public AmazonElasticFileSystemAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to executorService : java.util.concurrent.ExecutorService in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult> in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : java.util.concurrent.Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : java.util.concurrent.Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateTagsRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void> in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DeleteFileSystemRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DeleteFileSystemRequest,Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteFileSystemRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DeleteMountTargetRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void> in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DeleteTagsRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void> in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult> in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : java.util.concurrent.Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<DescribeTagsRequest,DescribeTagsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest,DescribeTagsResult> in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : java.util.concurrent.Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void> to asyncHandler : com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void> in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CancelJobRequest,CancelJobResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult>) : java.util.concurrent.Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateJobRequest,CreateJobResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult>) : java.util.concurrent.Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : java.util.concurrent.Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<GetStatusRequest,GetStatusResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<GetStatusRequest,GetStatusResult> in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetStatusRequest,GetStatusResult>) : java.util.concurrent.Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<ListJobsRequest,ListJobsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult> in method public listJobsAsync(asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "<p>The two methods have a different number of parameters, although the type has been qualified in the overloaded methods</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<UpdateJobRequest,UpdateJobResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<UpdateJobRequest,UpdateJobResult> in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<UpdateJobRequest,UpdateJobResult>) : java.util.concurrent.Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonImportExportAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonImportExportAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonImportExportAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentials : AWSCredentials to awsCredentials : com.amazonaws.auth.AWSCredentials in method public AmazonImportExportAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentials : AWSCredentials to awsCredentials : com.amazonaws.auth.AWSCredentials in method public AmazonImportExportAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentials : AWSCredentials to awsCredentials : com.amazonaws.auth.AWSCredentials in method public AmazonImportExportAsyncClient(awsCredentials com.amazonaws.auth.AWSCredentials, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type awsCredentialsProvider : AWSCredentialsProvider to awsCredentialsProvider : com.amazonaws.auth.AWSCredentialsProvider in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to executorService : java.util.concurrent.ExecutorService in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CancelJobRequest,CancelJobResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult>) : java.util.concurrent.Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<CreateJobRequest,CreateJobResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult>) : java.util.concurrent.Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : java.util.concurrent.Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<GetStatusRequest,GetStatusResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<GetStatusRequest,GetStatusResult> in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetStatusRequest,GetStatusResult>) : java.util.concurrent.Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<ListJobsRequest,ListJobsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult> in method public listJobsAsync(asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "<p>The two methods have a different number of parameters, although the type has been qualified in the overloaded methods</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<UpdateJobRequest,UpdateJobResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<UpdateJobRequest,UpdateJobResult> in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<UpdateJobRequest,UpdateJobResult>) : java.util.concurrent.Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<ListJobsRequest,ListJobsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult> in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, executorService java.util.concurrent.ExecutorService) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type asyncHandler : AsyncHandler<ListJobsRequest,ListJobsResult> to asyncHandler : com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult> in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateFileSystemResult> to java.util.concurrent.Future<CreateFileSystemResult> in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : java.util.concurrent.Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateFileSystemResult> to java.util.concurrent.Future<CreateFileSystemResult> in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : java.util.concurrent.Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeFileSystemsResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeFileSystemsResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public createTagsAsync(createTagsRequest CreateTagsRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteFileSystemRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetsResult> to java.util.concurrent.Future<DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : java.util.concurrent.Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetsResult> to java.util.concurrent.Future<DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : java.util.concurrent.Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateMountTargetResult> to java.util.concurrent.Future<CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : java.util.concurrent.Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateMountTargetResult> to java.util.concurrent.Future<CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : java.util.concurrent.Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetSecurityGroupsResult> to java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetSecurityGroupsResult> to java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeTagsResult> to java.util.concurrent.Future<DescribeTagsResult> in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : java.util.concurrent.Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeTagsResult> to java.util.concurrent.Future<DescribeTagsResult> in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : java.util.concurrent.Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ExecutorService to java.util.concurrent.ExecutorService in method public getExecutorService() : java.util.concurrent.ExecutorService from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateFileSystemResult> to java.util.concurrent.Future<CreateFileSystemResult> in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : java.util.concurrent.Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateFileSystemResult> to java.util.concurrent.Future<CreateFileSystemResult> in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : java.util.concurrent.Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeFileSystemsResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeFileSystemsResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public createTagsAsync(createTagsRequest CreateTagsRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteFileSystemRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetsResult> to java.util.concurrent.Future<DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : java.util.concurrent.Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetsResult> to java.util.concurrent.Future<DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : java.util.concurrent.Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateMountTargetResult> to java.util.concurrent.Future<CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : java.util.concurrent.Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateMountTargetResult> to java.util.concurrent.Future<CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : java.util.concurrent.Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetSecurityGroupsResult> to java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetSecurityGroupsResult> to java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : java.util.concurrent.Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeTagsResult> to java.util.concurrent.Future<DescribeTagsResult> in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : java.util.concurrent.Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeTagsResult> to java.util.concurrent.Future<DescribeTagsResult> in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : java.util.concurrent.Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<Void> in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void>) : java.util.concurrent.Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest) : java.util.concurrent.Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult>) : java.util.concurrent.Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : java.util.concurrent.Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : java.util.concurrent.Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : java.util.concurrent.Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult>) : java.util.concurrent.Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetStatusResult> to java.util.concurrent.Future<GetStatusResult> in method public getStatusAsync(getStatusRequest GetStatusRequest) : java.util.concurrent.Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetStatusResult> to java.util.concurrent.Future<GetStatusResult> in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetStatusRequest,GetStatusResult>) : java.util.concurrent.Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<ListJobsResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync(listJobsRequest ListJobsRequest) : java.util.concurrent.Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<ListJobsResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<UpdateJobResult> to java.util.concurrent.Future<UpdateJobResult> in method public updateJobAsync(updateJobRequest UpdateJobRequest) : java.util.concurrent.Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<UpdateJobResult> to java.util.concurrent.Future<UpdateJobResult> in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<UpdateJobRequest,UpdateJobResult>) : java.util.concurrent.Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ExecutorService to java.util.concurrent.ExecutorService in method public getExecutorService() : java.util.concurrent.ExecutorService from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest) : java.util.concurrent.Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult>) : java.util.concurrent.Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : java.util.concurrent.Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : java.util.concurrent.Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : java.util.concurrent.Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult>) : java.util.concurrent.Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetStatusResult> to java.util.concurrent.Future<GetStatusResult> in method public getStatusAsync(getStatusRequest GetStatusRequest) : java.util.concurrent.Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetStatusResult> to java.util.concurrent.Future<GetStatusResult> in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetStatusRequest,GetStatusResult>) : java.util.concurrent.Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<ListJobsResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync(listJobsRequest ListJobsRequest) : java.util.concurrent.Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<ListJobsResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<UpdateJobResult> to java.util.concurrent.Future<UpdateJobResult> in method public updateJobAsync(updateJobRequest UpdateJobRequest) : java.util.concurrent.Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<UpdateJobResult> to java.util.concurrent.Future<UpdateJobResult> in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<UpdateJobRequest,UpdateJobResult>) : java.util.concurrent.Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonElasticFileSystemAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type clientConfiguration : ClientConfiguration to clientConfiguration : com.amazonaws.ClientConfiguration in method public AmazonImportExportAsyncClient(awsCredentialsProvider com.amazonaws.auth.AWSCredentialsProvider, clientConfiguration com.amazonaws.ClientConfiguration) from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type jobIdsList : List<String> to jobIdsList : SdkInternalList<String> in method public marshall(getShippingLabelRequest GetShippingLabelRequest) : Request<GetShippingLabelRequest> from class com.amazonaws.services.importexport.model.transform.GetShippingLabelRequestMarshaller",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type executorService : ExecutorService to executorService : java.util.concurrent.ExecutorService in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable result : Void in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteTagsAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable result : Void in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteFileSystemAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable result : Void in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteMountTargetAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable result : Void in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.modifyMountTargetSecurityGroupsAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable result : Void in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createTagsAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateFileSystemResult> to java.util.concurrent.Future<CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : java.util.concurrent.Future<CreateMountTargetResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<CreateMountTargetResult> in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : java.util.concurrent.Future<CreateMountTargetResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeFileSystemsResult> to java.util.concurrent.Future<Void> in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetsResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<DescribeMountTargetsResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateMountTargetResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync() : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateMountTargetResult> to java.util.concurrent.Future<DescribeFileSystemsResult> in method public describeFileSystemsAsync(asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : java.util.concurrent.Future<DescribeMountTargetsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<Void> to java.util.concurrent.Future<DescribeMountTargetsResult> in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : java.util.concurrent.Future<DescribeMountTargetsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : java.util.concurrent.Future<CancelJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult>) : java.util.concurrent.Future<CancelJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest) : java.util.concurrent.Future<CreateJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult>) : java.util.concurrent.Future<CreateJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : java.util.concurrent.Future<GetShippingLabelResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : java.util.concurrent.Future<GetShippingLabelResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<ListJobsResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync() : java.util.concurrent.Future<ListJobsResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>listJobsAsync</span>()</span> with 0 parameters is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CreateJobResult> to java.util.concurrent.Future<CancelJobResult> in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : java.util.concurrent.Future<CancelJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<GetShippingLabelResult> to java.util.concurrent.Future<CreateJobResult> in method public createJobAsync(createJobRequest CreateJobRequest) : java.util.concurrent.Future<CreateJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<CancelJobResult> to java.util.concurrent.Future<GetShippingLabelResult> in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : java.util.concurrent.Future<GetShippingLabelResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<ListJobsResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync() : java.util.concurrent.Future<ListJobsResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>listJobsAsync</span>()</span> with 0 parameters is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Future<UpdateJobResult> to java.util.concurrent.Future<ListJobsResult> in method public listJobsAsync(asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type securityGroupsList : ListWithAutoConstructFlag<String> to securityGroupsList : SdkInternalList<String> in method public marshall(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Request<ModifyMountTargetSecurityGroupsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.ModifyMountTargetSecurityGroupsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type tagsList : ListWithAutoConstructFlag<Tag> to tagsList : SdkInternalList<Tag> in method public marshall(createTagsRequest CreateTagsRequest) : Request<CreateTagsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateTagsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type securityGroupsList : ListWithAutoConstructFlag<String> to securityGroupsList : SdkInternalList<String> in method public marshall(createMountTargetRequest CreateMountTargetRequest) : Request<CreateMountTargetRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateMountTargetRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type tagKeysList : ListWithAutoConstructFlag<String> to tagKeysList : SdkInternalList<String> in method public marshall(deleteTagsRequest DeleteTagsRequest) : Request<DeleteTagsRequest> from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteTagsRequestMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.IncorrectFileSystemLifeCycleStateExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.InternalServerErrorExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.IncorrectMountTargetStateExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.NoFreeAddressesInSubnetExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.IpAddressInUseExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemAlreadyExistsExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.SecurityGroupNotFoundExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.SecurityGroupLimitExceededExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.SubnetNotFoundExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.UnsupportedAvailabilityZoneExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.MountTargetNotFoundExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.BadRequestExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.MountTargetConflictExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemInUseExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemNotFoundExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemLimitExceededExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.NetworkInterfaceLimitExceededExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.elasticfilesystem.model.transform.DependencyTimeoutExceptionUnmarshaller to public match(errorTypeFromHeader String, json JSONObject) : boolean from class com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller to private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.CreateTagsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeTagsRequestMarshaller to private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteFileSystemRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.CreateFileSystemRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.RemoveTagsFromVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller to private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.ListTagsForVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.CreateFileSystemRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.ListTagsForVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetSecurityGroupsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetSecurityGroupsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller to private DYNAMIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.RemoveTagsFromVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateFileSystemRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateMountTargetRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.ModifyMountTargetSecurityGroupsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteFileSystemRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.ModifyMountTargetSecurityGroupsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteMountTargetRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeMountTargetsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeTagsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateTagsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateFileSystemRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.RemoveTagsFromVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteTagsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteTagsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DeleteMountTargetRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.CreateMountTargetRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeTagsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.elasticfilesystem.model.transform.CreateFileSystemRequestMarshaller to private RESOURCE_PATH_TEMPLATE : String from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.CreateFileSystemRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.ListTagsForVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public start() : void extracted from public setUp() : void in class com.amazonaws.util.EC2MetadataUtilsTest & moved to class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>setup() now calls SERVER.start()</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected constructInstanceInfo() : String extracted from private outputInstanceInfo(output PrintWriter) : void in class com.amazonaws.util.EC2MetadataUtilsTest & moved to class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "<p>Extract Class com.amazonaws.util.EC2MetadataUtilsServer from class com.amazonaws.util.EC2MetadataUtilsTest</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getInstance() : TagJsonMarshaller extracted from public marshall(createTagsRequest CreateTagsRequest) : Request<CreateTagsRequest> in class com.amazonaws.services.elasticfilesystem.model.transform.CreateTagsRequestMarshaller & moved to class com.amazonaws.services.elasticfilesystem.model.transform.TagJsonMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public marshall(tag Tag, jsonWriter JSONWriter) : void extracted from public marshall(createTagsRequest CreateTagsRequest) : Request<CreateTagsRequest> in class com.amazonaws.services.elasticfilesystem.model.transform.CreateTagsRequestMarshaller & moved to class com.amazonaws.services.elasticfilesystem.model.transform.TagJsonMarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.elasticfilesystem.model.transform.DescribeFileSystemsRequestMarshaller to private STATIC_QUERY_PARAMS : Map<String,String> from class com.amazonaws.services.glacier.model.transform.AddTagsToVaultRequestMarshaller",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private runServer() : void from class com.amazonaws.util.EC2MetadataUtilsTest to private startServer() : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private killServer() : void from class com.amazonaws.util.EC2MetadataUtilsTest to public stop() : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getLocalPort() : int extracted from public setUp() : void in class com.amazonaws.util.EC2MetadataUtilsTest & moved to class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.amazonaws.services.elasticfilesystem.model.transform.SecurityGroupNotFoundExceptionUnmarshaller moved and renamed to com.amazonaws.services.config.model.transform.InvalidRecordingGroupExceptionUnmarshaller",
    "comment" : "<p>for some reason nikos had validated as ukn</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemNotFoundExceptionUnmarshaller moved and renamed to com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.amazonaws.services.elasticfilesystem.model.transform.BadRequestExceptionUnmarshaller moved and renamed to com.amazonaws.services.cognitosync.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.amazonaws.services.elasticfilesystem.model.transform.NoFreeAddressesInSubnetExceptionUnmarshaller moved and renamed to com.amazonaws.services.config.model.transform.InvalidRecordingGroupExceptionUnmarshaller",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.amazonaws.services.elasticfilesystem.model.transform.InternalServerErrorExceptionUnmarshaller moved and renamed to com.amazonaws.services.cognitosync.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemNotFoundExceptionUnmarshaller moved and renamed to com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getDescription() : String renamed to public setDescription(description String) : void in class com.amazonaws.services.importexport.model.Artifact",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setDescription(description String) : void renamed to public getDescription() : String in class com.amazonaws.services.importexport.model.Artifact",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getURL() : String renamed to public setURL(uRL String) : void in class com.amazonaws.services.importexport.model.Artifact",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setURL(uRL String) : void renamed to public getURL() : String in class com.amazonaws.services.importexport.model.Artifact",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMaxItems() : Integer renamed to public setMaxItems(maxItems Integer...) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMaxItems(maxItems Integer...) : void renamed to public getMaxItems() : Integer in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMountTargetId() : String renamed to public setMountTargetId(mountTargetId String) : void in class com.amazonaws.services.elasticfilesystem.model.ModifyMountTargetSecurityGroupsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMountTargetId(mountTargetId String) : void renamed to public getMountTargetId() : String in class com.amazonaws.services.elasticfilesystem.model.ModifyMountTargetSecurityGroupsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNextMarker() : String renamed to public setNextMarker(nextMarker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNextMarker(nextMarker String) : void renamed to public getNextMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.DeleteFileSystemRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.DeleteFileSystemRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobId() : String renamed to public setJobId(jobId String) : void in class com.amazonaws.services.importexport.model.GetStatusRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobId(jobId String) : void renamed to public getJobId() : String in class com.amazonaws.services.importexport.model.GetStatusRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAPIVersion() : String renamed to public setAPIVersion(aPIVersion String) : void in class com.amazonaws.services.importexport.model.GetStatusRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setAPIVersion(aPIVersion String) : void renamed to public getAPIVersion() : String in class com.amazonaws.services.importexport.model.GetStatusRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getOwnerId() : String renamed to public setOwnerId(ownerId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setOwnerId(ownerId String) : void renamed to public getOwnerId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMountTargetId() : String renamed to public setMountTargetId(mountTargetId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMountTargetId(mountTargetId String) : void renamed to public getMountTargetId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSubnetId() : String renamed to public setSubnetId(subnetId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSubnetId(subnetId String) : void renamed to public getSubnetId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLifeCycleState() : String renamed to public setLifeCycleState(lifeCycleState String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLifeCycleState(lifeCycleState String) : void renamed to public getLifeCycleState() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getIpAddress() : String renamed to public setIpAddress(ipAddress String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setIpAddress(ipAddress String) : void renamed to public getIpAddress() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNetworkInterfaceId() : String renamed to public setNetworkInterfaceId(networkInterfaceId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNetworkInterfaceId(networkInterfaceId String) : void renamed to public getNetworkInterfaceId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getShippingLabel(getShippingLabelRequest GetShippingLabelRequest) : GetShippingLabelResult renamed to public createJob(createJobRequest CreateJobRequest) : CreateJobResult in class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public cancelJob(cancelJobRequest CancelJobRequest) : CancelJobResult renamed to public getShippingLabel(getShippingLabelRequest GetShippingLabelRequest) : GetShippingLabelResult in class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public listJobs() : ListJobsResult renamed to public updateJob(updateJobRequest UpdateJobRequest) : UpdateJobResult in class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMountTargetId() : String renamed to public setMountTargetId(mountTargetId String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetSecurityGroupsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMountTargetId(mountTargetId String) : void renamed to public getMountTargetId() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetSecurityGroupsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSuccess(success Boolean) : void renamed to public getSuccess() : Boolean in class com.amazonaws.services.importexport.model.CancelJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSuccess() : Boolean renamed to public isSuccess() : Boolean in class com.amazonaws.services.importexport.model.CancelJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobId() : String renamed to public setJobId(jobId String) : void in class com.amazonaws.services.importexport.model.CancelJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobId(jobId String) : void renamed to public getJobId() : String in class com.amazonaws.services.importexport.model.CancelJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAPIVersion() : String renamed to public setAPIVersion(aPIVersion String) : void in class com.amazonaws.services.importexport.model.CancelJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setAPIVersion(aPIVersion String) : void renamed to public getAPIVersion() : String in class com.amazonaws.services.importexport.model.CancelJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultAccessPolicy(deleteVaultAccessPolicyRequest DeleteVaultAccessPolicyRequest) : void renamed to public deleteVaultNotifications(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest) : void in class com.amazonaws.services.glacier.AmazonGlacier",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultNotifications(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest) : void renamed to public removeTagsFromVault(removeTagsFromVaultRequest RemoveTagsFromVaultRequest) : void in class com.amazonaws.services.glacier.AmazonGlacier",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSubnetId() : String renamed to public setSubnetId(subnetId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSubnetId(subnetId String) : void renamed to public getSubnetId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getIpAddress() : String renamed to public setIpAddress(ipAddress String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setIpAddress(ipAddress String) : void renamed to public getIpAddress() : String in class com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobId() : String renamed to public setJobId(jobId String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobId(jobId String) : void renamed to public getJobId() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobType() : String renamed to public setJobType(jobType String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobType(jobType String) : void renamed to public getJobType() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLocationCode() : String renamed to public setLocationCode(locationCode String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLocationCode(locationCode String) : void renamed to public getLocationCode() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLocationMessage() : String renamed to public setLocationMessage(locationMessage String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLocationMessage(locationMessage String) : void renamed to public getLocationMessage() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getProgressCode() : String renamed to public setProgressCode(progressCode String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setProgressCode(progressCode String) : void renamed to public getProgressCode() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getProgressMessage() : String renamed to public setProgressMessage(progressMessage String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setProgressMessage(progressMessage String) : void renamed to public getProgressMessage() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCarrier() : String renamed to public setCarrier(carrier String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCarrier(carrier String) : void renamed to public getCarrier() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getTrackingNumber() : String renamed to public setTrackingNumber(trackingNumber String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setTrackingNumber(trackingNumber String) : void renamed to public getTrackingNumber() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLogBucket() : String renamed to public setLogBucket(logBucket String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLogBucket(logBucket String) : void renamed to public getLogBucket() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLogKey() : String renamed to public setLogKey(logKey String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLogKey(logKey String) : void renamed to public getLogKey() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getErrorCount() : Integer renamed to public setErrorCount(errorCount Integer) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setErrorCount(errorCount Integer) : void renamed to public getErrorCount() : Integer in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSignature() : String renamed to public setSignature(signature String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSignature(signature String) : void renamed to public getSignature() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSignatureFileContents() : String renamed to public setSignatureFileContents(signatureFileContents String...) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSignatureFileContents(signatureFileContents String...) : void renamed to public getSignatureFileContents() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCurrentManifest() : String renamed to public setCurrentManifest(currentManifest String) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCurrentManifest(currentManifest String) : void renamed to public getCurrentManifest() : String in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationDate() : java.util.Date renamed to public setCreationDate(creationDate java.util.Date) : void in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : "<p>get-set investigate&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationDate(creationDate java.util.Date) : void renamed to public getCreationDate() : java.util.Date in class com.amazonaws.services.importexport.model.GetStatusResult",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobId() : String renamed to public setJobId(jobId String) : void in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobId(jobId String) : void renamed to public getJobId() : String in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobType() : String renamed to public setJobType(jobType String) : void in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobType(jobType String) : void renamed to public getJobType() : String in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSignature() : String renamed to public setSignature(signature String) : void in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSignature(signature String) : void renamed to public getSignature() : String in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSignatureFileContents() : String renamed to public setSignatureFileContents(signatureFileContents String...) : void in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSignatureFileContents(signatureFileContents String...) : void renamed to public getSignatureFileContents() : String in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getWarningMessage() : String renamed to public setWarningMessage(warningMessage String) : void in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setWarningMessage(warningMessage String) : void renamed to public getWarningMessage() : String in class com.amazonaws.services.importexport.model.CreateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getOwnerId() : String renamed to public setOwnerId(ownerId String) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setOwnerId(ownerId String) : void renamed to public getOwnerId() : String in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationToken() : String renamed to public setCreationToken(creationToken String) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationToken(creationToken String) : void renamed to public getCreationToken() : String in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationTime() : java.util.Date renamed to public setCreationTime(creationTime java.util.Date) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationTime(creationTime java.util.Date) : void renamed to public getCreationTime() : java.util.Date in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLifeCycleState() : String renamed to public setLifeCycleState(lifeCycleState String) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLifeCycleState(lifeCycleState String) : void renamed to public getLifeCycleState() : String in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getName() : String renamed to public setName(name String) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setName(name String) : void renamed to public getName() : String in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumberOfMountTargets() : Integer renamed to public setNumberOfMountTargets(numberOfMountTargets Integer...) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNumberOfMountTargets(numberOfMountTargets Integer...) : void renamed to public getNumberOfMountTargets() : Integer in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSizeInBytes() : FileSystemSize renamed to public setSizeInBytes(sizeInBytes FileSystemSize...) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSizeInBytes(sizeInBytes FileSystemSize...) : void renamed to public getSizeInBytes() : FileSystemSize in class com.amazonaws.services.elasticfilesystem.model.FileSystemDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMaxItems() : Integer renamed to public setMaxItems(maxItems Integer...) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMaxItems(maxItems Integer...) : void renamed to public getMaxItems() : Integer in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationToken() : String renamed to public setCreationToken(creationToken String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationToken(creationToken String) : void renamed to public getCreationToken() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMaxItems() : Integer renamed to public setMaxItems(maxItems Integer...) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMaxItems(maxItems Integer...) : void renamed to public getMaxItems() : Integer in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobId() : String renamed to public setJobId(jobId String) : void in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobId(jobId String) : void renamed to public getJobId() : String in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getManifest() : String renamed to public setManifest(manifest String) : void in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setManifest(manifest String) : void renamed to public getManifest() : String in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobType() : String renamed to public setJobType(jobType String) : void in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobType(jobType String) : void renamed to public getJobType() : String in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isValidateOnly() : Boolean renamed to public setValidateOnly(validateOnly Boolean) : void in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setValidateOnly(validateOnly Boolean) : void renamed to public getValidateOnly() : Boolean in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getValidateOnly() : Boolean renamed to public isValidateOnly() : Boolean in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAPIVersion() : String renamed to public setAPIVersion(aPIVersion String) : void in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setAPIVersion(aPIVersion String) : void renamed to public getAPIVersion() : String in class com.amazonaws.services.importexport.model.UpdateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public listJobs() : ListJobsResult renamed to public updateJob(updateJobRequest UpdateJobRequest) : UpdateJobResult in class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getValue() : Long renamed to public setValue(value Long) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemSize",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setValue(value Long) : void renamed to public getValue() : Long in class com.amazonaws.services.elasticfilesystem.model.FileSystemSize",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getTimestamp() : java.util.Date renamed to public setTimestamp(timestamp java.util.Date) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemSize",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setTimestamp(timestamp java.util.Date) : void renamed to public getTimestamp() : java.util.Date in class com.amazonaws.services.elasticfilesystem.model.FileSystemSize",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNextMarker() : String renamed to public setNextMarker(nextMarker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNextMarker(nextMarker String) : void renamed to public getNextMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobType() : String renamed to public setJobType(jobType String) : void in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobType(jobType String) : void renamed to public getJobType() : String in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getManifest() : String renamed to public setManifest(manifest String) : void in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setManifest(manifest String) : void renamed to public getManifest() : String in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getManifestAddendum() : String renamed to public setManifestAddendum(manifestAddendum String) : void in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setManifestAddendum(manifestAddendum String) : void renamed to public getManifestAddendum() : String in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isValidateOnly() : Boolean renamed to public setValidateOnly(validateOnly Boolean) : void in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setValidateOnly(validateOnly Boolean) : void renamed to public getValidateOnly() : Boolean in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getValidateOnly() : Boolean renamed to public isValidateOnly() : Boolean in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAPIVersion() : String renamed to public setAPIVersion(aPIVersion String) : void in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setAPIVersion(aPIVersion String) : void renamed to public getAPIVersion() : String in class com.amazonaws.services.importexport.model.CreateJobRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationToken() : String renamed to public setCreationToken(creationToken String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationToken(creationToken String) : void renamed to public getCreationToken() : String in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getKey() : String renamed to public setKey(key String) : void in class com.amazonaws.services.elasticfilesystem.model.Tag",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setKey(key String) : void renamed to public getKey() : String in class com.amazonaws.services.elasticfilesystem.model.Tag",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getValue() : String renamed to public setValue(value String) : void in class com.amazonaws.services.elasticfilesystem.model.Tag",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setValue(value String) : void renamed to public getValue() : String in class com.amazonaws.services.elasticfilesystem.model.Tag",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMountTargetId() : String renamed to public setMountTargetId(mountTargetId String) : void in class com.amazonaws.services.elasticfilesystem.model.DeleteMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMountTargetId(mountTargetId String) : void renamed to public getMountTargetId() : String in class com.amazonaws.services.elasticfilesystem.model.DeleteMountTargetRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.DeleteTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.DeleteTagsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getOwnerId() : String renamed to public setOwnerId(ownerId String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setOwnerId(ownerId String) : void renamed to public getOwnerId() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMountTargetId() : String renamed to public setMountTargetId(mountTargetId String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMountTargetId(mountTargetId String) : void renamed to public getMountTargetId() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSubnetId() : String renamed to public setSubnetId(subnetId String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSubnetId(subnetId String) : void renamed to public getSubnetId() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLifeCycleState() : String renamed to public setLifeCycleState(lifeCycleState String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLifeCycleState(lifeCycleState String) : void renamed to public getLifeCycleState() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getIpAddress() : String renamed to public setIpAddress(ipAddress String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setIpAddress(ipAddress String) : void renamed to public getIpAddress() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNetworkInterfaceId() : String renamed to public setNetworkInterfaceId(networkInterfaceId String) : void in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNetworkInterfaceId(networkInterfaceId String) : void renamed to public getNetworkInterfaceId() : String in class com.amazonaws.services.elasticfilesystem.model.MountTargetDescription",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobId() : String renamed to public setJobId(jobId String) : void in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobId(jobId String) : void renamed to public getJobId() : String in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationDate() : java.util.Date renamed to public setCreationDate(creationDate java.util.Date) : void in class com.amazonaws.services.importexport.model.Job",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationDate(creationDate java.util.Date) : void renamed to public getCreationDate() : java.util.Date in class com.amazonaws.services.importexport.model.Job",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isCanceled() : Boolean renamed to public setIsCanceled(isCanceled Boolean) : void in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setIsCanceled(isCanceled Boolean) : void renamed to public getIsCanceled() : Boolean in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getIsCanceled() : Boolean renamed to public isCanceled() : Boolean in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getJobType() : String renamed to public setJobType(jobType String) : void in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setJobType(jobType String) : void renamed to public getJobType() : String in class com.amazonaws.services.importexport.model.Job",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getOwnerId() : String renamed to public setOwnerId(ownerId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setOwnerId(ownerId String) : void renamed to public getOwnerId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationToken() : String renamed to public setCreationToken(creationToken String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationToken(creationToken String) : void renamed to public getCreationToken() : String in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getFileSystemId() : String renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setFileSystemId(fileSystemId String) : void renamed to public getFileSystemId() : String in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getCreationTime() : java.util.Date renamed to public setCreationTime(creationTime java.util.Date) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setCreationTime(creationTime java.util.Date) : void renamed to public getCreationTime() : java.util.Date in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLifeCycleState() : String renamed to public setLifeCycleState(lifeCycleState String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setLifeCycleState(lifeCycleState String) : void renamed to public getLifeCycleState() : String in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getName() : String renamed to public setName(name String) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setName(name String) : void renamed to public getName() : String in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNumberOfMountTargets() : Integer renamed to public setNumberOfMountTargets(numberOfMountTargets Integer...) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNumberOfMountTargets(numberOfMountTargets Integer...) : void renamed to public getNumberOfMountTargets() : Integer in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSizeInBytes() : FileSystemSize renamed to public setSizeInBytes(sizeInBytes FileSystemSize...) : void in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSizeInBytes(sizeInBytes FileSystemSize...) : void renamed to public getSizeInBytes() : FileSystemSize in class com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMaxJobs() : Integer renamed to public setMaxJobs(maxJobs Integer...) : void in class com.amazonaws.services.importexport.model.ListJobsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMaxJobs(maxJobs Integer...) : void renamed to public getMaxJobs() : Integer in class com.amazonaws.services.importexport.model.ListJobsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.importexport.model.ListJobsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.importexport.model.ListJobsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getAPIVersion() : String renamed to public setAPIVersion(aPIVersion String) : void in class com.amazonaws.services.importexport.model.ListJobsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setAPIVersion(aPIVersion String) : void renamed to public getAPIVersion() : String in class com.amazonaws.services.importexport.model.ListJobsRequest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultAccessPolicyAsync(deleteVaultAccessPolicyRequest DeleteVaultAccessPolicyRequest) : Future<Void> renamed to public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest) : Future<Void> in class com.amazonaws.services.glacier.AmazonGlacierAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultAccessPolicyAsync(deleteVaultAccessPolicyRequest DeleteVaultAccessPolicyRequest, asyncHandler AsyncHandler<DeleteVaultAccessPolicyRequest,Void>) : Future<Void> renamed to public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest, asyncHandler AsyncHandler<DeleteVaultNotificationsRequest,Void>) : Future<Void> in class com.amazonaws.services.glacier.AmazonGlacierAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest) : Future<Void> renamed to public listTagsForVaultAsync(listTagsForVaultRequest ListTagsForVaultRequest, asyncHandler AsyncHandler<ListTagsForVaultRequest,ListTagsForVaultResult>) : Future<ListTagsForVaultResult> in class com.amazonaws.services.glacier.AmazonGlacierAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest, asyncHandler AsyncHandler<DeleteVaultNotificationsRequest,Void>) : Future<Void> renamed to public removeTagsFromVaultAsync(removeTagsFromVaultRequest RemoveTagsFromVaultRequest, asyncHandler AsyncHandler<RemoveTagsFromVaultRequest,Void>) : Future<Void> in class com.amazonaws.services.glacier.AmazonGlacierAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> renamed to public cancelJobAsync(cancelJobRequest CancelJobRequest) : java.util.concurrent.Future<CancelJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> renamed to public createJobAsync(createJobRequest CreateJobRequest) : java.util.concurrent.Future<CreateJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> renamed to public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : java.util.concurrent.Future<GetShippingLabelResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public updateJobAsync(updateJobRequest UpdateJobRequest) : Future<UpdateJobResult> renamed to public listJobsAsync(asyncHandler com.amazonaws.handlers.AsyncHandler<ListJobsRequest,ListJobsResult>) : java.util.concurrent.Future<ListJobsResult> in class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> renamed to public cancelJobAsync(cancelJobRequest CancelJobRequest) : java.util.concurrent.Future<CancelJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler AsyncHandler<CreateJobRequest,CreateJobResult>) : Future<CreateJobResult> renamed to public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CancelJobRequest,CancelJobResult>) : java.util.concurrent.Future<CancelJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> renamed to public createJobAsync(createJobRequest CreateJobRequest) : java.util.concurrent.Future<CreateJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : Future<GetShippingLabelResult> renamed to public createJobAsync(createJobRequest CreateJobRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateJobRequest,CreateJobResult>) : java.util.concurrent.Future<CreateJobResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> renamed to public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : java.util.concurrent.Future<GetShippingLabelResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler AsyncHandler<CancelJobRequest,CancelJobResult>) : Future<CancelJobResult> renamed to public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : java.util.concurrent.Future<GetShippingLabelResult> in class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setSuccess(success Boolean) : void renamed to public getSuccess() : Boolean in class com.amazonaws.services.importexport.model.UpdateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getSuccess() : Boolean renamed to public isSuccess() : Boolean in class com.amazonaws.services.importexport.model.UpdateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getWarningMessage() : String renamed to public setWarningMessage(warningMessage String) : void in class com.amazonaws.services.importexport.model.UpdateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setWarningMessage(warningMessage String) : void renamed to public getWarningMessage() : String in class com.amazonaws.services.importexport.model.UpdateJobResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void renamed to public describeMountTargets(describeMountTargetsRequest DescribeMountTargetsRequest) : DescribeMountTargetsResult in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeFileSystems() : DescribeFileSystemsResult renamed to public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setErrorCode(errorCode String) : void renamed to public setFileSystemId(fileSystemId String) : void in class com.amazonaws.services.elasticfilesystem.model.FileSystemAlreadyExistsException",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMarker() : String renamed to public setMarker(marker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setMarker(marker String) : void renamed to public getMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getNextMarker() : String renamed to public setNextMarker(nextMarker String) : void in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setNextMarker(nextMarker String) : void renamed to public getNextMarker() : String in class com.amazonaws.services.elasticfilesystem.model.DescribeTagsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : Future<CreateFileSystemResult> renamed to public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : java.util.concurrent.Future<CreateMountTargetResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : Future<Void> renamed to public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : java.util.concurrent.Future<CreateMountTargetResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler AsyncHandler<DeleteMountTargetRequest,Void>) : Future<Void> renamed to public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<CreateTagsRequest,Void>) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : Future<DescribeFileSystemsResult> renamed to public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createTagsAsync(createTagsRequest CreateTagsRequest) : Future<Void> renamed to public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler AsyncHandler<CreateTagsRequest,Void>) : Future<Void> renamed to public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteMountTargetRequest,Void>) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : Future<Void> renamed to public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler AsyncHandler<DeleteFileSystemRequest,Void>) : Future<Void> renamed to public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DeleteTagsRequest,Void>) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : Future<DescribeMountTargetsResult> renamed to public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : Future<DescribeMountTargetsResult> renamed to public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : Future<CreateMountTargetResult> renamed to public describeFileSystemsAsync() : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : Future<CreateMountTargetResult> renamed to public describeFileSystemsAsync(asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : java.util.concurrent.Future<DescribeFileSystemsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Future<Void> renamed to public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : java.util.concurrent.Future<DescribeMountTargetsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : Future<Void> renamed to public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : java.util.concurrent.Future<DescribeMountTargetsResult> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : Future<Void> renamed to public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler AsyncHandler<DeleteTagsRequest,Void>) : Future<Void> renamed to public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler com.amazonaws.handlers.AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : java.util.concurrent.Future<Void> in class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultAccessPolicyAsync(deleteVaultAccessPolicyRequest DeleteVaultAccessPolicyRequest) : Future<Void> renamed to public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest) : Future<Void> in class com.amazonaws.services.glacier.AmazonGlacierAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultAccessPolicyAsync(deleteVaultAccessPolicyRequest DeleteVaultAccessPolicyRequest, asyncHandler AsyncHandler<DeleteVaultAccessPolicyRequest,Void>) : Future<Void> renamed to public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest, asyncHandler AsyncHandler<DeleteVaultNotificationsRequest,Void>) : Future<Void> in class com.amazonaws.services.glacier.AmazonGlacierAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest) : Future<Void> renamed to public listTagsForVaultAsync(listTagsForVaultRequest ListTagsForVaultRequest, asyncHandler AsyncHandler<ListTagsForVaultRequest,ListTagsForVaultResult>) : Future<ListTagsForVaultResult> in class com.amazonaws.services.glacier.AmazonGlacierAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public deleteVaultNotificationsAsync(deleteVaultNotificationsRequest DeleteVaultNotificationsRequest, asyncHandler AsyncHandler<DeleteVaultNotificationsRequest,Void>) : Future<Void> renamed to public removeTagsFromVaultAsync(removeTagsFromVaultRequest RemoveTagsFromVaultRequest, asyncHandler AsyncHandler<RemoveTagsFromVaultRequest,Void>) : Future<Void> in class com.amazonaws.services.glacier.AmazonGlacierAsyncClient",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public isTruncated() : Boolean renamed to public setIsTruncated(isTruncated Boolean) : void in class com.amazonaws.services.importexport.model.ListJobsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setIsTruncated(isTruncated Boolean) : void renamed to public getIsTruncated() : Boolean in class com.amazonaws.services.importexport.model.ListJobsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getIsTruncated() : Boolean renamed to public isTruncated() : Boolean in class com.amazonaws.services.importexport.model.ListJobsResult",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler AsyncHandler<DeleteMountTargetRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createTagsAsync(createTagsRequest CreateTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler AsyncHandler<CreateTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler AsyncHandler<DeleteFileSystemRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler AsyncHandler<DeleteTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createFileSystem(createFileSystemRequest CreateFileSystemRequest) : CreateFileSystemResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteMountTarget(deleteMountTargetRequest DeleteMountTargetRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeFileSystems(describeFileSystemsRequest DescribeFileSystemsRequest) : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createTags(createTagsRequest CreateTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteFileSystem(deleteFileSystemRequest DeleteFileSystemRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeMountTargets(describeMountTargetsRequest DescribeMountTargetsRequest) : DescribeMountTargetsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createMountTarget(createMountTargetRequest CreateMountTargetRequest) : CreateMountTargetResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeMountTargetSecurityGroups(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : DescribeMountTargetSecurityGroupsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeTags(describeTagsRequest DescribeTagsRequest) : DescribeTagsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public deleteTags(deleteTagsRequest DeleteTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeFileSystems() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler AsyncHandler<CreateJobRequest,CreateJobResult>) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler AsyncHandler<CancelJobRequest,CancelJobResult>) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getStatusAsync(getStatusRequest GetStatusRequest) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler AsyncHandler<GetStatusRequest,GetStatusResult>) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public listJobsAsync(listJobsRequest ListJobsRequest) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler AsyncHandler<ListJobsRequest,ListJobsResult>) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public updateJobAsync(updateJobRequest UpdateJobRequest) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler AsyncHandler<UpdateJobRequest,UpdateJobResult>) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public createJob(createJobRequest CreateJobRequest) : CreateJobResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getShippingLabel(getShippingLabelRequest GetShippingLabelRequest) : GetShippingLabelResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public cancelJob(cancelJobRequest CancelJobRequest) : CancelJobResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getStatus(getStatusRequest GetStatusRequest) : GetStatusResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public listJobs(listJobsRequest ListJobsRequest) : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public updateJob(updateJobRequest UpdateJobRequest) : UpdateJobResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public listJobs() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.BucketPermissionExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.CanceledJobIdExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.CreateJobQuotaExceededExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.ExpiredJobIdExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidAccessKeyIdExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidAddressExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidCustomsExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidFileSystemExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidJobIdExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidManifestFieldExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidParameterExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.InvalidVersionExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.MalformedManifestExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.MissingCustomsExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.MissingManifestFieldExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.MissingParameterExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.MultipleRegionsExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.NoSuchBucketExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.UnableToCancelJobIdExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public unmarshall(node Node) : AmazonServiceException from class com.amazonaws.services.importexport.model.transform.UnableToUpdateJobIdExceptionUnmarshaller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter batchWriteRetryStrategy : BatchWriteRetryStrategy in method private writeOneBatch(batch Map<String,List<WriteRequest>>, batchWriteRetryStrategy BatchWriteRetryStrategy) : List<FailedBatch> from class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter batchWriteRetryStrategy : BatchWriteRetryStrategy in method private doBatchWriteItemWithRetry(batch Map<String,List<WriteRequest>>, batchWriteRetryStrategy BatchWriteRetryStrategy) : FailedBatch from class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter batchWriteRetryStrategy : BatchWriteRetryStrategy in method private DynamoDBMapperConfig(saveBehavior SaveBehavior, consistentReads ConsistentReads, tableNameOverride TableNameOverride, tableNameResolver TableNameResolver, objectTableNameResolver ObjectTableNameResolver, paginationLoadingStrategy PaginationLoadingStrategy, requestMetricCollector RequestMetricCollector, conversionSchema ConversionSchema, batchWriteRetryStrategy BatchWriteRetryStrategy) from class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public describeFileSystemsAsync() : java.util.concurrent.Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : CreateFileSystemResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createFileSystemAsync.submit.new java.util.concurrent.Callable<CreateFileSystemResult>",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : CreateMountTargetResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createMountTargetAsync.submit.new java.util.concurrent.Callable<CreateMountTargetResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createTagsAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteFileSystemAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteMountTargetAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteTagsAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeFileSystemsAsync.submit.new java.util.concurrent.Callable<DescribeFileSystemsResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : DescribeMountTargetSecurityGroupsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeMountTargetSecurityGroupsAsync.submit.new java.util.concurrent.Callable<DescribeMountTargetSecurityGroupsResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : DescribeMountTargetsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeMountTargetsAsync.submit.new java.util.concurrent.Callable<DescribeMountTargetsResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : DescribeTagsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeTagsAsync.submit.new java.util.concurrent.Callable<DescribeTagsResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.modifyMountTargetSecurityGroupsAsync.submit.new java.util.concurrent.Callable<Void>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : CancelJobResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.cancelJobAsync.submit.new java.util.concurrent.Callable<CancelJobResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : CreateJobResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.createJobAsync.submit.new java.util.concurrent.Callable<CreateJobResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : GetShippingLabelResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.getShippingLabelAsync.submit.new java.util.concurrent.Callable<GetShippingLabelResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : GetStatusResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.getStatusAsync.submit.new java.util.concurrent.Callable<GetStatusResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.listJobsAsync.submit.new java.util.concurrent.Callable<ListJobsResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public call() : UpdateJobResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.updateJobAsync.submit.new java.util.concurrent.Callable<UpdateJobResult>",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type IllegalArgumentException in method public setEndpoint(endpoint String) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type IllegalArgumentException in method public setRegion(region Region) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createFileSystem(createFileSystemRequest CreateFileSystemRequest) : CreateFileSystemResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createFileSystem(createFileSystemRequest CreateFileSystemRequest) : CreateFileSystemResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteMountTarget(deleteMountTargetRequest DeleteMountTargetRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteMountTarget(deleteMountTargetRequest DeleteMountTargetRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystems(describeFileSystemsRequest DescribeFileSystemsRequest) : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystems(describeFileSystemsRequest DescribeFileSystemsRequest) : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createTags(createTagsRequest CreateTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createTags(createTagsRequest CreateTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteFileSystem(deleteFileSystemRequest DeleteFileSystemRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteFileSystem(deleteFileSystemRequest DeleteFileSystemRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargets(describeMountTargetsRequest DescribeMountTargetsRequest) : DescribeMountTargetsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargets(describeMountTargetsRequest DescribeMountTargetsRequest) : DescribeMountTargetsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createMountTarget(createMountTargetRequest CreateMountTargetRequest) : CreateMountTargetResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createMountTarget(createMountTargetRequest CreateMountTargetRequest) : CreateMountTargetResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetSecurityGroups(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : DescribeMountTargetSecurityGroupsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetSecurityGroups(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : DescribeMountTargetSecurityGroupsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeTags(describeTagsRequest DescribeTagsRequest) : DescribeTagsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeTags(describeTagsRequest DescribeTagsRequest) : DescribeTagsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteTags(deleteTagsRequest DeleteTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteTags(deleteTagsRequest DeleteTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystems() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystems() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler AsyncHandler<DeleteMountTargetRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler AsyncHandler<DeleteMountTargetRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createTagsAsync(createTagsRequest CreateTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createTagsAsync(createTagsRequest CreateTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler AsyncHandler<CreateTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler AsyncHandler<CreateTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler AsyncHandler<DeleteFileSystemRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler AsyncHandler<DeleteFileSystemRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler AsyncHandler<DeleteTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler AsyncHandler<DeleteTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createFileSystemAsync(createFileSystemRequest CreateFileSystemRequest, asyncHandler AsyncHandler<CreateFileSystemRequest,CreateFileSystemResult>) : Future<CreateFileSystemResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler AsyncHandler<DeleteMountTargetRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteMountTargetAsync(deleteMountTargetRequest DeleteMountTargetRequest, asyncHandler AsyncHandler<DeleteMountTargetRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystemsAsync(describeFileSystemsRequest DescribeFileSystemsRequest, asyncHandler AsyncHandler<DescribeFileSystemsRequest,DescribeFileSystemsResult>) : Future<DescribeFileSystemsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createTagsAsync(createTagsRequest CreateTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createTagsAsync(createTagsRequest CreateTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler AsyncHandler<CreateTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createTagsAsync(createTagsRequest CreateTagsRequest, asyncHandler AsyncHandler<CreateTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler AsyncHandler<DeleteFileSystemRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteFileSystemAsync(deleteFileSystemRequest DeleteFileSystemRequest, asyncHandler AsyncHandler<DeleteFileSystemRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetsAsync(describeMountTargetsRequest DescribeMountTargetsRequest, asyncHandler AsyncHandler<DescribeMountTargetsRequest,DescribeMountTargetsResult>) : Future<DescribeMountTargetsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createMountTargetAsync(createMountTargetRequest CreateMountTargetRequest, asyncHandler AsyncHandler<CreateMountTargetRequest,CreateMountTargetResult>) : Future<CreateMountTargetResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeMountTargetSecurityGroupsAsync(describeMountTargetSecurityGroupsRequest DescribeMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<DescribeMountTargetSecurityGroupsRequest,DescribeMountTargetSecurityGroupsResult>) : Future<DescribeMountTargetSecurityGroupsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public modifyMountTargetSecurityGroupsAsync(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest, asyncHandler AsyncHandler<ModifyMountTargetSecurityGroupsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeTagsAsync(describeTagsRequest DescribeTagsRequest, asyncHandler AsyncHandler<DescribeTagsRequest,DescribeTagsResult>) : Future<DescribeTagsResult> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler AsyncHandler<DeleteTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public deleteTagsAsync(deleteTagsRequest DeleteTagsRequest, asyncHandler AsyncHandler<DeleteTagsRequest,Void>) : Future<Void> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : CreateFileSystemResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createFileSystemAsync.submit.new Callable<CreateFileSystemResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteMountTargetAsync.submit.new Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeFileSystemsAsync.submit.new Callable<DescribeFileSystemsResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createTagsAsync.submit.new Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteFileSystemAsync.submit.new Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : DescribeMountTargetsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeMountTargetsAsync.submit.new Callable<DescribeMountTargetsResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : CreateMountTargetResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.createMountTargetAsync.submit.new Callable<CreateMountTargetResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : DescribeMountTargetSecurityGroupsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeMountTargetSecurityGroupsAsync.submit.new Callable<DescribeMountTargetSecurityGroupsResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.modifyMountTargetSecurityGroupsAsync.submit.new Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : DescribeTagsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeTagsAsync.submit.new Callable<DescribeTagsResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : Void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.deleteTagsAsync.submit.new Callable<Void>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public describeFileSystems() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public describeFileSystems() : DescribeFileSystemsResult from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type IllegalArgumentException in method public setEndpoint(endpoint String) : void from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type IllegalArgumentException in method public setRegion(region Region) : void from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createJob(createJobRequest CreateJobRequest) : CreateJobResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createJob(createJobRequest CreateJobRequest) : CreateJobResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getShippingLabel(getShippingLabelRequest GetShippingLabelRequest) : GetShippingLabelResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getShippingLabel(getShippingLabelRequest GetShippingLabelRequest) : GetShippingLabelResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public cancelJob(cancelJobRequest CancelJobRequest) : CancelJobResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public cancelJob(cancelJobRequest CancelJobRequest) : CancelJobResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getStatus(getStatusRequest GetStatusRequest) : GetStatusResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getStatus(getStatusRequest GetStatusRequest) : GetStatusResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobs(listJobsRequest ListJobsRequest) : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobs(listJobsRequest ListJobsRequest) : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public updateJob(updateJobRequest UpdateJobRequest) : UpdateJobResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public updateJob(updateJobRequest UpdateJobRequest) : UpdateJobResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobs() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobs() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExport",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler AsyncHandler<CreateJobRequest,CreateJobResult>) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler AsyncHandler<CreateJobRequest,CreateJobResult>) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler AsyncHandler<CancelJobRequest,CancelJobResult>) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler AsyncHandler<CancelJobRequest,CancelJobResult>) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getStatusAsync(getStatusRequest GetStatusRequest) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getStatusAsync(getStatusRequest GetStatusRequest) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler AsyncHandler<GetStatusRequest,GetStatusResult>) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler AsyncHandler<GetStatusRequest,GetStatusResult>) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobsAsync(listJobsRequest ListJobsRequest) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobsAsync(listJobsRequest ListJobsRequest) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler AsyncHandler<ListJobsRequest,ListJobsResult>) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler AsyncHandler<ListJobsRequest,ListJobsResult>) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public updateJobAsync(updateJobRequest UpdateJobRequest) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public updateJobAsync(updateJobRequest UpdateJobRequest) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler AsyncHandler<UpdateJobRequest,UpdateJobResult>) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler AsyncHandler<UpdateJobRequest,UpdateJobResult>) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsync",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createJobAsync(createJobRequest CreateJobRequest) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler AsyncHandler<CreateJobRequest,CreateJobResult>) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public createJobAsync(createJobRequest CreateJobRequest, asyncHandler AsyncHandler<CreateJobRequest,CreateJobResult>) : Future<CreateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getShippingLabelAsync(getShippingLabelRequest GetShippingLabelRequest, asyncHandler AsyncHandler<GetShippingLabelRequest,GetShippingLabelResult>) : Future<GetShippingLabelResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public cancelJobAsync(cancelJobRequest CancelJobRequest) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler AsyncHandler<CancelJobRequest,CancelJobResult>) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public cancelJobAsync(cancelJobRequest CancelJobRequest, asyncHandler AsyncHandler<CancelJobRequest,CancelJobResult>) : Future<CancelJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getStatusAsync(getStatusRequest GetStatusRequest) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getStatusAsync(getStatusRequest GetStatusRequest) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler AsyncHandler<GetStatusRequest,GetStatusResult>) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public getStatusAsync(getStatusRequest GetStatusRequest, asyncHandler AsyncHandler<GetStatusRequest,GetStatusResult>) : Future<GetStatusResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobsAsync(listJobsRequest ListJobsRequest) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobsAsync(listJobsRequest ListJobsRequest) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler AsyncHandler<ListJobsRequest,ListJobsResult>) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobsAsync(listJobsRequest ListJobsRequest, asyncHandler AsyncHandler<ListJobsRequest,ListJobsResult>) : Future<ListJobsResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public updateJobAsync(updateJobRequest UpdateJobRequest) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public updateJobAsync(updateJobRequest UpdateJobRequest) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler AsyncHandler<UpdateJobRequest,UpdateJobResult>) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public updateJobAsync(updateJobRequest UpdateJobRequest, asyncHandler AsyncHandler<UpdateJobRequest,UpdateJobResult>) : Future<UpdateJobResult> from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : CreateJobResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.createJobAsync.submit.new Callable<CreateJobResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : GetShippingLabelResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.getShippingLabelAsync.submit.new Callable<GetShippingLabelResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : CancelJobResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.cancelJobAsync.submit.new Callable<CancelJobResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : GetStatusResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.getStatusAsync.submit.new Callable<GetStatusResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.listJobsAsync.submit.new Callable<ListJobsResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public call() : UpdateJobResult from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient.updateJobAsync.submit.new Callable<UpdateJobResult>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonServiceException in method public listJobs() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type AmazonClientException in method public listJobs() : ListJobsResult from class com.amazonaws.services.importexport.AmazonImportExportClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public stop() : void from class com.amazonaws.util.EC2MetadataUtilsServer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private handleConnection(input BufferedReader, output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private ignoreRequest(input BufferedReader) : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private outputIamInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private outputIamCredList(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private outputIamCred(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private outputInstanceInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private runServer() : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private killServer() : void from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private executorService : ExecutorService from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private executorService : ExecutorService from class com.amazonaws.services.importexport.AmazonImportExportAsyncClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable responseHandler : JsonResponseHandler<Void> in method public deleteMountTarget(deleteMountTargetRequest DeleteMountTargetRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable responseHandler : JsonResponseHandler<Void> in method public createTags(createTagsRequest CreateTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable responseHandler : JsonResponseHandler<Void> in method public deleteFileSystem(deleteFileSystemRequest DeleteFileSystemRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable responseHandler : JsonResponseHandler<Void> in method public modifyMountTargetSecurityGroups(modifyMountTargetSecurityGroupsRequest ModifyMountTargetSecurityGroupsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable responseHandler : JsonResponseHandler<Void> in method public deleteTags(deleteTagsRequest DeleteTagsRequest) : void from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type responseHandler : HttpResponseHandler<AmazonWebServiceResponse<X>> to responseHandler : JsonResponseHandler<X> in method private invoke(request Request<Y>, unmarshaller Unmarshaller<X,JsonUnmarshallerContext>, executionContext ExecutionContext) : Response<X> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter responseHandler : HttpResponseHandler<AmazonWebServiceResponse<X>> to responseHandler : JsonResponseHandler<X> in method private invoke(request Request<Y>, unmarshaller Unmarshaller<X,JsonUnmarshallerContext>, executionContext ExecutionContext) : Response<X> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter unmarshaller : Unmarshaller<X,JsonUnmarshallerContext> in method private invoke(request Request<Y>, unmarshaller Unmarshaller<X,JsonUnmarshallerContext>, executionContext ExecutionContext) : Response<X> from class com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier static in attribute private server : ServerSocket from class com.amazonaws.util.EC2MetadataUtilsTest",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1125095,
  "repository" : "https://github.com/apache/drill.git",
  "sha1" : "c1b847acdc8cb90a1498b236b3bb5c81ca75c044",
  "url" : "https://github.com/apache/drill/commit/c1b847acdc8cb90a1498b236b3bb5c81ca75c044",
  "author" : "vkorukanti",
  "time" : "6/25/15 11:53 AM",
  "refactorings" : [ {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private org2Groups : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected org2Groups : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableLoaderLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableLoaderLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createTestData() : void extracted from public addMiniDfsBasedStorageAndGenerateTestData() : void in class org.apache.drill.exec.impersonation.TestImpersonationQueries",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private org1Groups : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected org1Groups : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableNameLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableNameLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private org1Users : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected org1Users : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.DatabaseLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.DatabaseLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private org2Users : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected org2Users : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS to protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.TestImpersonationMetadata to protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public createFileSystem(proxyUserName String, fsConf Configuration, stats OperatorStats) : DrillFileSystem inlined to public createFileSystem(proxyUserName String, fsConf Configuration) : DrillFileSystem in class org.apache.drill.exec.util.ImpersonationUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationMetadata to protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS to protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public addMiniDfsBasedStorageAndGenerateTestData() : void from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private executeQuery(hiveDriver Driver, query String) : void from class org.apache.drill.exec.store.hive.HiveTestDataGenerator to public executeQuery(hiveDriver Driver, query String) : void from class org.apache.drill.exec.hive.HiveTestUtilities",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getTempDir(dirName String) : String extracted from public getInstance() : HiveTestDataGenerator in class org.apache.drill.exec.store.hive.HiveTestDataGenerator & moved to class org.apache.drill.BaseTestQuery",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move to BaseTestQuery</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public getTempDir(dirName String) : String extracted from private generateTestData() : void in class org.apache.drill.exec.store.hive.HiveTestDataGenerator & moved to class org.apache.drill.BaseTestQuery",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move to BaseTestQuery</p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public createNonCloseableClientWithCaching(hiveConf HiveConf, hiveConfigOverride Map<String,String>) : DrillHiveMetaStoreClient extracted from public HiveSchemaFactory(plugin HiveStoragePlugin, name String, hiveConfigOverride Map<String,String>) in class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory & moved to class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private tableLoaders : LoadingCache<String,LoadingCache<String,HiveReadEntry>> from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory to private tableLoaders : LoadingCache<String,LoadingCache<String,HiveReadEntry>> from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private tableNameLoader : LoadingCache<String,List<String>> from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory to private tableNameLoader : LoadingCache<String,List<String>> from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private databases : LoadingCache<String,List<String>> from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory to private databases : LoadingCache<String,List<String>> from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable value : String in method public HiveSchemaFactory(plugin HiveStoragePlugin, name String, hiveConfigOverride Map<String,String>) from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable property : String in method public HiveSchemaFactory(plugin HiveStoragePlugin, name String, hiveConfigOverride Map<String,String>) from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute conf : Configuration to dfsConf : Configuration in class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute tableNameLoader : LoadingCache<String,List<String>> to isHS2DoAsSet : boolean in class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter fs : FileSystem to workspaces : Map<String,WorkspaceConfig> in method protected createAndAddWorkspace(name String, path String, permissions short, owner String, group String, workspaces Map<String,WorkspaceConfig>) : void in class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to Map<String,WorkspaceConfig> in method private createTestWorkspaces() : Map<String,WorkspaceConfig> from class org.apache.drill.exec.impersonation.TestImpersonationMetadata",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to Map<String,WorkspaceConfig> in method private createTestWorkspaces() : Map<String,WorkspaceConfig> from class org.apache.drill.exec.impersonation.TestImpersonationQueries",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getSplitsWithUGI() : void extracted from public HiveScan(userName String, hiveReadEntry HiveReadEntry, storagePluginName String, columns List<SchemaPath>, pluginRegistry StoragePluginRegistry) in class org.apache.drill.exec.store.hive.HiveScan",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getSplitsWithUGI() : void extracted from public HiveScan(userName String, hiveReadEntry HiveReadEntry, storagePlugin HiveStoragePlugin, columns List<SchemaPath>) in class org.apache.drill.exec.store.hive.HiveScan",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type name : String to schemaConfig : SchemaConfig in method public HiveSchema(schemaConfig SchemaConfig, mClient DrillHiveMetaStoreClient, name String) in class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : "<p>parameter names still exists in the constructor</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type DATABASES : String to globalMetastoreClient : DrillHiveMetaStoreClient in class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private getSchemaFile(resource String) : String from class org.apache.drill.exec.store.hive.HiveTestDataGenerator to public getPhysicalFileFromResource(resource String) : String from class org.apache.drill.BaseTestQuery",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Severe Changes",
      "mappingState" : 5,
      "validationComment" : "non-mapped leave is not reported -file.deleteOnExit();-"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public load(key String) : HiveReadEntry from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableLoader to protected getHiveReadEntryHelper(mClient IMetaStoreClient, dbName String, tableName String, hiveConfigOverride Map<String,String>) : HiveReadEntry from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public addMiniDfsBasedStorageAndGenerateTestData() : void renamed to private createTestData() : void in class org.apache.drill.exec.impersonation.TestImpersonationQueries",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS to protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public addMiniDfsBasedStorage() : void renamed to public setup() : void in class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS",
    "comment" : "<p>Pull Up Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS to protected addMiniDfsBasedStorage(workspaces Map&lt;String,WorkspaceConfig&gt;) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public addMiniDfsBasedStorage() : void renamed to public setup() : void in class org.apache.drill.exec.impersonation.TestImpersonationMetadata",
    "comment" : "<p>Pull Up Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationMetadata to protected addMiniDfsBasedStorage(workspaces Map&lt;String,WorkspaceConfig&gt;) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation</p><p>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package getTableNames(dbName String) : List<String> renamed to package getDrillTable(dbName String, t String) : DrillTable in class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @BeforeClass in method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @BeforeClass in method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationMetadata",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @BeforeClass in method public addMiniDfsBasedStorageAndGenerateTestData() : void from class org.apache.drill.exec.impersonation.TestImpersonationQueries",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter userName : String in method public DrillHiveTable(storageEngineName String, plugin HiveStoragePlugin, userName String, readEntry HiveReadEntry) from class org.apache.drill.exec.store.hive.schema.DrillHiveTable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter userName : String in method public DrillHiveViewTable(storageEngineName String, plugin HiveStoragePlugin, userName String, readEntry HiveReadEntry) from class org.apache.drill.exec.store.hive.schema.DrillHiveViewTable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter schemaConfig : SchemaConfig in method public HiveSchema(schemaConfig SchemaConfig, mClient DrillHiveMetaStoreClient, name String) from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter mClient : DrillHiveMetaStoreClient in method public HiveSchema(schemaConfig SchemaConfig, mClient DrillHiveMetaStoreClient, name String) from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter fs : FileSystem in method protected createAndAddWorkspace(fs FileSystem, name String, path String, permissions short, owner String, group String, workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public load(key String) : LoadingCache<String,HiveReadEntry> from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableLoaderLoader",
    "comment" : "<p>deleted method from deleted class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type Exception to IOException in method public getPhysicalFileFromResource(resource String) : String from class org.apache.drill.BaseTestQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public getPhysicalFileFromResource(resource String) : String from class org.apache.drill.BaseTestQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public executeQuery(hiveDriver Driver, query String) : void from class org.apache.drill.exec.hive.HiveTestUtilities",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected org1Users : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected org1Groups : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected org2Users : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected org2Groups : String[] from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method public getPhysicalFileFromResource(resource String) : String from class org.apache.drill.BaseTestQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method public executeQuery(hiveDriver Driver, query String) : void from class org.apache.drill.exec.hive.HiveTestUtilities",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private plugin : HiveStoragePlugin from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : ExecutionException to e : TException in method package getSelectionBaseOnName(dbName String, t String) : HiveReadEntry from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : ExecutionException to e : TException in method public getSubSchemaNames() : Set<String> from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : ExecutionException to e : TException in method public getSubSchema(name String) : AbstractSchema from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter name : String in method public HiveSchema(schemaConfig SchemaConfig, mClient DrillHiveMetaStoreClient, name String) from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : TException in method public getSubSchema(name String) : AbstractSchema from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : TException in method public getSubSchemaNames() : Set<String> from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable e : TException in method package getSelectionBaseOnName(dbName String, t String) : HiveReadEntry from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.HiveSchema",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter userName : String in method public getRootSchema(userName String) : SchemaPlus from class org.apache.drill.exec.ops.QueryContext",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter workspaces : Map<String,WorkspaceConfig> in method protected createAndAddWorkspace(name String, path String, permissions short, owner String, group String, workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter dbName : String in method public TableLoader(dbName String) from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableLoader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter workspaces : Map<String,WorkspaceConfig> to workspaces : Map<String,WorkspaceConfig> in method private createTestWorkspaces() : Map<String,WorkspaceConfig> from class org.apache.drill.exec.impersonation.TestImpersonationQueries",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter workspaces : Map<String,WorkspaceConfig> to workspaces : Map<String,WorkspaceConfig> in method private createTestWorkspaces() : Map<String,WorkspaceConfig> from class org.apache.drill.exec.impersonation.TestImpersonationMetadata",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable workspaces : Map<String,WorkspaceConfig> to workspaces : Map<String,WorkspaceConfig> in method protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter workspaces : Map<String,WorkspaceConfig> in method protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private databases : LoadingCache<String,List<String>> from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private tableNameLoader : LoadingCache<String,List<String>> from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private tableLoaders : LoadingCache<String,LoadingCache<String,HiveReadEntry>> from class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2022
}, {
  "id" : 1126576,
  "repository" : "https://github.com/apache/zookeeper.git",
  "sha1" : "3fd77b419673ce6ec41e06cdc27558b1d8f4ca06",
  "url" : "https://github.com/apache/zookeeper/commit/3fd77b419673ce6ec41e06cdc27558b1d8f4ca06",
  "author" : "Raúl Gutiérrez Segalés",
  "time" : "6/28/15 4:09 PM",
  "refactorings" : [ {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.NIOServerCnxn to public cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.ServerCnxn",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.NettyServerCnxn to public cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.ServerCnxn",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.apache.zookeeper.server.command.FourLetterCommands from class org.apache.zookeeper.server.ServerCnxn",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected consCmd : int from class org.apache.zookeeper.server.ServerCnxn to public consCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected wchcCmd : int from class org.apache.zookeeper.server.ServerCnxn to public wchcCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected dumpCmd : int from class org.apache.zookeeper.server.ServerCnxn to public dumpCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected getTraceMaskCmd : int from class org.apache.zookeeper.server.ServerCnxn to public getTraceMaskCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected setTraceMaskCmd : int from class org.apache.zookeeper.server.ServerCnxn to public setTraceMaskCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected wchsCmd : int from class org.apache.zookeeper.server.ServerCnxn to public wchsCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected cmd2String : HashMap<Integer,String> from class org.apache.zookeeper.server.ServerCnxn to public cmd2String : HashMap<Integer,String> from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected srstCmd : int from class org.apache.zookeeper.server.ServerCnxn to public srstCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected enviCmd : int from class org.apache.zookeeper.server.ServerCnxn to public enviCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected ruokCmd : int from class org.apache.zookeeper.server.ServerCnxn to public ruokCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected wchpCmd : int from class org.apache.zookeeper.server.ServerCnxn to public wchpCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected srvrCmd : int from class org.apache.zookeeper.server.ServerCnxn to public srvrCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected confCmd : int from class org.apache.zookeeper.server.ServerCnxn to public confCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected statCmd : int from class org.apache.zookeeper.server.ServerCnxn to public statCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected mntrCmd : int from class org.apache.zookeeper.server.ServerCnxn to public mntrCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected isroCmd : int from class org.apache.zookeeper.server.ServerCnxn to public isroCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected crstCmd : int from class org.apache.zookeeper.server.ServerCnxn to public crstCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute protected telnetCloseCmd : int from class org.apache.zookeeper.server.ServerCnxn to public telnetCloseCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private ZK_NOT_SERVING : String from class org.apache.zookeeper.server.NIOServerCnxn to protected ZK_NOT_SERVING : String from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private ZK_NOT_SERVING : String from class org.apache.zookeeper.server.NettyServerCnxn to protected ZK_NOT_SERVING : String from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.ConsCommand moved to org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.StatResetCommand moved to org.apache.zookeeper.server.command.StatResetCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.RuokCommand moved to org.apache.zookeeper.server.command.RuokCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.TraceMaskCommand moved to org.apache.zookeeper.server.command.TraceMaskCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.ConfCommand moved to org.apache.zookeeper.server.command.ConfCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.DumpCommand moved to org.apache.zookeeper.server.command.DumpCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.IsroCommand moved to org.apache.zookeeper.server.command.IsroCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.CnxnStatResetCommand moved to org.apache.zookeeper.server.command.CnxnStatResetCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.EnvCommand moved to org.apache.zookeeper.server.command.EnvCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.MonitorCommand moved to org.apache.zookeeper.server.command.MonitorCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cons : ConsCommand to commandExecutor : CommandExecutor in method private checkFourLetterWord(k SelectionKey, len int) : boolean in class org.apache.zookeeper.server.NIOServerCnxn",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type cons : ConsCommand to commandExecutor : CommandExecutor in method private checkFourLetterWord(channel Channel, message ChannelBuffer, len int) : boolean in class org.apache.zookeeper.server.NettyServerCnxn",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.CnxnStatResetCommand to public commandRun() : void from class org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.StatResetCommand to public commandRun() : void from class org.apache.zookeeper.server.command.StatResetCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.EnvCommand to public commandRun() : void from class org.apache.zookeeper.server.command.EnvCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.TraceMaskCommand to public commandRun() : void from class org.apache.zookeeper.server.command.TraceMaskCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.StatCommand to public commandRun() : void from class org.apache.zookeeper.server.command.StatCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.ConfCommand to public commandRun() : void from class org.apache.zookeeper.server.command.ConfCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.WatchCommand to public commandRun() : void from class org.apache.zookeeper.server.command.WatchCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.ConsCommand to public commandRun() : void from class org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.IsroCommand to public commandRun() : void from class org.apache.zookeeper.server.command.IsroCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.CnxnStatResetCommand to public commandRun() : void from class org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.RuokCommand to public commandRun() : void from class org.apache.zookeeper.server.command.RuokCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public run() : void from class org.apache.zookeeper.server.NIOServerCnxn.CommandThread to public run() : void from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.DumpCommand to public commandRun() : void from class org.apache.zookeeper.server.command.DumpCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.SetTraceMaskCommand to public commandRun() : void from class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public start() : void from class org.apache.zookeeper.server.NIOServerCnxn.CommandThread to public start() : void from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.IsroCommand to public commandRun() : void from class org.apache.zookeeper.server.command.IsroCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.ConfCommand to public commandRun() : void from class org.apache.zookeeper.server.command.ConfCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.EnvCommand to public commandRun() : void from class org.apache.zookeeper.server.command.EnvCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.ConsCommand to public commandRun() : void from class org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public start() : void from class org.apache.zookeeper.server.NettyServerCnxn.CommandThread to public start() : void from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.StatCommand to public commandRun() : void from class org.apache.zookeeper.server.command.StatCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.WatchCommand to public commandRun() : void from class org.apache.zookeeper.server.command.WatchCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public run() : void from class org.apache.zookeeper.server.NettyServerCnxn.CommandThread to public run() : void from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.SetTraceMaskCommand to public commandRun() : void from class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.TraceMaskCommand to public commandRun() : void from class org.apache.zookeeper.server.command.TraceMaskCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.RuokCommand to public commandRun() : void from class org.apache.zookeeper.server.command.RuokCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.DumpCommand to public commandRun() : void from class org.apache.zookeeper.server.command.DumpCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.StatResetCommand to public commandRun() : void from class org.apache.zookeeper.server.command.StatResetCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package len : int from class org.apache.zookeeper.server.NIOServerCnxn.StatCommand to private len : int from class org.apache.zookeeper.server.command.StatCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package trace : long from class org.apache.zookeeper.server.NIOServerCnxn.SetTraceMaskCommand to package trace : long from class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package pw : PrintWriter from class org.apache.zookeeper.server.NIOServerCnxn.CommandThread to protected pw : PrintWriter from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package len : int from class org.apache.zookeeper.server.NIOServerCnxn.WatchCommand to package len : int from class org.apache.zookeeper.server.command.WatchCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package pw : PrintWriter from class org.apache.zookeeper.server.NettyServerCnxn.CommandThread to protected pw : PrintWriter from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package len : int from class org.apache.zookeeper.server.NettyServerCnxn.StatCommand to private len : int from class org.apache.zookeeper.server.command.StatCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package len : int from class org.apache.zookeeper.server.NettyServerCnxn.WatchCommand to package len : int from class org.apache.zookeeper.server.command.WatchCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package trace : long from class org.apache.zookeeper.server.NettyServerCnxn.SetTraceMaskCommand to package trace : long from class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public execute(serverCnxn ServerCnxn, pwriter PrintWriter, commandCode int, zkServer ZooKeeperServer, factory ServerCnxnFactory) : boolean extracted from private checkFourLetterWord(k SelectionKey, len int) : boolean in class org.apache.zookeeper.server.NIOServerCnxn & moved to class org.apache.zookeeper.server.command.CommandExecutor",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public execute(serverCnxn ServerCnxn, pwriter PrintWriter, commandCode int, zkServer ZooKeeperServer, factory ServerCnxnFactory) : boolean extracted from private checkFourLetterWord(channel Channel, message ChannelBuffer, len int) : boolean in class org.apache.zookeeper.server.NettyServerCnxn & moved to class org.apache.zookeeper.server.command.CommandExecutor",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.StatCommand moved to org.apache.zookeeper.server.command.StatCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.SetTraceMaskCommand moved to org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.apache.zookeeper.server.NIOServerCnxn.WatchCommand moved to org.apache.zookeeper.server.command.WatchCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.zookeeper.server.NettyServerCnxn.CommandThread moved and renamed to org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.StatCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.ConsCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public RuokCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.RuokCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method package TraceMaskCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.TraceMaskCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public SetTraceMaskCommand(pw PrintWriter, serverCnxn ServerCnxn, trace long) from class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method package EnvCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.EnvCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method package ConfCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.ConfCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public StatResetCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.StatResetCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public CnxnStatResetCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.CnxnStatResetCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public DumpCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.DumpCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public StatCommand(pw PrintWriter, serverCnxn ServerCnxn, len int) from class org.apache.zookeeper.server.command.StatCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public ConsCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public WatchCommand(pw PrintWriter, serverCnxn ServerCnxn, len int) from class org.apache.zookeeper.server.command.WatchCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method package MonitorCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.MonitorCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public IsroCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.IsroCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serverCnxn : ServerCnxn in method public AbstractFourLetterCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to public in method public dumpConnectionInfo(pwriter PrintWriter, brief boolean) : void from class org.apache.zookeeper.server.ServerCnxn",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public SetTraceMaskCommand(pw PrintWriter, serverCnxn ServerCnxn, trace long) from class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public AbstractFourLetterCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.ServerCnxn",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier package to private in attribute private len : int from class org.apache.zookeeper.server.command.StatCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier package to protected in attribute protected pw : PrintWriter from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.RuokCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.TraceMaskCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.SetTraceMaskCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.EnvCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.ConfCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.StatResetCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.CnxnStatResetCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.DumpCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.StatCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.ConsCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.WatchCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.MonitorCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to public in class org.apache.zookeeper.server.command.IsroCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public confCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public consCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public crstCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public dumpCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public enviCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public getTraceMaskCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public ruokCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public setTraceMaskCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public srvrCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public srstCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public statCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public wchcCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public wchpCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public wchsCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public mntrCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public isroCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public telnetCloseCmd : int from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier protected to public in attribute public cmd2String : HashMap<Integer,String> from class org.apache.zookeeper.server.command.FourLetterCommands",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Class",
    "description" : "Merge Class [org.apache.zookeeper.server.NIOServerCnxn.CommandThread, org.apache.zookeeper.server.NettyServerCnxn.CommandThread] merged to org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public abstract commandRun() : void from class org.apache.zookeeper.server.NettyServerCnxn.CommandThread to public abstract commandRun() : void from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public abstract commandRun() : void from class org.apache.zookeeper.server.NIOServerCnxn.CommandThread to public abstract commandRun() : void from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method package CommandThread(pw PrintWriter) from class org.apache.zookeeper.server.NIOServerCnxn.CommandThread to public AbstractFourLetterCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "",
      "mappingState" : 5,
      "validationComment" : "non-mapped leave is not justifiable. It a totally different constructor"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method package CommandThread(pw PrintWriter) from class org.apache.zookeeper.server.NettyServerCnxn.CommandThread to public AbstractFourLetterCommand(pw PrintWriter, serverCnxn ServerCnxn) from class org.apache.zookeeper.server.command.AbstractFourLetterCommand",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "",
      "mappingState" : 5,
      "validationComment" : "non-mapped leave is not justifiable. It a totally different constructor"
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1127383,
  "repository" : "https://github.com/spring-projects/spring-boot.git",
  "sha1" : "1e464da2480568014a87dd0bac6febe63a76c889",
  "url" : "https://github.com/spring-projects/spring-boot/commit/1e464da2480568014a87dd0bac6febe63a76c889",
  "author" : "Dave Syer",
  "time" : "6/30/15 5:42 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private CLASSPATH_RESOURCE_LOCATIONS : String[] from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration to private CLASSPATH_RESOURCE_LOCATIONS : String[] from class org.springframework.boot.autoconfigure.web.ResourceProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setResourceLoader(resourceLoader ResourceLoader) : void from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter.FaviconConfiguration to public setResourceLoader(resourceLoader ResourceLoader) : void from class org.springframework.boot.autoconfigure.web.ResourceProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private RESOURCE_LOCATIONS : String[] from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration to private RESOURCE_LOCATIONS : String[] from class org.springframework.boot.autoconfigure.web.ResourceProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private addStaticIndexHtmlViewControllers(registry ViewControllerRegistry) : void inlined to public addViewControllers(registry ViewControllerRegistry) : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "try-catch and if statements hasn't been inlined. Also, the second parameter of the info method has been changed"
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private STATIC_INDEX_HTML_RESOURCES : String[] from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration to private STATIC_INDEX_HTML_RESOURCES : String[] from class org.springframework.boot.autoconfigure.web.ResourceProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private resourceLoader : ResourceLoader from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter.FaviconConfiguration to private resourceLoader : ResourceLoader from class org.springframework.boot.autoconfigure.web.ResourceProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private SERVLET_RESOURCE_LOCATIONS : String[] from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration to private SERVLET_RESOURCE_LOCATIONS : String[] from class org.springframework.boot.autoconfigure.web.ResourceProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private getCorsConfiguration(properties EndpointCorsProperties) : CorsConfiguration from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to private getCorsConfiguration(properties EndpointCorsProperties) : CorsConfiguration from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public healthMvcEndpoint(delegate HealthEndpoint) : HealthMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public healthMvcEndpoint(delegate HealthEndpoint) : HealthMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public logfileMvcEndpoint() : LogFileMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public logfileMvcEndpoint() : LogFileMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public mvcEndpoints() : MvcEndpoints from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public mvcEndpoints() : MvcEndpoints from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public shutdownMvcEndpoint(delegate ShutdownEndpoint) : ShutdownMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public shutdownMvcEndpoint(delegate ShutdownEndpoint) : ShutdownMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public endpointHandlerMapping() : EndpointHandlerMapping from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public endpointHandlerMapping() : EndpointHandlerMapping from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getRequestMatcher() : RequestMatcher extracted from protected configure(http HttpSecurity) : void in class org.springframework.boot.actuate.autoconfigure.ManagementSecurityAutoConfiguration.ManagementWebSecurityConfigurerAdapter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private corsProperties : EndpointCorsProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to private corsProperties : EndpointCorsProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private healthMvcEndpointProperties : HealthMvcEndpointProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to private healthMvcEndpointProperties : HealthMvcEndpointProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private mappingCustomizers : List<EndpointHandlerMappingCustomizer> from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to private mappingCustomizers : List<EndpointHandlerMappingCustomizer> from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private mappingCustomizers : List<EndpointHandlerMappingCustomizer> from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.EndpointHandlerMappingConfiguration to private mappingCustomizers : List<EndpointHandlerMappingCustomizer> from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private managementServerProperties : ManagementServerProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to private managementServerProperties : ManagementServerProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter endpointPaths : String[] to permitAllMatcher : RequestMatcher in method private configureAuthorizeRequests(permitAllMatcher RequestMatcher, requests ExpressionUrlAuthorizationConfigurer<HttpSecurity>.ExpressionInterceptUrlRegistry) : void from class org.springframework.boot.actuate.autoconfigure.ManagementSecurityAutoConfiguration.ManagementWebSecurityConfigurerAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type endpointPaths : String[] to permitAllMatcher : RequestMatcher in method private configureAuthorizeRequests(permitAllMatcher RequestMatcher, requests ExpressionUrlAuthorizationConfigurer<HttpSecurity>.ExpressionInterceptUrlRegistry) : void from class org.springframework.boot.actuate.autoconfigure.ManagementSecurityAutoConfiguration.ManagementWebSecurityConfigurerAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter delegate : EnvironmentEndpoint to applicationContext : ApplicationContext in method public ManagementContextResolver(applicationContext ApplicationContext) in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration.ManagementContextResolver",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>ManagementContextResolver</span></span> is a new class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter delegate : MetricsEndpoint to applicationContext : ApplicationContext in method public setApplicationContext(applicationContext ApplicationContext) : void in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration.ManagementContextResolver",
    "comment" : "<p>ManagementContextResolver is a new class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter converters : HttpMessageConverters to request : HttpServletRequest in method public getHandler(request HttpServletRequest) : HandlerExecutionChain in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerMapping",
    "comment" : "<p>CompositeHandlerMapping is a new class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute mappingCustomizers : List<EndpointHandlerMappingCustomizer> to adapters : List<HandlerAdapter> in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerAdapter",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'>mappingCustomizers</span> attribute is deleted and the code using it is deleted too.</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable adapter : RequestMappingHandlerAdapter to list : List<HandlerMapping> in method private extractMappings() : List<HandlerMapping> in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerMapping",
    "comment" : "<p>CompositeHandlerMapping is a new class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable set : Set<MvcEndpoint> to list : List<HandlerAdapter> in method private extractAdapters() : List<HandlerAdapter> in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerAdapter",
    "comment" : "<p>CompositeHandlerAdapter is a new class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable customizer : EndpointHandlerMappingCustomizer to mapping : HandlerAdapter in method public handle(request HttpServletRequest, response HttpServletResponse, handler Object) : ModelAndView in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerAdapter",
    "comment" : "<p>CompositeHandlerAdapter is a new class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type delegate : EnvironmentEndpoint to applicationContext : ApplicationContext in method public ManagementContextResolver(applicationContext ApplicationContext) in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration.ManagementContextResolver",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type delegate : MetricsEndpoint to applicationContext : ApplicationContext in method public setApplicationContext(applicationContext ApplicationContext) : void in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration.ManagementContextResolver",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type converters : HttpMessageConverters to request : HttpServletRequest in method public getHandler(request HttpServletRequest) : HandlerExecutionChain in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerMapping",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type EndpointHandlerMapping to ManagementContextResolver in method public managementContextResolver() : ManagementContextResolver in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type mappingCustomizers : List<EndpointHandlerMappingCustomizer> to adapters : List<HandlerAdapter> in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerAdapter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type set : Set<MvcEndpoint> to list : List<HandlerAdapter> in method private extractAdapters() : List<HandlerAdapter> in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerAdapter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type customizer : EndpointHandlerMappingCustomizer to mapping : HandlerAdapter in method public handle(request HttpServletRequest, response HttpServletResponse, handler Object) : ModelAndView in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerAdapter",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type resourceLoader : ResourceLoader to resourceProperties : ResourceProperties in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter.FaviconConfiguration",
    "comment" : "<p>The variables are not used in the same way in the code</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private getLocations() : List<Resource> from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter.FaviconConfiguration to public getFaviconLocations() : List<Resource> from class org.springframework.boot.autoconfigure.web.ResourceProperties",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "FP",
      "purityComment" : "",
      "mappingState" : 5,
      "validationComment" : "null check has been added to the moved method, which is a impure change in this case"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public mvcEndpoint() : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpointTests.TestConfiguration to public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n",
      "mappingState" : 1,
      "validationComment" : "Incorrent refactoring in my opinion"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public mvcEndpoint() : MetricsMvcEndpoint from class org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpointTests.TestConfiguration to public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n",
      "mappingState" : 1,
      "validationComment" : "Incorrent refactoring in my opinion"
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private managementServerProperties : ManagementServerProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to private managementServerProperties : ManagementServerProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration",
    "comment" : "<p>The property is moved to <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-smi'>org.springframework.boot.actuate.autoconfigure</span></span>.<span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>EndpointWebMvcConfiguration, which is extracted from org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration<br /></span></span></p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public endpointHandlerMapping() : EndpointHandlerMapping renamed to public managementContextResolver() : ManagementContextResolver in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @ConditionalOnBean(EnvironmentEndpoint.class) in method public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "<p>due to&nbsp;Move And Rename Method public mvcEndpoint() : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpointTests.TestConfiguration to public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @ConditionalOnEnabledEndpoint(\"env\") in method public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "<p>due to&nbsp;Move And Rename Method public mvcEndpoint() : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpointTests.TestConfiguration to public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @ConditionalOnBean(MetricsEndpoint.class) in method public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "<p>due to&nbsp;Move And Rename Method public mvcEndpoint() : MetricsMvcEndpoint from class org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpointTests.TestConfiguration to public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @ConditionalOnEnabledEndpoint(\"metrics\") in method public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : "<p>due to&nbsp;Move And Rename Method public mvcEndpoint() : MetricsMvcEndpoint from class org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpointTests.TestConfiguration to public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Bean to @Bean(name = DispatcherServletAutoConfiguration.DEFAULT_DISPATCHER_SERVLET_BEAN_NAME) in method public dispatcherServlet() : DispatcherServlet from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Attribute Annotation",
    "description" : "Modify Attribute Annotation @Autowired to @Autowired(required = false) in attribute private server : ServerProperties from class org.springframework.boot.actuate.autoconfigure.ManagementSecurityAutoConfiguration.ManagementWebSecurityConfigurerAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @EnableConfigurationProperties({HealthMvcEndpointProperties.class,EndpointCorsProperties.class}) in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter delegate : EnvironmentEndpoint in method public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter delegate : MetricsEndpoint in method public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Bean(name = DispatcherServletAutoConfiguration.DEFAULT_DISPATCHER_SERVLET_BEAN_NAME) in method public dispatcherServlet() : DispatcherServlet from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @ConditionalOnBean(EnvironmentEndpoint) in method public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @ConditionalOnEnabledEndpoint(\"env\") in method public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @ConditionalOnBean(HealthEndpoint) in method public healthMvcEndpoint(delegate HealthEndpoint) : HealthMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @ConditionalOnEnabledEndpoint(\"health\") in method public healthMvcEndpoint(delegate HealthEndpoint) : HealthMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @ConditionalOnBean(MetricsEndpoint) in method public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @ConditionalOnEnabledEndpoint(\"metrics\") in method public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @ConditionalOnMissingBean in method public endpointHandlerMapping() : EndpointHandlerMapping from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Bean in method public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Bean in method public healthMvcEndpoint(delegate HealthEndpoint) : HealthMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Bean in method public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Bean in method public dispatcherServlet() : DispatcherServlet from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Autowired(required = false) in attribute private contextResolver : ManagementContextResolver from class org.springframework.boot.actuate.autoconfigure.ManagementSecurityAutoConfiguration.ManagementWebSecurityConfigurerAdapter",
    "comment" : "<p>new field</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Annotation",
    "description" : "Remove Attribute Annotation @Autowired in attribute private server : ServerProperties from class org.springframework.boot.actuate.autoconfigure.ManagementSecurityAutoConfiguration.ManagementWebSecurityConfigurerAdapter",
    "comment" : "<p>modified annotation</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Annotation",
    "description" : "Add Class Annotation @Configuration(DispatcherServlet.HANDLER_ADAPTER_BEAN_NAME) in class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.CompositeHandlerAdapter",
    "comment" : "<p>new inner class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public getFaviconLocations() : List<Resource> from class org.springframework.boot.autoconfigure.web.ResourceProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable managementContext : ApplicationContext in method public onDifferentPort() : void from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3535
}, {
  "id" : 1129630,
  "repository" : "https://github.com/apache/cassandra.git",
  "sha1" : "35668435090eb47cf8c5e704243510b6cee35a7b",
  "url" : "https://github.com/apache/cassandra/commit/35668435090eb47cf8c5e704243510b6cee35a7b",
  "author" : "Aleksey Yeschenko",
  "time" : "6/30/15 9:04 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private onCreateFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onCreateAggregate(ksName String, aggregateName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the two if statements which have been mapped, have changes that are not within the justifiable changes."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private onCreateFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onCreateFunction(ksName String, functionName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the two if statements which have been mapped, have changes that are not within the justifiable changes."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private onDropFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onDropAggregate(ksName String, aggregateName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private onDropFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onDropFunction(ksName String, functionName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.apache.cassandra.cql3.functions.Functions renamed to org.apache.cassandra.cql3.functions.FunctionResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData extracted from public readSchemaFromSystemTables() : Collection<KSMetaData> in class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : "createKeyspaceFromSchemaPartitions exists in both revisions",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter udf : UDAggregate to uda : UDAggregate in method public updateAggregate(uda UDAggregate) : void from class org.apache.cassandra.config.Schema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter udf : UDAggregate to uda : UDAggregate in method public addAggregate(uda UDAggregate) : void from class org.apache.cassandra.config.Schema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter udf : UDAggregate to uda : UDAggregate in method public dropAggregate(uda UDAggregate) : void from class org.apache.cassandra.config.Schema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter aggregateName : String to functionName : String in method private onDropFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void from class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter aggregateName : String to functionName : String in method private onCreateFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void from class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable references : List<Function> to referrers : Collection<UDAggregate> in method public announceMigration(isLocalOnly boolean) : boolean from class org.apache.cassandra.cql3.statements.DropFunctionStatement",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type references : List<Function> to referrers : Collection<UDAggregate> in method public announceMigration(isLocalOnly boolean) : boolean from class org.apache.cassandra.cql3.statements.DropFunctionStatement",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter fun : AbstractFunction to seriazliedAggregates : RowIterator in method private createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData in class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type fun : AbstractFunction to seriazliedAggregates : RowIterator in method private createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData in class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Collection<KSMetaData> to Collection<Function> in method public getFunctions(name FunctionName) : Collection<Function> in class org.apache.cassandra.config.Schema",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type olds : List<Function> to olds : Collection<Function> in method public announceMigration(isLocalOnly boolean) : boolean from class org.apache.cassandra.cql3.statements.DropAggregateStatement",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type olds : List<Function> to olds : Collection<Function> in method public validate(state ClientState) : void from class org.apache.cassandra.cql3.statements.DropFunctionStatement",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type olds : List<Function> to olds : Collection<Function> in method private findFunction() : Function from class org.apache.cassandra.cql3.statements.DropFunctionStatement",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type list : ListType<String> to udfs : Collection<UDFunction> in method private createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData in class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type strList : List<String> to udas : Collection<UDAggregate> in method private createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData in class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type functions : List<Function> to functions : Collection<Function> in method private functionResource(functionName String) : FunctionResource from class org.apache.cassandra.cql3.validation.entities.UFAuthTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private matchAguments(keyspace String, fun Function, providedArgs List<? extends AssignmentTestable>, receiverKs String, receiverCf String) : AssignmentTestable.TestResult from class org.apache.cassandra.cql3.functions.Functions to private matchAguments(keyspace String, fun Function, providedArgs List<? extends AssignmentTestable>, receiverKs String, receiverCf String) : AssignmentTestable.TestResult from class org.apache.cassandra.cql3.functions.FunctionResolver",
    "comment" : "<p>Rename Class org.apache.cassandra.cql3.functions.Functions renamed to org.apache.cassandra.cql3.functions.FunctionResolver</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public makeArgSpec(receiverKs String, receiverCf String, fun Function, i int) : ColumnSpecification from class org.apache.cassandra.cql3.functions.Functions to public makeArgSpec(receiverKs String, receiverCf String, fun Function, i int) : ColumnSpecification from class org.apache.cassandra.cql3.functions.FunctionResolver",
    "comment" : "<p>Rename Class org.apache.cassandra.cql3.functions.Functions renamed to org.apache.cassandra.cql3.functions.FunctionResolver</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public get(keyspace String, name FunctionName, providedArgs List<? extends AssignmentTestable>, receiverKs String, receiverCf String, receiverType AbstractType<?>) : Function from class org.apache.cassandra.cql3.functions.Functions to public get(keyspace String, name FunctionName, providedArgs List<? extends AssignmentTestable>, receiverKs String, receiverCf String, receiverType AbstractType<?>) : Function from class org.apache.cassandra.cql3.functions.FunctionResolver",
    "comment" : "<p>Rename Class org.apache.cassandra.cql3.functions.Functions renamed to org.apache.cassandra.cql3.functions.FunctionResolver</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private TOKEN_FUNCTION_NAME : FunctionName from class org.apache.cassandra.cql3.functions.Functions to private TOKEN_FUNCTION_NAME : FunctionName from class org.apache.cassandra.cql3.functions.FunctionResolver",
    "comment" : "<p>Rename Class org.apache.cassandra.cql3.functions.Functions renamed to org.apache.cassandra.cql3.functions.FunctionResolver</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private validateTypes(keyspace String, fun Function, providedArgs List<? extends AssignmentTestable>, receiverKs String, receiverCf String) : void from class org.apache.cassandra.cql3.functions.Functions to private validateTypes(keyspace String, fun Function, providedArgs List<? extends AssignmentTestable>, receiverKs String, receiverCf String) : void from class org.apache.cassandra.cql3.functions.FunctionResolver",
    "comment" : "<p>Rename Class org.apache.cassandra.cql3.functions.Functions renamed to org.apache.cassandra.cql3.functions.FunctionResolver</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public typeEquals(t1 AbstractType<?>, t2 AbstractType<?>) : boolean from class org.apache.cassandra.cql3.functions.Functions to public typesMatch(t1 AbstractType<?>, t2 AbstractType<?>) : boolean from class org.apache.cassandra.schema.Functions",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public typeEquals(t1 List<AbstractType<?>>, t2 List<AbstractType<?>>) : boolean from class org.apache.cassandra.cql3.functions.Functions to public typesMatch(t1 List<AbstractType<?>>, t2 List<AbstractType<?>>) : boolean from class org.apache.cassandra.schema.Functions",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Overlapped refactoring - can be identical by undoing the overlapped refactoring\n- Rename Method-",
      "mappingState" : 1,
      "validationComment" : "Rename (and Move) method on top"
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.apache.cassandra.cql3.functions.Functions.FunctionsMigrationListener moved and renamed to org.apache.cassandra.cql3.functions.FunctionResolver",
    "comment" : "<p>Rename Class org.apache.cassandra.cql3.functions.Functions renamed to org.apache.cassandra.cql3.functions.FunctionResolver</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public onCreateAggregate(ksName String, aggregateName String, argTypes List<AbstractType<?>>) : void renamed to public onCreateFunction(ksName String, functionName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public onCreateFunction(ksName String, functionName String, argTypes List<AbstractType<?>>) : void renamed to private onCreateFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getKeyspaceDefinitions() : Collection<KSMetaData> renamed to public getFunctions(name FunctionName) : Collection<Function> in class org.apache.cassandra.config.Schema",
    "comment" : "<p>getKeyspaceDefinitions() : Collection&lt;KSMetaData&gt; is deleted</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public updateFunction(udf UDFunction) : void renamed to public addFunction(udf UDFunction) : void in class org.apache.cassandra.config.Schema",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public addAggregate(udf UDAggregate) : void renamed to public updateAggregate(uda UDAggregate) : void in class org.apache.cassandra.config.Schema",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public updateAggregate(udf UDAggregate) : void renamed to private updateFunctionInternal(fun Function) : void in class org.apache.cassandra.config.Schema",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public dropAggregate(udf UDAggregate) : void renamed to private dropFunctionInternal(fun Function) : void in class org.apache.cassandra.config.Schema",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter functions : Functions in method private KSMetaData(name String, strategyClass Class<? extends AbstractReplicationStrategy>, strategyOptions Map<String,String>, durableWrites boolean, cfDefs Iterable<CFMetaData>, userTypes UTMetaData, functions Functions) from class org.apache.cassandra.config.KSMetaData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter functions : Functions in method public cloneWith(tables Iterable<CFMetaData>, types UTMetaData, functions Functions) : KSMetaData from class org.apache.cassandra.config.KSMetaData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serializedFunctions : RowIterator in method private createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData from class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter seriazliedAggregates : RowIterator in method private createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData from class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type candidates : List<Function> to candidates : Collection<Function> in method public get(keyspace String, name FunctionName, providedArgs List<? extends AssignmentTestable>, receiverKs String, receiverCf String, receiverType AbstractType<?>) : Function from class org.apache.cassandra.cql3.functions.FunctionResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public makeCreateKeyspaceMutation(keyspace KSMetaData, timestamp long, withTablesAndTypesAndFunctions boolean) : Mutation from class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier final in class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier abstract in class org.apache.cassandra.cql3.functions.Functions",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier final in class org.apache.cassandra.cql3.functions.FunctionResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type function : Function to function : Optional<Function> in method public applicablePermissions() : Set<Permission> from class org.apache.cassandra.auth.FunctionResource",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Loop With Pipeline",
    "description" : "Replace Loop With Pipeline for(table: keyspace.cfMetaData().values()) with keyspace.cfMetaData().values().forEach(table -> addTableToSchemaMutation(table,timestamp,true,mutation)); in method public makeCreateKeyspaceMutation(keyspace KSMetaData, timestamp long, withTablesAndTypesAndFunctions boolean) : Mutation from class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Loop With Pipeline",
    "description" : "Replace Loop With Pipeline for(type: keyspace.userTypes.getAllTypes().values()) with keyspace.userTypes.getAllTypes().values().forEach(type -> addTypeToSchemaMutation(type,timestamp,mutation)); in method public makeCreateKeyspaceMutation(keyspace KSMetaData, timestamp long, withTablesAndTypesAndFunctions boolean) : Mutation from class org.apache.cassandra.schema.LegacySchemaTables",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Loop With Pipeline",
    "description" : "Replace Loop With Pipeline for(cfm: cfMetaData.values()) with cfMetaData.values().forEach(CFMetaData::validate); in method public validate() : KSMetaData from class org.apache.cassandra.config.KSMetaData",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Anonymous With Lambda",
    "description" : "Replace Anonymous With Lambda org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber.removeInvalidPreparedStatementsForFunction.removeIf.new Predicate<ParsedStatement.Prepared> with statement -> Iterables.any(statement.statement.getFunctions(),matchesFunction) in method private removeInvalidPreparedStatementsForFunction(statements Iterator<ParsedStatement.Prepared>, ksName String, functionName String) : void from class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Replace Anonymous With Lambda",
    "description" : "Replace Anonymous With Lambda org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber.removeInvalidPreparedStatementsForFunction.matchesFunction.new Predicate<Function> with f -> ksName.equals(f.name().keyspace) && functionName.equals(f.name().name) in method private removeInvalidPreparedStatementsForFunction(statements Iterator<ParsedStatement.Prepared>, ksName String, functionName String) : void from class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable matchesFunction : Predicate<Function> in method private removeInvalidPreparedStatementsForFunction(statements Iterator<ParsedStatement.Prepared>, ksName String, functionName String) : void from class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable func : Function to fun : Optional<Function> in method private resolveScalar(aName FunctionName, fName FunctionName, argTypes List<AbstractType<?>>) : ScalarFunction from class org.apache.cassandra.cql3.functions.UDAggregate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type func : Function to fun : Optional<Function> in method private resolveScalar(aName FunctionName, fName FunctionName, argTypes List<AbstractType<?>>) : ScalarFunction from class org.apache.cassandra.cql3.functions.UDAggregate",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 8203
}, {
  "id" : 1131927,
  "repository" : "https://github.com/square/wire.git",
  "sha1" : "85a690e3cdbbb8447342eefdf690e22ad1b33e02",
  "url" : "https://github.com/square/wire/commit/85a690e3cdbbb8447342eefdf690e22ad1b33e02",
  "author" : "jwilson",
  "time" : "7/3/15 1:18 AM",
  "refactorings" : [ {
    "type" : "Rename Class",
    "description" : "Rename Class com.squareup.wire.model.LinkerTest renamed to com.squareup.wire.model.OptionsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public optionMatches(options List<WireOption>, namePattern String, valuePattern String) : boolean from class com.squareup.wire.internal.Util to public optionMatches(namePattern String, valuePattern String) : boolean from class com.squareup.wire.model.Options",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package resolveFieldPath(name String, fullyQualifiedNames Set<String>) : String[] from class com.squareup.wire.model.Linker to package resolveFieldPath(name String, fullyQualifiedNames Set<String>) : String[] from class com.squareup.wire.model.Options",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public packageName() : String from class com.squareup.wire.model.WireOption to public packageName() : String from class com.squareup.wire.model.Options",
    "comment" : "<p>added</p><p>The class WireOption is deleted. Consistently, wherever we had&nbsp;List&lt;WireOption&gt; we now have Options</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type type : TypeName to type : ProtoTypeName in method private fieldInitializer(type ProtoTypeName, value Object) : CodeBlock from class com.squareup.wire.java.TypeWriter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type options : List<WireOption> to options : Options in method package WireEnum(protoTypeName ProtoTypeName, element EnumElement, constants List<WireEnumConstant>, options Options) from class com.squareup.wire.model.WireEnum",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type options : List<WireOption> to options : Options in method public WireMessage(protoTypeName ProtoTypeName, element MessageElement, fields List<WireField>, oneOfs List<WireOneOf>, nestedTypes List<WireType>, options Options) from class com.squareup.wire.model.WireMessage",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type options : List<WireOption> to options : Options in method private WireProtoFile(sourcePath String, protoFile ProtoFile, types List<WireType>, services List<WireService>, wireExtends List<WireExtend>, options Options) from class com.squareup.wire.model.WireProtoFile",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type options : List<WireOption> to options : Options in method private WireService(protoTypeName ProtoTypeName, element ServiceElement, rpcs List<WireRpc>, options Options) from class com.squareup.wire.model.WireService",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<WireOption> to Options in method public options() : Options from class com.squareup.wire.model.WireEnum",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<WireOption> to Options in method public options() : Options from class com.squareup.wire.model.WireEnumConstant",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<WireOption> to Options in method public options() : Options from class com.squareup.wire.model.WireField",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type WireOption to Object in method public getDefault() : Object from class com.squareup.wire.model.WireField",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<WireOption> to Options in method public options() : Options from class com.squareup.wire.model.WireMessage",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<WireOption> to Options in method public options() : Options from class com.squareup.wire.model.WireProtoFile",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<WireOption> to Options in method public options() : Options from class com.squareup.wire.model.WireRpc",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<WireOption> to Options in method public options() : Options from class com.squareup.wire.model.WireService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<WireOption> to Options in method public abstract options() : Options from class com.squareup.wire.model.WireType",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable option : WireOption to type : WireType in method public link(wireProtoFiles Collection<WireProtoFile>) : void in class com.squareup.wire.model.Linker",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable option : WireOption to rpc : WireRpc in method package linkOptions(linker Linker) : void in class com.squareup.wire.model.WireService",
    "comment" : "<p>The method linkOptions() is not extracted from <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>link</span></span>() to consider there is a relationship between statements<br /><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>for</span> (<span class='pl-smi'>WireOption</span> option <span class='pl-k'>:</span> options)<br /><span class='pl-k'>for</span> (<span class='pl-smi'>WireRpc</span> rpc <span class='pl-k'>:</span> rpcs)</span><br /><br /></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type javaPackageOption : WireOption to javaPackageOption : Object in method private javaPackage(wireProtoFile WireProtoFile) : String from class com.squareup.wire.java.JavaGenerator",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type options : List<WireOption> to options : Options in class com.squareup.wire.model.WireEnum",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type options : List<WireOption> to options : Options in class com.squareup.wire.model.WireEnumConstant",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type options : List<WireOption> to options : Options in class com.squareup.wire.model.WireField",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type options : List<WireOption> to options : Options in class com.squareup.wire.model.WireMessage",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type options : List<WireOption> to options : Options in class com.squareup.wire.model.WireProtoFile",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type options : List<WireOption> to options : Options in class com.squareup.wire.model.WireRpc",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type options : List<WireOption> to options : Options in class com.squareup.wire.model.WireService",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type defaultValue : WireEnumConstant to optionsFieldName : String in method private fieldOptionsField(field WireField) : FieldSpec in class com.squareup.wire.java.TypeWriter",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type fieldDefault : WireOption to defaultValue : Object in method private defaultValue(field WireField) : CodeBlock from class com.squareup.wire.java.TypeWriter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type javaType : TypeName to extensionRoot : WireField in method private fieldOptionsField(field WireField) : FieldSpec in class com.squareup.wire.java.TypeWriter",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type candidate : String to fullyQualifiedExtensionField : WireField in method package dereference(packageName String, self WireField, field String) : WireField in class com.squareup.wire.model.Linker",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type option : WireOption to type : WireType in method public link(wireProtoFiles Collection<WireProtoFile>) : void in class com.squareup.wire.model.Linker",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type option : WireOption to field : WireField in method private markOptions(options Options) : void from class com.squareup.wire.model.Pruner",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type option : WireOption to linker : Linker in method package linkOptions(linker Linker) : void in class com.squareup.wire.model.WireField",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type option : OptionElement to linker : Linker in method package linkOptions(linker Linker) : void in class com.squareup.wire.model.WireRpc",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type option : WireOption to rpc : WireRpc in method package linkOptions(linker Linker) : void in class com.squareup.wire.model.WireService",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public findOption(options List<WireOption>, name String) : WireOption from class com.squareup.wire.internal.Util to public get(name String) : Object from class com.squareup.wire.model.Options",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Severe Changes",
      "mappingState" : 5,
      "validationComment" : "the removed statement and the replacement in the return statement are not justifiable changes"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method package fieldPath(packageName String, extensionType ProtoTypeName, fieldPath String) : List<WireField> from class com.squareup.wire.model.Linker to package canonicalizeOption(linker Linker, extensionType ProtoTypeName, option OptionElement) : Map<WireField,Object> from class com.squareup.wire.model.Options",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Severe Changes",
      "mappingState" : 5,
      "validationComment" : "non-mapped leaves are not justifiable"
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type WireOption to Object in method public get(name String) : Object from class com.squareup.wire.model.Options",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<WireField> to Map<WireField,Object> in method package canonicalizeOption(linker Linker, extensionType ProtoTypeName, option OptionElement) : Map<WireField,Object> from class com.squareup.wire.model.Options",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package link(linker Linker) : void renamed to package linkOptions(linker Linker) : void in class com.squareup.wire.model.WireEnum",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package link(linker Linker) : void renamed to package linkOptions(linker Linker) : void in class com.squareup.wire.model.WireField",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter extensionFieldToFile : ImmutableMap<WireField,WireProtoFile> in method public JavaGenerator(wireToJava ImmutableMap<ProtoTypeName,TypeName>, wireToType ImmutableMap<ProtoTypeName,WireType>, extensionFieldToFile ImmutableMap<WireField,WireProtoFile>) from class com.squareup.wire.java.JavaGenerator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter options : List<WireOption> in method public findOption(options List<WireOption>, name String) : WireOption from class com.squareup.wire.internal.Util",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter options : List<WireOption> in method public optionMatches(options List<WireOption>, namePattern String, valuePattern String) : boolean from class com.squareup.wire.internal.Util",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method public findOption(options List<WireOption>, name String) : WireOption from class com.squareup.wire.internal.Util",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method public optionMatches(options List<WireOption>, namePattern String, valuePattern String) : boolean from class com.squareup.wire.internal.Util",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter linker : Linker in method package canonicalizeOption(linker Linker, extensionType ProtoTypeName, option OptionElement) : Map<WireField,Object> from class com.squareup.wire.model.Options",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter option : OptionElement in method package canonicalizeOption(linker Linker, extensionType ProtoTypeName, option OptionElement) : Map<WireField,Object> from class com.squareup.wire.model.Options",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter packageName : String in method package fieldPath(packageName String, extensionType ProtoTypeName, fieldPath String) : List<WireField> from class com.squareup.wire.model.Linker",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter fieldPath : String in method package fieldPath(packageName String, extensionType ProtoTypeName, fieldPath String) : List<WireField> from class com.squareup.wire.model.Linker",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type options : List<WireOption> to options : Options in method public get(protoTypeName ProtoTypeName, element ServiceElement) : WireService from class com.squareup.wire.model.WireService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type options : List<WireOption> to options : Options in method public get(sourcePath String, protoFile ProtoFile) : WireProtoFile from class com.squareup.wire.model.WireProtoFile",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type options : List<WireOption> to options : Options in method package get(protoTypeName ProtoTypeName, type TypeElement) : WireType from class com.squareup.wire.model.WireType",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable javaType : TypeName in method private fieldInitializer(type ProtoTypeName, value Object) : CodeBlock from class com.squareup.wire.java.TypeWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type found : WireOption to found : OptionElement in method public get(name String) : Object from class com.squareup.wire.model.Options",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type option : WireOption to option : OptionElement in method public get(name String) : Object from class com.squareup.wire.model.Options",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type option : WireOption to option : OptionElement in method public optionMatches(namePattern String, valuePattern String) : boolean from class com.squareup.wire.model.Options",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 0
}, {
  "id" : 1133259,
  "repository" : "https://github.com/slapperwan/gh4a.git",
  "sha1" : "b8fffb706258db4c4d2f608d8e8dad9312e2230d",
  "url" : "https://github.com/slapperwan/gh4a/commit/b8fffb706258db4c4d2f608d8e8dad9312e2230d",
  "author" : "Danny Baumann",
  "time" : "7/6/15 4:56 AM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method public highlightImage(imageUrl String) : String from class com.gh4a.utils.StringUtils to private highlightImage(imageUrl String) : String from class com.gh4a.activities.FileViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private isExtensionIn(filename String, extensions List<String>) : boolean extracted from public isImage(filename String) : boolean in class com.gh4a.utils.FileUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "null assignment has been added through a ternary else. It makes the refactorig impure."
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private writeCssInclude(builder StringBuilder, cssType String) : void from class com.gh4a.utils.StringUtils to protected writeCssInclude(builder StringBuilder, cssType String) : void from class com.gh4a.activities.WebViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private writeScriptInclude(builder StringBuilder, scriptName String) : void from class com.gh4a.utils.StringUtils to protected writeScriptInclude(builder StringBuilder, scriptName String) : void from class com.gh4a.activities.WebViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public SKIP_PRETTIFY_EXT : List<String> from class com.gh4a.Constants to private SKIP_PRETTIFY_EXT : List<String> from class com.gh4a.activities.WebViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected loadCode(data String, fileName String) : void extracted from public onResultReady(result LoaderResult<Gist>) : void in class com.gh4a.activities.GistViewerActivity$1 & moved to class com.gh4a.activities.WebViewerActivity",
    "comment" : "<p>Extract and Move to other class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable ext : String to extension : String in method private isExtensionIn(filename String, extensions List<String>) : boolean from class com.gh4a.utils.FileUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute imageExts : List<String> to IMAGE_EXTS : List<String> in class com.gh4a.utils.FileUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public highlightSyntax(data String, fileName String, repoOwner String, repoName String, ref String) : String from class com.gh4a.utils.StringUtils to protected loadCode(data String, fileName String, repoOwner String, repoName String, ref String) : void from class com.gh4a.activities.WebViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Severe Changes",
      "mappingState" : 5,
      "validationComment" : "the replacement -Constants.MARKDOWN_EXT.contains(ext) -> isMarkdown- is not justifiable based on manual validation, so the if condition has been impurely changed"
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type String to void in method protected loadCode(data String, fileName String, repoOwner String, repoName String, ref String) : void from class com.gh4a.activities.WebViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected loadCode(data String, fileName String, repoOwner String, repoName String, ref String) : void from class com.gh4a.activities.WebViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected writeScriptInclude(builder StringBuilder, scriptName String) : void from class com.gh4a.activities.WebViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to protected in method protected writeCssInclude(builder StringBuilder, cssType String) : void from class com.gh4a.activities.WebViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private highlightImage(imageUrl String) : String from class com.gh4a.activities.FileViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to private in attribute private SKIP_PRETTIFY_EXT : List<String> from class com.gh4a.activities.WebViewerActivity",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method public highlightSyntax(data String, fileName String, repoOwner String, repoName String, ref String) : String from class com.gh4a.utils.StringUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private IMAGE_EXTS : List<String> from class com.gh4a.utils.FileUtils",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 646
}, {
  "id" : 1134634,
  "repository" : "https://github.com/infinispan/infinispan.git",
  "sha1" : "35b6c869546a7968b6fd2f640add6eea87e03c22",
  "url" : "https://github.com/infinispan/infinispan/commit/35b6c869546a7968b6fd2f640add6eea87e03c22",
  "author" : "Adrian Nistor",
  "time" : "7/6/15 1:12 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery.ReverseFilterResultComparator moved to org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery.ReverseFilterResultComparator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testEmbeddedQuery() : void renamed to public testEmbeddedLuceneQuery() : void in class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private createAccount(id int) : AccountPB renamed to private createAccountPB(id int) : AccountPB in class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.objectfilter.impl.BaseMatcher to private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.objectfilter.impl.BaseMatcher to private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.query.dsl.embedded.impl.QueryEngine",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.objectfilter.impl.BaseMatcher to private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.objectfilter.impl.FilterRegistry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private projection : String[] from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to protected projection : String[] from class org.infinispan.query.dsl.impl.BaseQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getProjection() : String[] from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to public getProjection() : String[] from class org.infinispan.query.dsl.impl.BaseQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private parseQuery(cacheConfiguration Configuration, serCtx SerializationContext, queryString String, searchFactory SearchIntegrator) : LuceneQueryParsingResult renamed to private transformJpaToLucene(isCompatMode boolean, serCtx SerializationContext, jpqlString String, searchFactory SearchIntegrator) : LuceneQueryParsingResult in class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private executeIndexedQuery(cache AdvancedCache<byte[],byte[]>, cacheConfiguration Configuration, serCtx SerializationContext, request QueryRequest) : QueryResponse renamed to private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query in class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.objectfilter.impl.BaseMatcher to private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.objectfilter.impl.syntax.BooleShannonExpansionTest",
    "comment" : "Extract Superclass",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private createAccountPB() : AccountPB inlined to public testRemoteQuery() : void in class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Rename Method refactoring on top of the inlined method"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testEmbeddedQuery() : void renamed to public testEmbeddedLuceneQuery() : void in class org.infinispan.client.hotrod.marshall.NonIndexedEmbeddedCompatTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private createAccountPB() : AccountPB inlined to public testPutAndGet() : void in class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Rename Method refactoring on top of the inlined method"
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private createAccountPB() : AccountPB inlined to public testEmbeddedLuceneQuery() : void in class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood, Nikos",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Rename Method refactoring on top of the inlined method"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter normalizedFilter : BooleanExpr to query : BooleanExpr in method public addFilter(queryString String, query BooleanExpr, projection List<String>, sortFields List<SortField>, callback FilterCallback, eventTypes Object[]) : FilterSubscriptionImpl<TypeMetadata,AttributeMetadata,AttributeId> from class org.infinispan.objectfilter.impl.FilterRegistry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter queryString : String to jpqlString : String in method private transformJpaToLucene(isCompatMode boolean, serCtx SerializationContext, jpqlString String, searchFactory SearchIntegrator) : LuceneQueryParsingResult from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable matcherImplClass : Class<? extends Matcher> in method public buildQuery(queryFactory QueryFactory, jpqlString String, startOffset long, maxResults int) : Query from class org.infinispan.query.dsl.embedded.impl.QueryEngine",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private executeNonIndexedQuery(cache AdvancedCache<byte[],byte[]>, cacheConfiguration Configuration, serCtx SerializationContext, request QueryRequest) : QueryResponse inlined to public query(cache AdvancedCache<byte[],byte[]>, query byte[]) : byte[] in class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "non-mapped leaves in T1 are not justifiable"
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable metadataAdapter : MetadataAdapter<TypeMetadata,AttributeMetadata,AttributeId> in method public getObjectFilter(jpaQuery String) : ObjectFilter from class org.infinispan.objectfilter.impl.BaseMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public list() : List<T> from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to public list() : List<T> from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private listInternal() : List from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to private listInternal() : List from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public getResultSize() : int from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to public getResultSize() : int from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method private ensureAccessPermissions(cache AdvancedCache<?,?>) : void from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to private ensureAccessPermissions(cache AdvancedCache<?,?>) : void from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private INITIAL_CAPACITY : int from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to private INITIAL_CAPACITY : int from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private startOffset : int from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to protected startOffset : int from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private cache : AdvancedCache<?,?> from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to protected cache : AdvancedCache<?,?> from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private results : List from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to private results : List from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private resultSize : int from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to private resultSize : int from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Attribute",
    "description" : "Pull Up Attribute private maxResults : int from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to protected maxResults : int from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable projection : String[] in method public buildLuceneQuery(queryFactory QueryFactory, jpqlString String, startOffset long, maxResults int, additionalLuceneQuery Query) : LuceneQuery from class org.infinispan.query.dsl.embedded.impl.QueryEngine",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter classLoader : ClassLoader to userClassLoader : ClassLoader in method public ReflectionEntityNamesResolver(userClassLoader ClassLoader) from class org.infinispan.objectfilter.impl.hql.ReflectionEntityNamesResolver",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter jpaQuery : String to queryString : String in method public ObjectFilterImpl(matcher BaseMatcher<TypeMetadata,AttributeMetadata,AttributeId>, metadataAdapter MetadataAdapter<TypeMetadata,AttributeMetadata,AttributeId>, queryString String, query BooleanExpr, projections List<String>, sortFields List<SortField>) from class org.infinispan.objectfilter.impl.ObjectFilterImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter normalizedFilter : BooleanExpr to query : BooleanExpr in method public ObjectFilterImpl(matcher BaseMatcher<TypeMetadata,AttributeMetadata,AttributeId>, metadataAdapter MetadataAdapter<TypeMetadata,AttributeMetadata,AttributeId>, queryString String, query BooleanExpr, projections List<String>, sortFields List<SortField>) from class org.infinispan.objectfilter.impl.ObjectFilterImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Split Parameter",
    "description" : "Split Parameter parsingResult : FilterParsingResult<TypeMetadata> to [sortFields : List<SortField>, projections : List<String>] in method public ObjectFilterImpl(matcher BaseMatcher<TypeMetadata,AttributeMetadata,AttributeId>, metadataAdapter MetadataAdapter<TypeMetadata,AttributeMetadata,AttributeId>, queryString String, query BooleanExpr, projections List<String>, sortFields List<SortField>) from class org.infinispan.objectfilter.impl.ObjectFilterImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Split Parameter",
    "description" : "Split Parameter request : QueryRequest to [jpqlString : String, startOffset : long, maxResults : int] in method private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable projection : String[] in method private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type cache : AdvancedCache<byte[],byte[]> to cache : AdvancedCache<?,?> in method private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type QueryResponse to Query in method private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [totalResults : long, list : List<?>] to q : Query in method private makeResponse(isCompatMode boolean, serCtx SerializationContext, q Query) : QueryResponse from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type list : List<AccountPB> to list : List<Account> in method public testRemoteQueryForEmbeddedEntry() : void from class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type list : List<UserPB> to list : List<User> in method public testRemoteQueryForEmbeddedEntryOnNonIndexedField() : void from class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter parsingResult : FilterParsingResult<TypeMetadata> to projections : List<String> in method public ObjectFilterImpl(matcher BaseMatcher<TypeMetadata,AttributeMetadata,AttributeId>, metadataAdapter MetadataAdapter<TypeMetadata,AttributeMetadata,AttributeId>, queryString String, query BooleanExpr, projections List<String>, sortFields List<SortField>) in class org.infinispan.objectfilter.impl.ObjectFilterImpl",
    "comment" : "<p>Split Parameter parsingResult : FilterParsingResult&lt;TypeMetadata&gt; to [sortFields : List&lt;SortField&gt;, projections : List&lt;String&gt;]</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute classLoader : ClassLoader to classLoaders : ClassLoader[] in class org.infinispan.objectfilter.impl.hql.ReflectionEntityNamesResolver",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter cacheConfiguration : Configuration to jpqlString : String in method private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query in class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : "<p>Split Parameter request : QueryRequest to [jpqlString : String, maxResults : int, startOffset : long]</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter request : QueryRequest to startOffset : long in method private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query in class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : "<p>Split Parameter request : QueryRequest to [jpqlString : String, maxResults : int, startOffset : long]</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter list : List<?> to q : org.infinispan.query.dsl.Query in method private makeResponse(isCompatMode boolean, serCtx SerializationContext, q org.infinispan.query.dsl.Query) : QueryResponse in class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>[List&lt;?&gt;</span> <span class='pl-v'>list</span>, <span class='pl-k'>int</span> <span class='pl-v'>projSize</span>, <span class='pl-k'>long</span> <span class='pl-v'>totalResults</span>, <span class='pl-k'>int</span> <span class='pl-v'>numResults] merged to q</span></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type parsingResult : FilterParsingResult<TypeMetadata> to projections : List<String> in method public ObjectFilterImpl(matcher BaseMatcher<TypeMetadata,AttributeMetadata,AttributeId>, metadataAdapter MetadataAdapter<TypeMetadata,AttributeMetadata,AttributeId>, queryString String, query BooleanExpr, projections List<String>, sortFields List<SortField>) in class org.infinispan.objectfilter.impl.ObjectFilterImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type cacheConfiguration : Configuration to jpqlString : String in method private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query in class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type int to void in method public close() : void in class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery.getIterator",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type list : List<AccountPB> to list : List<User> in method public testRemoteQueryForEmbeddedEntryOnIndexedAndNonIndexedField() : void in class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>testRemoteQueryForEmbeddedEntryOnIndexedAndNonIndexedField</span></span>() is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type iterable : CloseableIterable<Map.Entry<?,ObjectFilter.FilterResult>> to it : CloseableIterator<Map.Entry<?,ObjectFilter.FilterResult>> in method protected getIterator() : CloseableIterator<ObjectFilter.FilterResult> in class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery",
    "comment" : "<p>Inline variable<br /><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>CloseableIterable&lt;<span class='pl-smi'>Map</span>.Entry&lt;?, <span class='pl-smi'>ObjectFilter</span>.</span><span class='pl-smi'>FilterResult</span><span class='pl-k'>&gt;&gt;</span> iterable <span class='pl-k'>=</span> cache<span class='pl-k'>.</span>filterEntries(filter)<span class='pl-k'>.</span>converter(filter);<br /><span class='pl-k'>final</span> <span class='pl-k'>CloseableIterator&lt;<span class='pl-smi'>Map</span>.Entry&lt;?, <span class='pl-smi'>ObjectFilter</span>.</span><span class='pl-smi'>FilterResult</span><span class='pl-k'>&gt;&gt;</span> it <span class='pl-k'>=</span> cache<span class='pl-k'>.</span>filterEntries(filter)<span class='pl-k'>.</span>converter(filter)<span class='pl-k'>.</span>iterator();<br /></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private eqAndInterval(first ComparisonExpr, second ComparisonExpr, isConjunction boolean, cmp int) : BooleanExpr from class org.infinispan.objectfilter.impl.syntax.BooleanFilterNormalizer to private optimizeEqAndInterval(first ComparisonExpr, second ComparisonExpr, isConjunction boolean, cmp int) : BooleanExpr from class org.infinispan.objectfilter.impl.syntax.PredicateOptimisations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "",
      "mappingState" : 5,
      "validationComment" : "one assert statement has been added to the child version"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private notEqAndInterval(first ComparisonExpr, second ComparisonExpr, isConjunction boolean, cmp int) : BooleanExpr from class org.infinispan.objectfilter.impl.syntax.BooleanFilterNormalizer to private optimizeNotEqAndInterval(first ComparisonExpr, second ComparisonExpr, isConjunction boolean, cmp int) : BooleanExpr from class org.infinispan.objectfilter.impl.syntax.PredicateOptimisations",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "",
      "mappingState" : 5,
      "validationComment" : "one assert statement has been added to the child version"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getProjection() : String[] renamed to protected getComparator() : Comparator<Comparable[]> in class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Test(expectedExceptions = ParsingException.class, expectedExceptionsMessageRegExp = \"HQL100005:.*\") to @Test(expectedExceptions = ParsingException.class, expectedExceptionsMessageRegExp = \"ISPN000405:.*\") in method public testInvalidEmbeddedAttributeQuery() : void from class org.infinispan.query.dsl.embedded.QueryDslConditionsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter projection : String[] in method package RemoteQuery(queryFactory QueryFactory, cache RemoteCacheImpl, serializationContext SerializationContext, jpaQuery String, projection String[], startOffset long, maxResults int) from class org.infinispan.client.hotrod.impl.query.RemoteQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter namedParameters : Map<String,Object> in method public parse(jpaQuery String, namedParameters Map<String,Object>) : FilterParsingResult<TypeMetadata> from class org.infinispan.objectfilter.impl.BaseMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter projection : String[] in method package FilterQuery(queryFactory QueryFactory, jpaQuery String, projection String[]) from class org.infinispan.objectfilter.test.FilterQueryFactory.FilterQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter projection : String[] in method protected BaseQuery(queryFactory QueryFactory, jpaQuery String, projection String[]) from class org.infinispan.query.dsl.impl.BaseQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter projection : String[] in method public EmbeddedLuceneQuery(queryFactory QueryFactory, jpaQuery String, projection String[], cacheQuery CacheQuery) from class org.infinispan.query.dsl.embedded.impl.EmbeddedLuceneQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type IOException in method private executeIndexedQuery(cache AdvancedCache<byte[],byte[]>, cacheConfiguration Configuration, serCtx SerializationContext, request QueryRequest) : QueryResponse from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public parse(jpaQuery String, namedParameters Map<String,Object>) : FilterParsingResult<TypeMetadata> from class org.infinispan.objectfilter.impl.BaseMatcher",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to protected in method protected BaseQuery(queryFactory QueryFactory, jpaQuery String, projection String[]) from class org.infinispan.query.dsl.impl.BaseQuery",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public EmbeddedLuceneQuery(queryFactory QueryFactory, jpaQuery String, projection String[], cacheQuery CacheQuery) from class org.infinispan.query.dsl.embedded.impl.EmbeddedLuceneQuery",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected projection : String[] from class org.infinispan.query.dsl.impl.BaseQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method private optimizeEqAndInterval(first ComparisonExpr, second ComparisonExpr, isConjunction boolean, cmp int) : BooleanExpr from class org.infinispan.objectfilter.impl.syntax.PredicateOptimisations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method private optimizeNotEqAndInterval(first ComparisonExpr, second ComparisonExpr, isConjunction boolean, cmp int) : BooleanExpr from class org.infinispan.objectfilter.impl.syntax.PredicateOptimisations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable isIndexed : boolean in method private executeNonIndexedQuery(cache AdvancedCache<byte[],byte[]>, cacheConfiguration Configuration, serCtx SerializationContext, request QueryRequest) : QueryResponse from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : "<p>Inlined method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable isCompatMode : boolean in method private executeNonIndexedQuery(cache AdvancedCache<byte[],byte[]>, cacheConfiguration Configuration, serCtx SerializationContext, request QueryRequest) : QueryResponse from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : "<p>Inlined method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter cacheConfiguration : Configuration in method private executeIndexedQuery(cache AdvancedCache<byte[],byte[]>, cacheConfiguration Configuration, serCtx SerializationContext, request QueryRequest) : QueryResponse from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter isCompatMode : boolean in method private transformJpaToLucene(isCompatMode boolean, serCtx SerializationContext, jpqlString String, searchFactory SearchIntegrator) : LuceneQueryParsingResult from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter cacheConfiguration : Configuration in method private parseQuery(cacheConfiguration Configuration, serCtx SerializationContext, queryString String, searchFactory SearchIntegrator) : LuceneQueryParsingResult from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter serCtx : SerializationContext in method private getFieldDescriptor(serCtx SerializationContext, type String, attributePath String) : FieldDescriptor from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter type : String in method private getFieldDescriptor(serCtx SerializationContext, type String, attributePath String) : FieldDescriptor from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class org.infinispan.objectfilter.impl.BaseMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class org.infinispan.query.dsl.embedded.impl.EmbeddedLuceneQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type luceneQuery : Query to luceneQuery : org.apache.lucene.search.Query in method private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable normalizedFilter : BooleanExpr in method public registerFilter(jpaQuery String, callback FilterCallback, eventType Object...) : FilterSubscription from class org.infinispan.objectfilter.impl.BaseMatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable md : Descriptor in method public getFieldBridge(type String, propertyPath String) : FieldBridge from class org.infinispan.query.remote.QueryFacadeImpl.parseQuery.fieldBridgeProvider.new FieldBridgeProvider",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter numResults : int to numResults : int in method private makeResponse(isCompatMode boolean, serCtx SerializationContext, q Query) : QueryResponse from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter messageDescriptor : Descriptor to messageDescriptor : Descriptor in method private getFieldDescriptor(serCtx SerializationContext, type String, attributePath String) : FieldDescriptor from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter projSize : int to projSize : int in method private makeResponse(isCompatMode boolean, serCtx SerializationContext, q Query) : QueryResponse from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable isCompatMode : boolean to isCompatMode : boolean in method private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected cache : AdvancedCache<?,?> from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected startOffset : int from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected maxResults : int from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type entry : Map.Entry<?,ObjectFilter.FilterResult> to entry : ObjectFilter.FilterResult in method private listInternal() : List from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type iterable : CloseableIterable<Map.Entry<?,ObjectFilter.FilterResult>> to iterator : CloseableIterator<ObjectFilter.FilterResult> in method private listInternal() : List from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable iterable : CloseableIterable<Map.Entry<?,ObjectFilter.FilterResult>> to iterator : CloseableIterator<ObjectFilter.FilterResult> in method private listInternal() : List from class org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable r : ObjectFilter.FilterResult in method private listInternal() : List from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter list : List<?> to list : List<?> in method private makeResponse(isCompatMode boolean, serCtx SerializationContext, q Query) : QueryResponse from class org.infinispan.query.remote.QueryFacadeImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 6361
}, {
  "id" : 1135604,
  "repository" : "https://github.com/deeplearning4j/deeplearning4j.git",
  "sha1" : "91cdfa1ffd937a4cb01cdc0052874ef7831955e2",
  "url" : "https://github.com/deeplearning4j/deeplearning4j/commit/91cdfa1ffd937a4cb01cdc0052874ef7831955e2",
  "author" : "nyghtowl",
  "time" : "7/7/15 8:06 PM",
  "refactorings" : [ {
    "type" : "Move Method",
    "description" : "Move Method public testBackTrackLine() : void from class org.deeplearning4j.plot.ListenerTest to public testBackTrackLine() : void from class org.deeplearning4j.optimize.solver.BackTrackLineSearchTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getNewScore(oldParameters INDArray) : double extracted from public optimize(initialStep double, parameters INDArray, gradients INDArray) : double in class org.deeplearning4j.optimize.solvers.BackTrackLineSearch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getIrisLogisticLayerConfig(activationFunction String, iterations int) : OutputLayer extracted from public testLineSearch() : void in class org.deeplearning4j.optimize.solver.BackTrackLineSearchTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter function : Model to layer : Model in method public BackTrackLineSearch(layer Model, stepFunction StepFunction, optimizer ConvexOptimizer) from class org.deeplearning4j.optimize.solvers.BackTrackLineSearch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable l : OutputLayer to layer : OutputLayer in method public testLineSearch() : void from class org.deeplearning4j.optimize.solver.BackTrackLineSearchTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable d : DataSet to data : DataSet in method public testLineSearch() : void from class org.deeplearning4j.optimize.solver.BackTrackLineSearchTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute function : Model to layer : Model in class org.deeplearning4j.optimize.solvers.BackTrackLineSearch",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private getIris1ItConfig(hiddenLayerSizes int[], activationFunction String, iterations int) : MultiLayerConfiguration from class org.deeplearning4j.plot.ListenerTest to private getIrisMultiLayerConfig(hiddenLayerSizes int[], activationFunction String, iterations int) : MultiLayerConfiguration from class org.deeplearning4j.optimize.solver.BackTrackLineSearchTest",
    "comment" : "<p>The methods are almost identical</p><p><a href='https://github.com/eclipse/deeplearning4j/commit/91cdfa1ffd937a4cb01cdc0052874ef7831955e2#diff-367fe3c8ca7846530b2d0562b3b83324R80'>https://github.com/eclipse/deeplearning4j/commit/91cdfa1ffd937a4cb01cdc0052874ef7831955e2#diff-367fe3c8ca7846530b2d0562b3b83324R80</a></p><p><a href='https://github.com/eclipse/deeplearning4j/commit/91cdfa1ffd937a4cb01cdc0052874ef7831955e2#diff-85103651ed390942e886bf294f94953eL188'>https://github.com/eclipse/deeplearning4j/commit/91cdfa1ffd937a4cb01cdc0052874ef7831955e2#diff-85103651ed390942e886bf294f94953eL188</a>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n- Rename Variable-",
      "mappingState" : 1,
      "validationComment" : "-.activationFunction(softmax)- has been added to the child version. Also, the distribution hyperparameter has been changed from Distribution to Xavier."
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable c : MultiLayerConfiguration to conf : MultiLayerConfiguration in method private getIrisMultiLayerConfig(hiddenLayerSizes int[], activationFunction String, iterations int) : MultiLayerConfiguration from class org.deeplearning4j.optimize.solver.BackTrackLineSearchTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 997
}, {
  "id" : 1139097,
  "repository" : "https://github.com/cgeo/cgeo.git",
  "sha1" : "7e7e4f54801af4e49ebddb934d0c6ff33a2c2160",
  "url" : "https://github.com/cgeo/cgeo/commit/7e7e4f54801af4e49ebddb934d0c6ff33a2c2160",
  "author" : "Bananeweizen",
  "time" : "7/12/15 7:01 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class cgeo.geocaching.connector.TerraCachingConnector moved to cgeo.geocaching.connector.tc.TerraCachingConnector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public canHandle(geocode String) : boolean from class cgeo.geocaching.connector.TerraCachingConnector to public canHandle(geocode String) : boolean from class cgeo.geocaching.connector.tc.TerraCachingConnector",
    "comment" : "It is a move method",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getHost() : String from class cgeo.geocaching.connector.TerraCachingConnector to public getHost() : String from class cgeo.geocaching.connector.tc.TerraCachingConnector",
    "comment" : "It is a move method",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getName() : String from class cgeo.geocaching.connector.TerraCachingConnector to public getName() : String from class cgeo.geocaching.connector.tc.TerraCachingConnector",
    "comment" : "It is a move method",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public isOwner(cache Geocache) : boolean from class cgeo.geocaching.connector.TerraCachingConnector to public isOwner(cache Geocache) : boolean from class cgeo.geocaching.connector.tc.TerraCachingConnector",
    "comment" : "It is a move method",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private PATTERN_GEOCODE : Pattern from class cgeo.geocaching.connector.TerraCachingConnector to private PATTERN_GEOCODE : Pattern from class cgeo.geocaching.connector.tc.TerraCachingConnector",
    "comment" : "It is a move method",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public testCanHandle() : void from class cgeo.geocaching.connector.TerraCachingConnectorTest to public testHandleTerraCaches() : void from class cgeo.geocaching.connector.tc.TerraCachingConnectorTest",
    "comment" : "<p>cgeo.geocaching.connector.TerraCachingConnectorTest has been move to cgeo.geocaching.connector.tc.TerraCachingConnectorTest.<br /><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>private</span> <span class='pl-k'>static</span> <span class='pl-smi'>IConnector</span> <span class='pl-en'>getTerraCachingConnector</span>()</span> is extracted from testCanHandle()<br /><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>public</span> <span class='pl-k'>static</span> <span class='pl-k'>void</span> <span class='pl-en'>testHandleCyberCaches</span>() is a newly added test method</span><br /><br /></p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Extract Method-",
      "mappingState" : 5,
      "validationComment" : "one assersion has been added to the child version"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testTerraCaching() : void renamed to public testTerraCachingOldCollection() : void in class cgeo.geocaching.files.GPXParserTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"static-method\") in method protected afterParsing(cache Geocache) : void from class cgeo.geocaching.files.GPXParser",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getTerraCachingConnector() : IConnector extracted from public testCanHandle() : void in class cgeo.geocaching.connector.tc.TerraCachingConnectorTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "first moved, then extract method"
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class cgeo.geocaching.connector.tc.TerraCachingConnector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2501
}, {
  "id" : 1139791,
  "repository" : "https://github.com/spring-projects/spring-boot.git",
  "sha1" : "84937551787072a4befac29fb48436b3187ac4c6",
  "url" : "https://github.com/spring-projects/spring-boot/commit/84937551787072a4befac29fb48436b3187ac4c6",
  "author" : "Andy Wilkinson",
  "time" : "7/14/15 8:30 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration.SpringBootSecDispatcher moved to org.springframework.boot.cli.compiler.MavenSettingsReader.SpringBootSecDispatcher",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createMirrorSelector(settings Settings) : MirrorSelector from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createMirrorSelector(settings Settings) : MirrorSelector from class org.springframework.boot.cli.compiler.MavenSettings",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createSettingsDecrypter() : SettingsDecrypter from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createSettingsDecrypter() : SettingsDecrypter from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private decryptSettings(settings Settings) : SettingsDecryptionResult from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private decryptSettings(settings Settings) : SettingsDecryptionResult from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private loadSettings() : Settings from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private loadSettings() : Settings from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private setField(clazz Class<?>, fieldName String, target Object, value Object) : void from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private setField(clazz Class<?>, fieldName String, target Object, value Object) : void from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createProxySelector(proxies List<Proxy>) : ProxySelector from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createProxySelector(decryptedSettings SettingsDecryptionResult) : ProxySelector from class org.springframework.boot.cli.compiler.MavenSettings",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createAuthenticationSelector(servers List<Server>) : AuthenticationSelector from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createAuthenticationSelector(decryptedSettings SettingsDecryptionResult) : AuthenticationSelector from class org.springframework.boot.cli.compiler.MavenSettings",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private loadSettings() : Settings from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory to private loadSettings() : Settings from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "target class did not exust in the previous revision",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public readSettings() : MavenSettings extracted from public apply(session DefaultRepositorySystemSession, repositorySystem RepositorySystem) : void in class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration & moved to class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "<p>Extract and Move to other class</p><p>Extract and Move to <span class='blob-code-inner'><span class='pl-en'>MavenSettingsReader</span></span></p>",
    "validation" : "CTP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private homeDir : String from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private homeDir : String from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "It can be an extract method refactoring",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.springframework.boot.cli.compiler.MavenSettingsReader from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type settings : Settings to settings : MavenSettings in method public apply(session DefaultRepositorySystemSession, repositorySystem RepositorySystem) : void from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public SettingsXmlRepositorySystemSessionAutoConfiguration() from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to public MavenSettingsReader() from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method package SettingsXmlRepositorySystemSessionAutoConfiguration(homeDir String) from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to public MavenSettingsReader(homeDir String) from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter localRepository : String in method private addDefaultCacheAsRepository(localRepository String, repositoryConfiguration List<RepositoryConfiguration>) : void from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private addDefaultCacheAsRepository(localRepository String, repositoryConfiguration List<RepositoryConfiguration>) : void from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public MavenSettingsReader(homeDir String) from class org.springframework.boot.cli.compiler.MavenSettingsReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private loadSettings() : Settings from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable session : DefaultRepositorySystemSession in method private assertSessionCustomization(userHome String) : void from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfigurationTests",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable localRepository : String to localRepository : String in method private getLocalRepositoryDirectory(localRepository String) : File from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2343
}, {
  "id" : 1142116,
  "repository" : "https://github.com/infinispan/infinispan.git",
  "sha1" : "8f446b6ddf540e1b1fefca34dd10f45ba7256095",
  "url" : "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
  "author" : "Tristan Tarrant",
  "time" : "7/14/15 4:06 PM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.subsystem.ClusteringSubsystemTest moved to org.infinispan.server.commons.subsystem.ClusteringSubsystemTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.ServiceContainerHelper moved to org.infinispan.server.commons.msc.ServiceContainerHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackRemove moved and renamed to org.infinispan.server.jgroups.subsystem.StackRemoveHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.concurrent.ManagedExecutorService moved to org.infinispan.server.commons.concurrent.ManagedExecutorService",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.concurrent.ManagedScheduledExecutorService moved to org.infinispan.server.commons.concurrent.ManagedScheduledExecutorService",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.ManagedSocketFactory moved to org.infinispan.server.jgroups.ManagedSocketFactory",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.ManagedSocketFactoryTest moved to org.infinispan.server.jgroups.ManagedSocketFactoryTest",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.ProtocolDefaults moved to org.infinispan.server.jgroups.ProtocolDefaults",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.SaslClientCallbackHandler moved to org.infinispan.server.jgroups.security.SaslClientCallbackHandler",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.RealmAuthorizationCallbackHandler moved to org.infinispan.server.jgroups.security.RealmAuthorizationCallbackHandler",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.LogFactory moved to org.infinispan.server.jgroups.LogFactory",
    "comment" : "Agreement",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.jboss.as.clustering.jgroups.subsystem.ProtocolDefaultsService moved and renamed to org.infinispan.server.jgroups.subsystem.ProtocolDefaultsBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_7_0 moved and renamed to org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.TransportConfiguration.Topology moved to org.infinispan.server.jgroups.spi.TransportConfiguration.Topology",
    "comment" : "<p>This should be FP because RefDiff did not find the parent refactoring (move class&nbsp;TransportConfiguration&nbsp;due to rename package)</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private parseRemoteSite(reader XMLExtendedStreamReader, relayAddress PathAddress, operations List<ModelNode>) : void renamed to private parseChannel(reader XMLExtendedStreamReader, subsystemAddress PathAddress, operations Map<PathAddress,ModelNode>) : void in class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private parseProtocol(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List<ModelNode>) : void renamed to private parseStacks(reader XMLExtendedStreamReader, address PathAddress, operations Map<PathAddress,ModelNode>) : void in class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : "Both method name exist in both revisions",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private parseProperty(reader XMLExtendedStreamReader, address PathAddress, operations List<ModelNode>) : void renamed to private parseFork(reader XMLExtendedStreamReader, channelAddress PathAddress, operations Map<PathAddress,ModelNode>) : void in class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : "The parseProperty exists in the target revision although it changed a lot. Since the callers of the method, call it in the target revision not the parseFork we can say it is a TP",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private parseStack(reader XMLExtendedStreamReader, subsystemAddress PathAddress, operations List<ModelNode>) : void renamed to private parseChannels(reader XMLExtendedStreamReader, address PathAddress, operations Map<PathAddress,ModelNode>) : void in class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getProtocolStackConfiguration() : ProtocolStackConfiguration from class org.jboss.as.clustering.jgroups.JChannelFactory to public getProtocolStackConfiguration() : ProtocolStackConfiguration from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : "It is a move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getProtocolStackString() : String from class org.jboss.as.clustering.jgroups.JChannelFactory to public getProtocolStackString() : String from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : "It is a move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private init(transport TP) : void from class org.jboss.as.clustering.jgroups.JChannelFactory to private init(transport TP) : void from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : "It is a move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected performRuntime(context OperationContext, operation ModelNode, model ModelNode, verificationHandler ServiceVerificationHandler, newControllers List<ServiceController<?>>) : void from class org.jboss.as.clustering.jgroups.subsystem.AddStepHandler to protected performRuntime(context OperationContext, operation ModelNode, resource Resource) : void from class org.infinispan.server.commons.controller.ReloadRequiredAddStepHandler",
    "comment" : "It is a move Class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getValue() : Channel from class org.jboss.as.clustering.jgroups.subsystem.ChannelService to public getValue() : Channel from class org.infinispan.server.jgroups.spi.service.ChannelBuilder",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected getModelValidationConfiguration() : ValidationConfiguration from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTest to protected getModelValidationConfiguration() : ValidationConfiguration from class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : "<p>This is a getter method which return same type for both classes as both implement same class</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected getModelValidationConfiguration() : ValidationConfiguration from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase to protected getModelValidationConfiguration() : ValidationConfiguration from class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : "This is a getter method which return same type for both classes as both implement same class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getProperties(protocol String) : Map<String,String> from class org.jboss.as.clustering.jgroups.subsystem.ProtocolDefaultsService.Defaults to public getProperties(protocol String) : Map<String,String> from class org.infinispan.server.jgroups.subsystem.ProtocolDefaultsBuilder",
    "comment" : "<p>The original class is removed but the map attribute and the corresponding method still exists in the moved/renamed class (see&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2786)</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getName() : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Protocol to public getName() : String from class org.infinispan.server.jgroups.ForkChannelFactory.ForkProtocolStackConfiguration",
    "comment" : "This should be FP. original class is removed and the target is created in the new revision. both class extend the same class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getName() : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.ProtocolStack to public getName() : String from class org.infinispan.server.jgroups.ForkChannelFactory.ForkProtocolStackConfiguration",
    "comment" : "This should be FP. original class is removed and the target is created in the new revision. both class extend the same class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getProtocols() : List<ProtocolConfiguration> from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.ProtocolStack to public getProtocols() : List<ProtocolConfiguration> from class org.infinispan.server.jgroups.ForkChannelFactory.ForkProtocolStackConfiguration",
    "comment" : "This should be FP. original class is removed and the target is created in the new revision. both class extend the same class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getSiteName() : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Relay to public getSiteName() : String from class org.infinispan.server.jgroups.subsystem.RelayConfigurationBuilder",
    "comment" : "This should be FP. original class is removed and the target is created in the new revision. both class extend the same class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getName() : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.RemoteSite to public getName() : String from class org.infinispan.server.jgroups.ForkChannelFactory.ForkProtocolStackConfiguration",
    "comment" : "This should be FP. original class is removed and the target is created in the new revision. both class extend the same class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getClusterRole() : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Sasl to public getClusterRole() : String from class org.infinispan.server.jgroups.subsystem.SaslConfigurationBuilder",
    "comment" : "This should be FP. original class is removed and the target is created in the new revision.",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getMech() : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Sasl to public getMech() : String from class org.infinispan.server.jgroups.subsystem.SaslConfigurationBuilder",
    "comment" : "This should be FP. original class is removed and the target is created in the new revision.",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getTopology() : Topology from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Transport to public getTopology() : Topology from class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
    "comment" : "This should be FP. original class is removed and the target is created in the new revision.",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public isShared() : boolean from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Transport to public isShared() : boolean from class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
    "comment" : "This should be FP. original class is removed and the target is created in the new revision.",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public registerAttributes(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.jgroups.subsystem.RelayResourceDefinition to public registerAttributes(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.RelayResourceDefinition",
    "comment" : "It is a rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public registerAttributes(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.jgroups.subsystem.RemoteSiteResourceDefinition to public registerAttributes(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.RelayResourceDefinition",
    "comment" : "It is a rename class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public registerAttributes(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.jgroups.subsystem.SaslResourceDefinition to public registerAttributes(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.RelayResourceDefinition",
    "comment" : "RelayResourceDefinition is renamed",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method package setShared(shared boolean) : void from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Transport to public setShared(shared boolean) : TransportConfigurationBuilder from class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
    "comment" : "This should be FP. original class is removed and the target is created in the new revision.",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected executeRuntimeStep(context OperationContext, operation ModelNode) : void from class org.jboss.as.clustering.jgroups.subsystem.ExportNativeConfiguration to protected executeRuntimeStep(context OperationContext, operation ModelNode) : void from class org.infinispan.server.jgroups.subsystem.ExportNativeConfiguration",
    "comment" : "It is a Move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public forName(localName String) : Element from class org.jboss.as.clustering.jgroups.subsystem.Element to public forName(localName String) : Element from class org.infinispan.server.jgroups.subsystem.Element",
    "comment" : "It is a Move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public registerChildren(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.jgroups.subsystem.RelayResourceDefinition to public registerChildren(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.RelayResourceDefinition",
    "comment" : "It is a Move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public forName(localName String) : Attribute from class org.jboss.as.clustering.jgroups.subsystem.Attribute to public forName(localName String) : Attribute from class org.infinispan.server.jgroups.subsystem.Attribute",
    "comment" : "It is a Move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private configureMulticastSocket(protocol ProtocolConfiguration, config org.jgroups.conf.ProtocolConfiguration, addressProperty String, portProperty String, binding SocketBinding) : void from class org.jboss.as.clustering.jgroups.JChannelFactory to private configureMulticastSocket(introspector Introspector, config org.jgroups.conf.ProtocolConfiguration, addressProperty String, portProperty String, binding SocketBinding) : void from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : "It is a Move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getLocalName() : String from class org.jboss.as.clustering.jgroups.subsystem.Attribute to public getLocalName() : String from class org.infinispan.server.jgroups.subsystem.Attribute",
    "comment" : "It is a Move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getLocalName() : String from class org.jboss.as.clustering.jgroups.subsystem.Element to public getLocalName() : String from class org.infinispan.server.jgroups.subsystem.Attribute",
    "comment" : "It is a Move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private setProperty(protocol ProtocolConfiguration, config org.jgroups.conf.ProtocolConfiguration, name String, value String) : void from class org.jboss.as.clustering.jgroups.JChannelFactory to private setProperty(introspector Introspector, config org.jgroups.conf.ProtocolConfiguration, name String, value String) : void from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : "It is a Move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected performRuntime(context OperationContext, operation ModelNode, model ModelNode) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemRemove.OriginalSubsystemRemoveHandler to protected performRuntime(context OperationContext, operation ModelNode, model ModelNode) : void from class org.infinispan.server.jgroups.subsystem.StackRemoveHandler",
    "comment" : "This is a overriden method for both classes as both implement same class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testProtocolStackAddRemoveSequenceWithParameters() : void from class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase to public testProtocolStackAddRemoveSequenceWithParameters() : void from class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
    "comment" : "It is a move class or package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected performRuntime(context OperationContext, operation ModelNode, model ModelNode, verificationHandler ServiceVerificationHandler, newControllers List<ServiceController<?>>) : void from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd to protected performRuntime(context OperationContext, operation ModelNode, model ModelNode) : void from class org.infinispan.server.jgroups.subsystem.StackAddHandler",
    "comment" : "This is a overriden method for both classes as both implement same class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public registerChildren(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.jgroups.subsystem.SaslResourceDefinition to public registerChildren(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.ProtocolResourceDefinition",
    "comment" : "The method exist in the class in both revisions",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private writeRelay(writer XMLExtendedStreamWriter, relay ModelNode, element Element) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLWriter to private writeRelay(writer XMLExtendedStreamWriter, relay ModelNode) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLWriter",
    "comment" : "Move class or package",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private configureBindAddress(protocol ProtocolConfiguration, config org.jgroups.conf.ProtocolConfiguration, binding SocketBinding) : void from class org.jboss.as.clustering.jgroups.JChannelFactory to private configureBindAddress(introspector Introspector, config org.jgroups.conf.ProtocolConfiguration, binding SocketBinding) : void from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : "It is a Move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private configureServerSocket(protocol ProtocolConfiguration, config org.jgroups.conf.ProtocolConfiguration, property String, binding SocketBinding) : void from class org.jboss.as.clustering.jgroups.JChannelFactory to private configureServerSocket(introspector Introspector, config org.jgroups.conf.ProtocolConfiguration, property String, binding SocketBinding) : void from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : "It is a Move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testSubsystemReadWriteOperations() : void from class org.jboss.as.clustering.jgroups.subsystem.OperationsTestCase to public testSubsystemReadWriteOperations() : void from class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
    "comment" : "Seems it is a move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public createChannel(id String) : Channel from class org.jboss.as.clustering.jgroups.JChannelFactory to public createChannel(id String) : Channel from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : "It is a Move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public start(context StartContext) : void from class org.jboss.as.clustering.jgroups.subsystem.ChannelService to public start(context StartContext) : void from class org.infinispan.server.jgroups.spi.service.ChannelBuilder",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public stop() : void from class org.jboss.as.clustering.jgroups.TimerSchedulerAdapter to public stop(context StopContext) : void from class org.infinispan.server.commons.service.concurrent.CachedThreadPoolExecutorServiceBuilder",
    "comment" : "Matin: FP",
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testProtocolStackRemoveRemoveSequence() : void from class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase to public testProtocolStackRemoveRemoveSequence() : void from class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
    "comment" : "it is a move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testProtocolStackRemoveRollback() : void from class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase to public testProtocolStackRemoveRollback() : void from class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
    "comment" : "it is a move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private writeSasl(writer XMLExtendedStreamWriter, sasl ModelNode, element Element) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLWriter to private writeSasl(writer XMLExtendedStreamWriter, sasl ModelNode) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLWriter",
    "comment" : "Move Class or package",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public registerAttributes(resourceRegistration ManagementResourceRegistration) : void from class org.jboss.as.clustering.jgroups.subsystem.ProtocolResourceDefinition to public registerAttributes(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.ProtocolResourceDefinition",
    "comment" : "<p>Move class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public registerAttributes(resourceRegistration ManagementResourceRegistration) : void from class org.jboss.as.clustering.jgroups.subsystem.TransportResourceDefinition to public registerAttributes(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.ProtocolResourceDefinition",
    "comment" : "<p>The method existed in the class in the previous version</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected performRuntime(context OperationContext, operation ModelNode, model ModelNode, verificationHandler ServiceVerificationHandler, newControllers List<ServiceController<?>>) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemAdd to protected performRuntime(context OperationContext, operation ModelNode, model ModelNode) : void from class org.infinispan.server.jgroups.subsystem.ChannelAddHandler",
    "comment" : "Extends the same class so the method are in the same name and so similar",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testProtocolStackAddRemoveAddSequence() : void from class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase to public testProtocolStackAddRemoveAddSequence() : void from class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
    "comment" : "It is move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public isShutdown() : boolean from class org.jboss.as.clustering.jgroups.TimerSchedulerAdapter to public isShutdown() : boolean from class org.infinispan.server.commons.msc.DelegatingServiceContainer",
    "comment" : "Matin: FP",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testDescribeHandler() : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase to public testDescribeHandler() : void from class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : "Matin: FP",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected performRuntime(context OperationContext, operation ModelNode, model ModelNode) : void from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackRemove to protected performRuntime(context OperationContext, operation ModelNode, model ModelNode) : void from class org.infinispan.server.jgroups.subsystem.StackRemoveHandler",
    "comment" : "move class or package",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private createProtocol(protocolConfig ProtocolConfiguration) : ProtocolConfiguration from class org.jboss.as.clustering.jgroups.JChannelFactory to private createProtocol(stack ProtocolStackConfiguration, protocol ProtocolConfiguration) : ProtocolConfiguration from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : "<p>it is move class/package, but there is a change in the signature</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List<ModelNode>) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_1_1 to private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations Map<PathAddress,ModelNode>) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : "<p>It detects moving&nbsp;parseTransport() from multiple classes to&nbsp;JGroupsSubsystemXMLReader</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List<ModelNode>) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_1_2 to private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations Map<PathAddress,ModelNode>) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : "<p>It detects moving&nbsp;parseTransport() from multiple classes to&nbsp;JGroupsSubsystemXMLReader&nbsp;</p><p>Similar to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2844</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected getSubsystemXml() : String from class org.jboss.as.clustering.jgroups.subsystem.OperationTestCaseBase to protected getSubsystemXml() : String from class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : "seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testProtocolReadWriteOperation() : void from class org.jboss.as.clustering.jgroups.subsystem.OperationsTestCase to public testProtocolReadWriteOperation() : void from class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
    "comment" : "seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTransportReadWriteOperation() : void from class org.jboss.as.clustering.jgroups.subsystem.OperationsTestCase to public testTransportReadWriteOperation() : void from class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
    "comment" : "seems a move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setTopology(site String, rack String, machine String) : void from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Transport to public setTopology(site String, rack String, machine String) : TransportConfigurationBuilder from class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
    "comment" : "implement the same Interface",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testParseAndMarshalModel() : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase to public testParseAndMarshalModel() : void from class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : "Matin: FP",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private parseTransport(reader XMLExtendedStreamReader, stackAddress ModelNode, operations List<ModelNode>) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_1_0 to private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations Map<PathAddress,ModelNode>) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : "<p>It detects moving&nbsp;parseTransport() from multiple classes to&nbsp;JGroupsSubsystemXMLReader&nbsp;</p><p>Similar to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2844</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public registerChildren(resourceRegistration ManagementResourceRegistration) : void from class org.jboss.as.clustering.jgroups.subsystem.StackResourceDefinition to public registerChildren(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.StackResourceDefinition",
    "comment" : "Move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public testTransportReadWriteWithParameters() : void from class org.jboss.as.clustering.jgroups.subsystem.OperationsTestCase to public testTransportReadWriteWithParameters() : void from class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
    "comment" : "Move class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getProtocolStack() : List<org.jgroups.conf.ProtocolConfiguration> from class org.jboss.as.clustering.jgroups.JChannelFactory to public getProtocolStack() : List<org.jgroups.conf.ProtocolConfiguration> from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : "It is a move clas/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public data() : Collection<Object[]> from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase to public data() : Collection<Object[]> from class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public createDescribeOperation(address PathAddress) : ModelNode extracted from public testDescribeHandler() : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase & moved to class org.infinispan.server.commons.controller.Operations",
    "comment" : "<p>Extract and Move to the inner class</p><p>What is being done in the extracted method is different than in the original code. I think this should be FP. This also relates to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2841, since we did not accept it, this goes for FP.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package createProtocols(stack ProtocolStackConfiguration, multicastCapable boolean) : List<org.jgroups.conf.ProtocolConfiguration> extracted from public getProtocolStack() : List<org.jgroups.conf.ProtocolConfiguration> in class org.jboss.as.clustering.jgroups.JChannelFactory & moved to class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : "<p>Extract and Move to the inner class</p><p>Having the move class, this should be TP (although the move class has not been identified)</p><p>&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public pathElement(name String) : PathElement extracted from private parseRemoteSite(reader XMLExtendedStreamReader, relayAddress PathAddress, operations List<ModelNode>) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_7_0 & moved to class org.infinispan.server.jgroups.subsystem.ChannelResourceDefinition",
    "comment" : "<p>Extract and Move to the inner class</p><p>JGroupsSubsystemXMLReader_7_0 is detected to be renamed to&nbsp;JGroupsSubsystemXMLReader. pathElement() now appears in two new classes that delegate to the original PathElement#pathElement(), and those two are called instead of the original ones in JGroupsSubsystemXMLReader#parseRemoteSite. But clearly&nbsp;RemoteSiteResourceDefinition.pathElement(site) (in the new code) has the same logic as&nbsp;PathElement.pathElement(ModelKeys.REMOTE_SITE, site) (in the old code), so this is TP</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public pathElement(name String) : PathElement extracted from private parseProperty(reader XMLExtendedStreamReader, address PathAddress, operations List<ModelNode>) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_7_0 & moved to class org.infinispan.server.jgroups.subsystem.ForkResourceDefinition",
    "comment" : "<p>Extract and Move to the inner class</p><p>I don't see any use of pathElement&nbsp;in the parseProperty method in&nbsp;JGroupsSubsystemXMLReader (to which the&nbsp;JGroupsSubsystemXMLReader_7_0 is renamed)</p><p>&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private parseProtocolAttribute(reader XMLExtendedStreamReader, index int, operation ModelNode) : void extracted from private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List<ModelNode>) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_1_1 & moved to class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : "<p>Extract and Move to the inner class</p><p>This is TP if we accept the move method&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2844</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private parseProtocolElement(reader XMLExtendedStreamReader, address PathAddress, operations Map<PathAddress,ModelNode>) : void extracted from private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List<ModelNode>) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_1_1 & moved to class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : "<p>Extract and Move to the inner class</p><p>This is TP if we accept the move method as TP http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2844</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private require(reader XMLExtendedStreamReader, attribute Attribute) : String extracted from private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List<ModelNode>) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_1_1 & moved to class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : "<p>Extract and Move to the inner class</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private writeAttribute(writer XMLExtendedStreamWriter, model ModelNode, attribute AttributeDefinition) : void extracted from private writeRelay(writer XMLExtendedStreamWriter, relay ModelNode, element Element) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLWriter & moved to class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLWriter",
    "comment" : "Extract and Move to the inner class",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private writeAttribute(writer XMLExtendedStreamWriter, model ModelNode, attribute AttributeDefinition) : void extracted from private writeSasl(writer XMLExtendedStreamWriter, sasl ModelNode, element Element) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLWriter & moved to class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLWriter",
    "comment" : "Extract and Move to the inner class",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected buildKernelServices() : KernelServices extracted from public testSubsystemReadWriteOperations() : void in class org.jboss.as.clustering.jgroups.subsystem.OperationsTestCase & moved to class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : "<p>Extract and Move to the inner class</p><p>Similar to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2876</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected buildKernelServices() : KernelServices extracted from public testProtocolStackAddRemoveAddSequence() : void in class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase & moved to class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : "<p>Extract and Move to the inner class</p><p>Note also the move class.</p><p>This is similar to http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2876</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected buildKernelServices() : KernelServices extracted from public testTransportReadWriteOperation() : void in class org.jboss.as.clustering.jgroups.subsystem.OperationsTestCase & moved to class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : "<p>Extract and Move to the inner class</p><p>Similar to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2876</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected buildKernelServices() : KernelServices extracted from public testProtocolStackRemoveRemoveSequence() : void in class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase & moved to class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : "<p>Extract and Move to the inner class</p><p>Note also the move class.</p><p>This is similar to http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2876</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected buildKernelServices() : KernelServices extracted from public testTransportReadWriteWithParameters() : void in class org.jboss.as.clustering.jgroups.subsystem.OperationsTestCase & moved to class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : "<p>Extract and Move to the inner class</p><p>Similar to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2876</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected buildKernelServices() : KernelServices extracted from public testProtocolStackAddRemoveSequenceWithParameters() : void in class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase & moved to class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : "<p>Extract and Move to the inner class</p><p>(Note the move class as well)</p><p>This is similar to http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2876</p><p>&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected buildKernelServices() : KernelServices extracted from public testProtocolStackRemoveRollback() : void in class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase & moved to class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : "<p>Extract and Move to the inner class</p><p>Note also the move class</p><p>This is similar to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2876</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method protected buildKernelServices() : KernelServices extracted from public testProtocolReadWriteOperation() : void in class org.jboss.as.clustering.jgroups.subsystem.OperationsTestCase & moved to class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : "<p>Extract and Move to the superclass</p><p><span class='blob-code-inner'><span class='pl-c1'>super</span><span class='pl-k'>.</span>installInController(subsystemXml) used to do this:</span></p><p><span class='blob-code-inner'>https://github.com/wildfly/wildfly-core/commit/7331c7bd5dfa29540ff67b2c7c9b4585deef0ee6#diff-818a73e27c9ada5c4f27af373f62de8cL263</span></p><p>KernelServices installInController(AdditionalInitialization additionalInit, String subsystemXml) throws Exception {<br /> return createKernelServicesBuilder(additionalInit).setSubsystemXml(subsystemXml).build();<br /> }</p><p>And now what is being done in the extracted method is the same</p><p>======================================================================</p><p>EXTRACTED METHOD<br />protected KernelServices buildKernelServices() throws XMLStreamException, IOException, Exception {<br /> return createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT).setSubsystemXml(this.getSubsystemXml()).build();<br /> }</p><p>EXTRACTED CODE<br />String subsystemXml = getSubsystemXml() ;<br /> KernelServices servicesA = super.installInController(subsystemXml) ;</p><p>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private createKernelServicesBuilder() : KernelServicesBuilder extracted from public testDescribeHandler() : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase & moved to class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : "<p>Move And Rename Class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase moved and renamed to org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package pathElement(name String) : PathElement extracted from private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List<ModelNode>) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_1_1 & moved to class org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : "<p>Extract and Move to the inner class</p><p>If we accept&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2844 as TP, this can be TP</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private name : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Protocol to private name : String from class org.infinispan.server.jgroups.ForkChannelFactory.ForkProtocolStackConfiguration",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private name : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Protocol to private name : String from class org.infinispan.server.jgroups.subsystem.Attribute",
    "comment" : "it is a move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private name : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Protocol to private name : String from class org.infinispan.server.jgroups.subsystem.Element",
    "comment" : "the element is moved and the name were existed in the class",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private name : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.ProtocolStack to private name : String from class org.infinispan.server.jgroups.ForkChannelFactory.ForkProtocolStackConfiguration",
    "comment" : "Matin: FP",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private siteName : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Relay to private siteName : String from class org.infinispan.server.jgroups.subsystem.RelayConfigurationBuilder",
    "comment" : "<p>Similar to&nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private name : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.RemoteSite to private name : String from class org.infinispan.server.jgroups.ForkChannelFactory.ForkProtocolStackConfiguration",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private clusterRole : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Sasl to private clusterRole : String from class org.infinispan.server.jgroups.subsystem.SaslConfigurationBuilder",
    "comment" : "Move class or package",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private mech : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Sasl to private mech : String from class org.infinispan.server.jgroups.subsystem.SaslConfigurationBuilder",
    "comment" : "Move class or package",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private shared : boolean from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Transport to private shared : boolean from class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package CLUSTER_ROLE : SimpleAttributeDefinition from class org.jboss.as.clustering.jgroups.subsystem.SaslResourceDefinition to package CLUSTER_ROLE : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.SaslResourceDefinition",
    "comment" : "Move class or package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package ATTRIBUTES : AttributeDefinition[] from class org.jboss.as.clustering.jgroups.subsystem.RemoteSiteResourceDefinition to package ATTRIBUTES : AttributeDefinition[] from class org.infinispan.server.jgroups.subsystem.SaslResourceDefinition",
    "comment" : "Move class or package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package SECURITY_REALM : SimpleAttributeDefinition from class org.jboss.as.clustering.jgroups.subsystem.SaslResourceDefinition to package SECURITY_REALM : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.SaslResourceDefinition",
    "comment" : "Move class or package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package MECH : SimpleAttributeDefinition from class org.jboss.as.clustering.jgroups.subsystem.SaslResourceDefinition to package MECH : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.SaslResourceDefinition",
    "comment" : "Move class or package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private elements : Map<String,Element> from class org.jboss.as.clustering.jgroups.subsystem.Element to private elements : Map<String,Element> from class org.infinispan.server.jgroups.subsystem.Element",
    "comment" : "it is a move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private attributes : Map<String,Attribute> from class org.jboss.as.clustering.jgroups.subsystem.Attribute to private attributes : Map<String,Attribute> from class org.infinispan.server.jgroups.subsystem.Attribute",
    "comment" : "it is a move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package SITE : SimpleAttributeDefinition from class org.jboss.as.clustering.jgroups.subsystem.RelayResourceDefinition to package SITE : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.RelayResourceDefinition",
    "comment" : "it is a move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private map : Map<String,Map<String,String>> from class org.jboss.as.clustering.jgroups.subsystem.ProtocolDefaultsService.Defaults to private map : Map<String,Map<String,String>> from class org.infinispan.server.jgroups.subsystem.ProtocolDefaultsBuilder",
    "comment" : "<p>See&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private name : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Protocol to private name : String from class org.infinispan.server.jgroups.subsystem.ThreadPoolResourceDefinition",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private siteName : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Relay to private siteName : String from class org.infinispan.server.jgroups.subsystem.RemoteSiteConfigurationBuilder",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package addStackOpWithParams : ModelNode from class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase to package addStackOpWithParams : ModelNode from class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private channel : Channel from class org.jboss.as.clustering.jgroups.subsystem.ChannelService to private channel : Channel from class org.infinispan.server.jgroups.spi.service.ChannelBuilder",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private name : String from class org.jboss.as.clustering.jgroups.subsystem.Attribute to private name : String from class org.infinispan.server.jgroups.ForkChannelFactory.ForkProtocolStackConfiguration",
    "comment" : "The atrribute is existed in the original class in both revision",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private name : String from class org.jboss.as.clustering.jgroups.subsystem.Element to private name : String from class org.infinispan.server.jgroups.ForkChannelFactory.ForkProtocolStackConfiguration",
    "comment" : "The atrribute is existed in the original class in both revision",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package removeStackOp : ModelNode from class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase to package removeStackOp : ModelNode from class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private configuration : ProtocolStackConfiguration from class org.jboss.as.clustering.jgroups.JChannelFactory to private configuration : ProtocolStackConfiguration from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : "it is the same class. it just moved",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private environment : InjectedValue<ServerEnvironment> from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.ProtocolStack to private environment : InjectedValue<ServerEnvironment> from class org.infinispan.server.jgroups.subsystem.JChannelFactoryBuilder",
    "comment" : "<p>The original class is deleted, the field is added to the target class (which is new), both classes used to implement the same interface, yet I could not find a relationship between the two classes. &nbsp;</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.ProtocolConfiguration moved to org.infinispan.server.jgroups.spi.ProtocolConfiguration",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.ProtocolStackConfiguration moved to org.infinispan.server.jgroups.spi.ProtocolStackConfiguration",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.subsystem.SaslResourceDefinition moved to org.infinispan.server.jgroups.subsystem.SaslResourceDefinition",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.TransportConfiguration moved to org.infinispan.server.jgroups.spi.TransportConfiguration",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.ChannelFactory moved to org.infinispan.server.jgroups.ChannelFactory",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.subsystem.RelayResourceDefinition moved to org.infinispan.server.jgroups.subsystem.RelayResourceDefinition",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.subsystem.ExportNativeConfiguration moved to org.infinispan.server.jgroups.subsystem.ExportNativeConfiguration",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase moved to org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.subsystem.ModelKeys moved to org.infinispan.server.jgroups.subsystem.ModelKeys",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.RemoteSiteConfiguration moved to org.infinispan.server.jgroups.spi.RemoteSiteConfiguration",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.RelayConfiguration moved to org.infinispan.server.jgroups.spi.RelayConfiguration",
    "comment" : "new---",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.subsystem.OperationTestCaseBase moved to org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.JGroupsLogger moved to org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase moved and renamed to org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.subsystem.OperationsTestCase moved to org.infinispan.server.jgroups.subsystem.OperationsTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getSubsystemAddress() : PathAddress extracted from protected getProtocolStackAddress(stackName String) : PathAddress in class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Changes cannot be justified"
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable servicesA : KernelServices to services : KernelServices in method public testProtocolStackAddRemoveAddSequence() : void from class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable compositeOp : ModelNode to operation : ModelNode in method public testProtocolStackRemoveRollback() : void from class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable servicesA : KernelServices to services : KernelServices in method public testProtocolStackAddRemoveSequenceWithParameters() : void from class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable servicesA : KernelServices to services : KernelServices in method public testProtocolStackRemoveRollback() : void from class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable compositeOp : ModelNode to operation : ModelNode in method public testProtocolStackRemoveRemoveSequence() : void from class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable servicesA : KernelServices to services : KernelServices in method public testProtocolStackRemoveRemoveSequence() : void from class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable compositeOp : ModelNode to operation : ModelNode in method public testProtocolStackAddRemoveAddSequence() : void from class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable servicesA : KernelServices to services : KernelServices in method public testTransportReadWriteOperation() : void from class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable servicesA : KernelServices to services : KernelServices in method public testProtocolReadWriteOperation() : void from class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable servicesA : KernelServices to services : KernelServices in method public testSubsystemReadWriteOperations() : void from class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable servicesA : KernelServices to services : KernelServices in method public testProtocolPropertyReadWriteOperation() : void from class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable servicesA : KernelServices to services : KernelServices in method public testTransportReadWriteWithParameters() : void from class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable servicesA : KernelServices to services : KernelServices in method public testTransportPropertyReadWriteOperation() : void from class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable servicesA : KernelServices to services : KernelServices in method public testParseAndMarshalModel() : void from class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable describeOp : ModelNode to operation : ModelNode in method public testDescribeHandler() : void from class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter operations : int to expectedOperationCount : int in method public SubsystemParsingTestCase(schema JGroupsSchema, expectedOperationCount int) from class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter format : String to msg : String in method public error(msg String, args Object...) : void from class org.infinispan.server.jgroups.LogFactory.LogAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.subsystem.ProtocolResourceDefinition moved to org.infinispan.server.jgroups.subsystem.ProtocolResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.subsystem.TransportResourceDefinition moved to org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter resourceRegistration : ManagementResourceRegistration to registration : ManagementResourceRegistration in method public registerAttributes(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter resourceRegistration : ManagementResourceRegistration to registration : ManagementResourceRegistration in method public registerAttributes(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.ProtocolResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.SaslConfiguration moved to org.infinispan.server.jgroups.spi.SaslConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute PROTOCOL_ATTRIBUTES : AttributeDefinition[] to ATTRIBUTES : AttributeDefinition[] in class org.infinispan.server.jgroups.subsystem.ProtocolResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute TRANSPORT_ATTRIBUTES : AttributeDefinition[] to ATTRIBUTES : AttributeDefinition[] in class org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute operations : int to expectedOperationCount : int in class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemRemove.OriginalSubsystemRemoveHandler moved and renamed to org.infinispan.server.jgroups.subsystem.JGroupsSubsystemAddHandler",
    "comment" : "<p>Methods from class JGroupsSubsystemRemove.OriginalSubsystemRemoveHandler<br /><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-en'>performRuntime</span>(<span class='pl-smi'>OperationContext</span> <span class='pl-v'>context</span>, <span class='pl-smi'>ModelNode</span> <span class='pl-v'>operation</span>, <span class='pl-smi'>ModelNode</span> <span class='pl-v'>model</span>)</span><br /><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-en'>removeRuntimeServices</span>(<span class='pl-smi'>OperationContext</span> <span class='pl-v'>context</span>, <span class='pl-smi'>ModelNode</span> <span class='pl-v'>operation</span>, <span class='pl-smi'>ModelNode</span> <span class='pl-v'>model</span>)<br />appear in class JGroupsSubsystemAddHandler, where method<br /></span><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-en'>installRuntimeServices</span>(<span class='pl-smi'>OperationContext</span> <span class='pl-v'>context</span>, <span class='pl-smi'>ModelNode</span> <span class='pl-v'>operation</span>, <span class='pl-smi'>ModelNode</span> <span class='pl-v'>model</span>)<br />has been extracted from <span class='pl-en'>performRuntime</span>()<br />Class <span class='pl-en'>JGroupsSubsystemRemoveHandler</span> contains method<br /><span class='pl-en'>performRemove</span>(<span class='pl-k'>final</span> <span class='pl-smi'>OperationContext</span> <span class='pl-v'>context</span>, <span class='pl-k'>final</span> <span class='pl-smi'>ModelNode</span> <span class='pl-v'>operation</span>, <span class='pl-k'>final</span> <span class='pl-smi'>ModelNode</span> <span class='pl-v'>model</span>)<br />was moved from class <span class='pl-en'>JGroupsSubsystemRemove</span>, and methods<br />performRuntime() and <span class='pl-en'>recoverServices</span>() delegate to class <span class='pl-smi'>JGroupsSubsystemAddHandler</span><br />calling removeRuntimeServices() and installRuntimeServices() respectively.<br /></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type ATTRIBUTES : SimpleAttributeDefinition[] to ATTRIBUTES : AttributeDefinition[] in class org.infinispan.server.jgroups.subsystem.SaslResourceDefinition",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getSubsystemAddress() : PathAddress extracted from protected getSubsystemReadOperation(name String) : ModelNode in class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Changes cannot be justified"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getSubsystemAddress() : PathAddress extracted from protected getSubsystemWriteOperation(name String, value String) : ModelNode in class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Changes cannot be justified"
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ChannelFactory to Channel in method public getChannel() : Channel from class org.infinispan.server.jgroups.spi.RemoteSiteConfiguration",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter protocolType : String to type : String in method protected getProtocolAddress(stackName String, type String) : PathAddress from class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter protocolType : String to protocol : String in method protected getTransportAddOperation(stackName String, protocol String) : ModelNode from class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter protocolType : String to type : String in method protected getTransportRemoveOperation(stackName String, type String) : ModelNode from class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter protocolType : String to type : String in method protected getProtocolAddOperation(stackName String, type String) : ModelNode from class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter protocolType : String to type : String in method protected getProtocolRemoveOperation(stackName String, type String) : ModelNode from class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter protocolType : String to type : String in method protected getProtocolPropertyAddress(stackName String, type String, propertyName String) : PathAddress from class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter resourceRegistration : ManagementResourceRegistration to registration : ManagementResourceRegistration in method public registerChildren(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter resourceRegistration : ManagementResourceRegistration to registration : ManagementResourceRegistration in method public registerChildren(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.ProtocolResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package ATTRIBUTES : AttributeDefinition[] from class org.jboss.as.clustering.jgroups.subsystem.RemoteSiteResourceDefinition to package ATTRIBUTES : AttributeDefinition[] from class org.infinispan.server.jgroups.subsystem.RelayResourceDefinition",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package ATTRIBUTES : AttributeDefinition[] from class org.jboss.as.clustering.jgroups.subsystem.RemoteSiteResourceDefinition to package ATTRIBUTES : AttributeDefinition[] from class org.infinispan.server.jgroups.subsystem.ChannelResourceDefinition",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package ATTRIBUTES : AttributeDefinition[] from class org.jboss.as.clustering.jgroups.subsystem.RemoteSiteResourceDefinition to package ATTRIBUTES : AttributeDefinition[] from class org.infinispan.server.jgroups.subsystem.RemoteSiteResourceDefinition",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute package ATTRIBUTES : AttributeDefinition[] from class org.jboss.as.clustering.jgroups.subsystem.RemoteSiteResourceDefinition to package ATTRIBUTES : AttributeDefinition[] from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemResourceDefinition",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private require(reader XMLExtendedStreamReader, attribute Attribute) : String extracted from private parseRemoteSite(reader XMLExtendedStreamReader, relayAddress PathAddress, operations List<ModelNode>) : void in class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private require(reader XMLExtendedStreamReader, attribute Attribute) : String extracted from public readElement(reader XMLExtendedStreamReader, operations List<ModelNode>) : void in class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private require(reader XMLExtendedStreamReader, attribute Attribute) : String extracted from private parseProperty(reader XMLExtendedStreamReader, address PathAddress, operations List<ModelNode>) : void in class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseStack(reader XMLExtendedStreamReader, subsystemAddress PathAddress, operations Map<PathAddress,ModelNode>) : void extracted from private parseProtocol(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List<ModelNode>) : void in class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : "<p><small>In the target class,&nbsp;parseProtocol&nbsp;does not call&nbsp;parseStack&nbsp;so this should be FP</small></p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private buildKernelServices(xml String) : KernelServices extracted from public testParseAndMarshalModel() : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase & moved to class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : "<p>Move And Rename Class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase moved and renamed to org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private buildKernelServices() : KernelServices extracted from public testParseAndMarshalModel() : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase & moved to class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : "<p>Move And Rename Class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase moved and renamed to org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private buildKernelServices() : KernelServices extracted from public testDescribeHandler() : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase & moved to class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : "<p>Move And Rename Class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase moved and renamed to org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.JChannelFactory moved to org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.subsystem.Attribute moved to org.infinispan.server.jgroups.subsystem.Attribute",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface org.infinispan.server.jgroups.spi.ChannelFactory from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-smi'>org.<span class='x x-first x-last'>jboss.as.clustering</span>.jgroups</span></span>.ChannelFactory is moved to org.infinispan.server.jgroups.spi.ChannelFactory</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method package createProtocols(stack ProtocolStackConfiguration, multicastCapable boolean) : List<org.jgroups.conf.ProtocolConfiguration> extracted from public getProtocolStack() : List<org.jgroups.conf.ProtocolConfiguration> in class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : "<p>Move Class org.jboss.as.clustering.jgroups.JChannelFactory moved to org.infinispan.server.jgroups.JChannelFactory</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Lots of added statements"
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.subsystem.Element moved to org.infinispan.server.jgroups.subsystem.Element",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private setPropertyNoOverride(protocol ProtocolConfiguration, config ProtocolConfiguration, name String, value String) : void renamed to private setSocketBindingProperty(introspector Introspector, config ProtocolConfiguration, name String, value String) : void in class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.subsystem.JGroupsExtension moved to org.infinispan.server.jgroups.subsystem.JGroupsExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type protocol : ProtocolConfiguration to introspector : Introspector in method private configureMulticastSocket(introspector Introspector, config ProtocolConfiguration, addressProperty String, portProperty String, binding SocketBinding) : void from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type protocol : ProtocolConfiguration to introspector : Introspector in method private setSocketBindingProperty(introspector Introspector, config ProtocolConfiguration, name String, value String) : void from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type protocol : ProtocolConfiguration to introspector : Introspector in method private setProperty(introspector Introspector, config ProtocolConfiguration, name String, value String) : void from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter protocol : ProtocolConfiguration to introspector : Introspector in method private setSocketBindingProperty(introspector Introspector, config ProtocolConfiguration, name String, value String) : void from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter protocol : ProtocolConfiguration to introspector : Introspector in method private setProperty(introspector Introspector, config ProtocolConfiguration, name String, value String) : void from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter protocol : ProtocolConfiguration to introspector : Introspector in method private configureMulticastSocket(introspector Introspector, config ProtocolConfiguration, addressProperty String, portProperty String, binding SocketBinding) : void from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable propertyValue : String to properties : Map<String,String> in method private setSocketBindingProperty(introspector Introspector, config ProtocolConfiguration, name String, value String) : void from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type propertyValue : String to properties : Map<String,String> in method private setSocketBindingProperty(introspector Introspector, config ProtocolConfiguration, name String, value String) : void from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable stack : ProtocolStack in method public createChannel(id String) : Channel from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getProtocolPropertyAddOperation(stackName String, protocolName String, propertyName String, propertyValue String) : ModelNode extracted from protected getTransportAddOperationWithProperties(stackName String, protocolType String) : ModelNode in class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Changes cannot be justified"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method protected getProtocolPropertyAddOperation(stackName String, protocolName String, propertyName String, propertyValue String) : ModelNode extracted from protected getProtocolAddOperationWithProperties(stackName String, protocolType String) : ModelNode in class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Changes cannot be justified"
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter protocolType : String to type : String in method protected getProtocolAddOperationWithProperties(stackName String, type String) : ModelNode from class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter protocolType : String to type : String in method protected getTransportAddOperationWithProperties(stackName String, type String) : ModelNode from class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable config : ProtocolConfiguration to protocol : ProtocolConfiguration in method public getProtocolStack() : List<org.jgroups.conf.ProtocolConfiguration> from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable configs : List<org.jgroups.conf.ProtocolConfiguration> to stack : List<org.jgroups.conf.ProtocolConfiguration> in method public getProtocolStack() : List<org.jgroups.conf.ProtocolConfiguration> from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable protocols : List<ProtocolConfiguration> in method package createProtocols(stack ProtocolStackConfiguration, multicastCapable boolean) : List<org.jgroups.conf.ProtocolConfiguration> from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable configs : List<org.jgroups.conf.ProtocolConfiguration> to result : List<org.jgroups.conf.ProtocolConfiguration> in method package createProtocols(stack ProtocolStackConfiguration, multicastCapable boolean) : List<org.jgroups.conf.ProtocolConfiguration> from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Push Down Method",
    "description" : "Push Down Method package getProtocolStackConfiguration() : ProtocolStackConfiguration from class org.jboss.as.clustering.jgroups.ChannelFactory to package getProtocolStackConfiguration() : ProtocolStackConfiguration from class org.infinispan.server.jgroups.spi.ChannelFactory",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private writeOptional(writer XMLExtendedStreamWriter, attribute Attribute, model ModelNode, key String) : void inlined to public writeContent(writer XMLExtendedStreamWriter, context SubsystemMarshallingContext) : void in class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLWriter",
    "comment" : "<p>Move Class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLWriter moved to org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLWriter</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Changes are not justifiable. Mappings are also inaccurate"
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getProperties() : Map<String,String> from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Protocol to public getProperties() : Map<String,String> from class org.infinispan.server.jgroups.subsystem.AbstractProtocolConfigurationBuilder",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public notFound(resource String) : String from class org.jboss.as.clustering.jgroups.JGroupsMessages to public notFound(resource String) : String from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : "<p>abstract method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public duplicateNodeName(name String) : IllegalStateException from class org.jboss.as.clustering.jgroups.JGroupsMessages to public duplicateNodeName(name String) : IllegalStateException from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : "<p>abstract method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public protocolNotDefined(relativePath String) : OperationFailedException from class org.jboss.as.clustering.jgroups.JGroupsMessages to public protocolNotDefined(relativePath String) : OperationFailedException from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : "<p>abstract method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public protocolAlreadyDefined(relativePath String) : OperationFailedException from class org.jboss.as.clustering.jgroups.JGroupsMessages to public protocolAlreadyDefined(relativePath String) : OperationFailedException from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : "<p>abstract method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Transport moved and renamed to org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public transportNotDefined(stackName String) : OperationFailedException from class org.jboss.as.clustering.jgroups.JGroupsMessages to public transportNotDefined(stackName String) : OperationFailedException from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : "<p>abstract method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public unauthorizedNodeJoin(nodeName String) : SecurityException from class org.jboss.as.clustering.jgroups.JGroupsMessages to public unauthorizedNodeJoin(nodeName String) : SecurityException from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : "<p>abstract method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public parserFailure(url URL) : String from class org.jboss.as.clustering.jgroups.JGroupsMessages to public parserFailure(url URL) : String from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : "<p>abstract method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public protocolListNotDefined(stackName String) : OperationFailedException from class org.jboss.as.clustering.jgroups.JGroupsMessages to public protocolListNotDefined(stackName String) : OperationFailedException from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : "<p>abstract method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private require(reader XMLExtendedStreamReader, attribute Attribute) : String extracted from private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List<ModelNode>) : void in class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public pathElement(name String) : PathElement extracted from private parseRelay(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List<ModelNode>) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_1_2 & moved to class org.infinispan.server.jgroups.subsystem.ChannelResourceDefinition",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLWriter moved to org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private parseProtocolAttribute(reader XMLExtendedStreamReader, index int, operation ModelNode) : void extracted from private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List<ModelNode>) : void in class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : "<p>Refdiff says the same</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public readElement(reader XMLExtendedStreamReader, operations List<ModelNode>) : void renamed to private parseStacks(reader XMLExtendedStreamReader, address PathAddress, operations Map<PathAddress,ModelNode>) : void in class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : "<p>RefDiff also marks it FP</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public readElement(reader XMLExtendedStreamReader, operations List<ModelNode>) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_1_2 to private parseChannels(reader XMLExtendedStreamReader, address PathAddress, operations Map<PathAddress,ModelNode>) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected performRuntime(context OperationContext, operation ModelNode, model ModelNode) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemRemove.OriginalSubsystemRemoveHandler to protected performRuntime(context OperationContext, operation ModelNode, model ModelNode) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemRemoveHandler",
    "comment" : "<p><a href='2822'>similar to this.</a></p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public propertyNotDefined(propertyName String, protocolRelativePath String) : OperationFailedException from class org.jboss.as.clustering.jgroups.JGroupsMessages to public propertyNotDefined(propertyName String, protocolRelativePath String) : OperationFailedException from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : "<p>abstract method</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package pathElement(name String) : PathElement extracted from private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List<ModelNode>) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_7_0 & moved to class org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : "<p>&nbsp;JGroupsSubsystemXMLReader_7_0 is renamed to&nbsp;JGroupsSubsystemXMLReader</p><p>&nbsp;pathElement extracts (<code>P<span class='pl-smi'>athElement</span><span class='pl-k'>.</span>pathElement(<span class='pl-smi'>ModelKeys</span><span class='pl-c1'><span class='pl-k'>.</span>TRANSPORT</span>, <span class='pl-smi'>ModelKeys</span><span class='pl-c1'><span class='pl-k'>.</span>TRANSPORT_NAME</span>)&nbsp;</code>the&nbsp;<a href='https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095#diff-87ed7c6a8ad1299318fe68decd5ba062L159'>expression<br /></a>and this method is moved into&nbsp;TransportResourceDefinition&nbsp;<a href='https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095#diff-22813c5853cccdfda4c9a4a77d31793aR62'>mthd</a>.</p><p>&nbsp;</p><p>&nbsp;</p>",
    "validation" : "TP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public registerAttributes(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.jgroups.subsystem.RemoteSiteResourceDefinition to public registerAttributes(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.RemoteSiteResourceDefinition",
    "comment" : "<p>I think this in reality is like a Move and Enrich class.</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Sasl moved and renamed to org.infinispan.server.jgroups.subsystem.SaslConfigurationBuilder",
    "comment" : "<p>The moved and renamed class has many extra functionalities</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private buildKernelServices(xml String) : KernelServices extracted from public testParseAndMarshalModel() : void in class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private parseRelay(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List<ModelNode>) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_1_2 to private parseChannel(reader XMLExtendedStreamReader, subsystemAddress PathAddress, operations Map<PathAddress,ModelNode>) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.TopologyAddressGenerator moved to org.infinispan.server.jgroups.TopologyAddressGenerator",
    "comment" : "null",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.jboss.as.clustering.jgroups.subsystem.AddStepHandler moved and renamed to org.infinispan.server.commons.controller.ReloadRequiredAddStepHandler",
    "comment" : "<p>Evidence of this refactoring can be found in SaslResourceDefinition<br />https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095#diff-5ce8dfeabdadf5f705aebeb31bfe6e0d461f249a2bf0e6627520cbcc747c4ee7R85<br />and RelayResourceDefinition<br />https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095#diff-763ff6ea23dca645c758bb71c2ec4fd92e94b69c5bde9d6cf1899c8957e875b4R64</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.subsystem.RemoteSiteResourceDefinition moved to org.infinispan.server.jgroups.subsystem.RemoteSiteResourceDefinition",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public fatal(msg String, args Object...) : void from class org.infinispan.server.jgroups.LogFactory.LogAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public error(msg String, args Object...) : void from class org.infinispan.server.jgroups.LogFactory.LogAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public warn(msg String, args Object...) : void from class org.infinispan.server.jgroups.LogFactory.LogAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public info(msg String, args Object...) : void from class org.infinispan.server.jgroups.LogFactory.LogAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public debug(msg String, args Object...) : void from class org.infinispan.server.jgroups.LogFactory.LogAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public trace(msg String, args Object...) : void from class org.infinispan.server.jgroups.LogFactory.LogAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method protected performRuntime(context OperationContext, operation ModelNode, model ModelNode) : void from class org.infinispan.server.jgroups.subsystem.StackRemoveHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method protected recoverServices(context OperationContext, operation ModelNode, model ModelNode) : void from class org.infinispan.server.jgroups.subsystem.StackRemoveHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @BMRule(name = \"Test remove rollback operation\", targetClass = \"org.jboss.as.clustering.jgroups.subsystem.ProtocolStackRemove\", targetMethod = \"performRuntime\", targetLocation = \"AT EXIT\", action = \"$1.setRollbackOnly()\") to @BMRule(name = \"Test remove rollback operation\", targetClass = \"org.jboss.as.clustering.jgroups.subsystem.StackRemoveHandler\", targetMethod = \"performRuntime\", targetLocation = \"AT EXIT\", action = \"traceln(\\\"Injecting rollback fault via Byteman\\\");$1.setRollbackOnly()\") in method public testProtocolStackRemoveRollback() : void from class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Message(id = 10260, value = \"Activating JGroups subsystem.\") to @Message(id = 1, value = \"Activating JGroups subsystem.\") in method public activatingSubsystem() : void from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Message(id = 10261, value = \"Setting %s.%s=%d\") to @Message(id = 2, value = \"Setting %s.%s=%d\") in method public setProtocolPropertyValue(protocol String, property String, value Object) : void from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Message(id = 10262, value = \"Failed to set non-existent %s.%s=%d\") to @Message(id = 3, value = \"Failed to set non-existent %s.%s=%d\") in method public nonExistentProtocolPropertyValue(cause Throwable, protocolName String, propertyName String, propertyValue Object) : void from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Message(id = 10263, value = \"Could not set %s.%s and %s.%s, %s socket binding does not specify a multicast socket\") to @Message(id = 4, value = \"Could not set %s.%s and %s.%s, %s socket binding does not specify a multicast socket\") in method public couldNotSetAddressAndPortNoMulticastSocket(cause Throwable, protocolName String, addressProperty String, protocolNameAgain String, portProperty String, bindingName String) : void from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Message(id = 10264, value = \"Error accessing original value for property %s of protocol %s\") to @Message(id = 5, value = \"Error accessing original value for property %s of protocol %s\") in method public unableToAccessProtocolPropertyValue(cause Throwable, propertyName String, protocolName String) : void from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Message(id = 10265, value = \"property %s for protocol %s attempting to override socket binding value %s : property value %s will be ignored\") to @Message(id = 6, value = \"property %s for protocol %s attempting to override socket binding value %s : property value %s will be ignored\") in method public unableToOverrideSocketBindingValue(propertyName String, protocolName String, bindingName String, propertyValue Object) : void from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Deprecated in attribute package ADD_PROTOCOL : String from class org.infinispan.server.jgroups.subsystem.ModelKeys",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Deprecated in attribute package REMOVE_PROTOCOL : String from class org.infinispan.server.jgroups.subsystem.ModelKeys",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @Ignore in class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Class Annotation",
    "description" : "Modify Class Annotation @MessageLogger(projectCode = \"JBAS\") to @MessageLogger(projectCode = \"ISPNSRVJG\", length = 4) in class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Annotation",
    "description" : "Remove Class Annotation @Ignore in class org.jboss.as.clustering.jgroups.subsystem.OperationsTestCase",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Annotation",
    "description" : "Remove Parameter Annotation @SuppressWarnings(\"rawtypes\") in parameter clazz : Class in method public getLog(clazz Class) : Log from class org.jboss.as.clustering.jgroups.LogFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Deprecated in enum constant THREAD_FACTORY(ModelKeys.THREAD_FACTORY) from class org.infinispan.server.jgroups.subsystem.Attribute",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Deprecated in enum constant OOB_EXECUTOR(ModelKeys.OOB_EXECUTOR) from class org.infinispan.server.jgroups.subsystem.Attribute",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Deprecated in enum constant DEFAULT_STACK(ModelKeys.DEFAULT_STACK) from class org.infinispan.server.jgroups.subsystem.Attribute",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Deprecated in enum constant TIMER_EXECUTOR(ModelKeys.TIMER_EXECUTOR) from class org.infinispan.server.jgroups.subsystem.Attribute",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Deprecated in enum constant DEFAULT_EXECUTOR(ModelKeys.DEFAULT_EXECUTOR) from class org.infinispan.server.jgroups.subsystem.Attribute",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.ProtocolStack moved and renamed to org.infinispan.server.jgroups.subsystem.JChannelFactoryBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type relay : RelayConfiguration to relay : ValueDependency<RelayConfiguration> in class org.infinispan.server.jgroups.subsystem.JChannelFactoryBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type protocols : List<ProtocolConfiguration> to protocols : List<ValueDependency<ProtocolConfiguration>> in class org.infinispan.server.jgroups.subsystem.JChannelFactoryBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type transport : TransportConfiguration to transport : ValueDependency<TransportConfiguration> in class org.infinispan.server.jgroups.subsystem.JChannelFactoryBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type sasl : SaslConfiguration to sasl : ValueDependency<SaslConfiguration> in class org.infinispan.server.jgroups.subsystem.JChannelFactoryBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getEnvironment() : ServerEnvironment renamed to public getNodeName() : String in class org.infinispan.server.jgroups.subsystem.JChannelFactoryBuilder",
    "comment" : "<p>This is backed from the method rename in interface ProtocolStackConfiguration<br />https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095#diff-8a733acddae94790fca6e4d689b21c5de6167cc03ed0c24cba7487d75b92d911R43</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ServerEnvironment to String in method public getNodeName() : String from class org.infinispan.server.jgroups.subsystem.JChannelFactoryBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to TransportConfigurationBuilder in method public setShared(shared boolean) : TransportConfigurationBuilder from class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to TransportConfigurationBuilder in method public setTopology(site String, rack String, machine String) : TransportConfigurationBuilder from class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type diagnosticsSocketBinding : InjectedValue<SocketBinding> to diagnosticsSocketBinding : ValueDependency<SocketBinding> in class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter stackName : String in method public TransportConfigurationBuilder(stackName String, name String) from class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Deprecated in attribute package THREAD_FACTORY : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Deprecated in attribute package DEFAULT_EXECUTOR : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Deprecated in attribute package OOB_EXECUTOR : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Deprecated in attribute package TIMER_EXECUTOR : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemRootResource moved and renamed to org.infinispan.server.jgroups.subsystem.JGroupsSubsystemResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter resourceRegistration : ManagementResourceRegistration to registration : ManagementResourceRegistration in method public registerOperations(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter resourceRegistration : ManagementResourceRegistration to registration : ManagementResourceRegistration in method public registerAttributes(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter resourceRegistration : ManagementResourceRegistration to registration : ManagementResourceRegistration in method public registerChildren(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.infinispan.server.jgroups.subsystem.AbstractProtocolConfigurationBuilder from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Transport",
    "comment" : "<p>possible Move And Rename Class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Protocol moved and renamed to org.infinispan.server.jgroups.subsystem.AbstractProtocolConfigurationBuilder</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.infinispan.server.jgroups.subsystem.AbstractProtocolConfigurationBuilder from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Sasl",
    "comment" : "<p>possible Move And Rename Class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Protocol moved and renamed to org.infinispan.server.jgroups.subsystem.AbstractProtocolConfigurationBuilder</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Deprecated in attribute package TYPE : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.ProtocolResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type PROPERTIES : SimpleListAttributeDefinition to PROPERTIES : SimpleMapAttributeDefinition in class org.infinispan.server.jgroups.subsystem.ProtocolResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getEnvironment() : ServerEnvironment renamed to public getNodeName() : String in class org.infinispan.server.jgroups.spi.ProtocolStackConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type ServerEnvironment to String in method public getNodeName() : String from class org.infinispan.server.jgroups.spi.ProtocolStackConfiguration",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private buildKernelServices() : KernelServices extracted from public testDescribeHandler() : void in class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Method invocation -setSubsystem()- has been removed"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private buildKernelServices() : KernelServices extracted from public testParseAndMarshalModel() : void in class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Method invocation -setBootOperations()- has been removed"
    }
  }, {
    "type" : "Change Thrown Exception Type",
    "description" : "Change Thrown Exception Type StartException to IllegalStateException in method private load(resource String) : ProtocolStackConfigurator from class org.infinispan.server.jgroups.subsystem.ProtocolDefaultsBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type StartException in method private find(resource String, loaders ClassLoader...) : URL from class org.jboss.as.clustering.jgroups.subsystem.ProtocolDefaultsService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type OperationFailedException in method protected performRuntime(context OperationContext, operation ModelNode, model ModelNode) : void from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackRemove",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to package in method package ProtocolResourceDefinition() from class org.infinispan.server.jgroups.subsystem.ProtocolResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier protected to package in method package removeRuntimeServices(context OperationContext, operation ModelNode, model ModelNode) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemAddHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public TransportConfigurationBuilder(stackName String, name String) from class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public setShared(shared boolean) : TransportConfigurationBuilder from class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter element : Element in method private writeRelay(writer XMLExtendedStreamWriter, relay ModelNode, element Element) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter element : Element in method private writeSasl(writer XMLExtendedStreamWriter, sasl ModelNode, element Element) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type attr : SimpleAttributeDefinition to attr : AttributeDefinition in method private writeSasl(writer XMLExtendedStreamWriter, sasl ModelNode) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private writeProtocol(writer XMLExtendedStreamWriter, protocol ModelNode, element Element) : void renamed to private writeTransport(writer XMLExtendedStreamWriter, property Property) : void in class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private writeThreadPoolElements(element Element, pool ThreadPoolResourceDefinition, writer XMLExtendedStreamWriter, transport ModelNode) : void extracted from private writeProtocol(writer XMLExtendedStreamWriter, protocol ModelNode, element Element) : void in class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Lots of added statements -writeAttribute-"
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Message(id = 10270, value = \"Failed to parse %s\") to @Message(id = 7, value = \"Failed to parse %s\") in method public parserFailure(url URL) : String from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Message(id = 10274, value = \"Protocol list for stack %s is not defined. Please specify both a transport and protocol list, either as optional parameters to add() or via batching.\") to @Message(id = 11, value = \"Protocol list for stack %s is not defined. Please specify both a transport and protocol list, either as optional parameters to add() or via batching.\") in method public protocolListNotDefined(stackName String) : OperationFailedException from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Message(id = 10276, value = \"Protocol with relative path %s is not defined.\") to @Message(id = 13, value = \"Protocol with relative path %s is not defined.\") in method public protocolNotDefined(relativePath String) : OperationFailedException from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Message(id = 10275, value = \"Protocol with relative path %s is already defined.\") to @Message(id = 12, value = \"Protocol with relative path %s is already defined.\") in method public protocolAlreadyDefined(relativePath String) : OperationFailedException from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Message(id = 10272, value = \"A node named %s already exists in this cluster.  Perhaps there is already a server running on this host?  If so, restart this server with a unique node name, via -Djboss.node.name=<node-name>\") to @Message(id = 9, value = \"A node named %s already exists in this cluster. Perhaps there is already a server running on this host? If so, restart this server with a unique node name, via -Djboss.node.name=<node-name>\") in method public duplicateNodeName(name String) : IllegalStateException from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Message(id = 10271, value = \"Failed to locate %s\") to @Message(id = 8, value = \"Failed to locate %s\") in method public notFound(resource String) : String from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Message(id = 10273, value = \"Transport for stack %s is not defined. Please specify both a transport and protocol list, either as optional parameters to add() or via batching.\") to @Message(id = 10, value = \"Transport for stack %s is not defined. Please specify both a transport and protocol list, either as optional parameters to add() or via batching.\") in method public transportNotDefined(stackName String) : OperationFailedException from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Message(id = 10277, value = \"Property %s for protocol with relative path %s is not defined. \") to @Message(id = 14, value = \"Property %s for protocol with relative path %s is not defined.\") in method public propertyNotDefined(propertyName String, protocolRelativePath String) : OperationFailedException from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Modify Method Annotation",
    "description" : "Modify Method Annotation @Message(id = 10299, value = \"Unauthorized node %s attempting to join cluster.\") to @Message(id = 100, value = \"Unauthorized node %s attempting to join cluster.\") in method public unauthorizedNodeJoin(nodeName String) : SecurityException from class org.infinispan.server.jgroups.logging.JGroupsLogger",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method protected getIgnoredChildResourcesForRemovalTest() : Set<PathAddress> from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTest to protected getIgnoredChildResourcesForRemovalTest() : Set<PathAddress> from class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : "<p>Although the body of the method has changed, the logic is the same.</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public stop(context StopContext) : void from class org.jboss.as.clustering.jgroups.subsystem.ChannelFactoryService to public stop(context StopContext) : void from class org.infinispan.server.commons.service.concurrent.CachedThreadPoolExecutorServiceBuilder",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter context : StopContext in method public stop(context StopContext) : void from class org.infinispan.server.commons.service.concurrent.CachedThreadPoolExecutorServiceBuilder",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier package to public in attribute public DEFAULT_STACK : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemResourceDefinition",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier public to package in attribute package SERVICE_NAME : ServiceName from class org.infinispan.server.jgroups.subsystem.ProtocolDefaultsBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier package to private in attribute private expectedOperationCount : int from class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method private configureMulticastSocket(introspector Introspector, config ProtocolConfiguration, addressProperty String, portProperty String, binding SocketBinding) : void from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method private setSocketBindingProperty(introspector Introspector, config ProtocolConfiguration, name String, value String) : void from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method private setProperty(introspector Introspector, config ProtocolConfiguration, name String, value String) : void from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method private writeTransport(writer XMLExtendedStreamWriter, property Property) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method private writeRelay(writer XMLExtendedStreamWriter, relay ModelNode) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method private writeSasl(writer XMLExtendedStreamWriter, sasl ModelNode) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLWriter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method package removeRuntimeServices(context OperationContext, operation ModelNode, model ModelNode) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemAddHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute package TYPE : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.ProtocolResourceDefinition",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute package SOCKET_BINDING : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.ProtocolResourceDefinition",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute package PROPERTIES : SimpleMapAttributeDefinition from class org.infinispan.server.jgroups.subsystem.ProtocolResourceDefinition",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute package ATTRIBUTES : AttributeDefinition[] from class org.infinispan.server.jgroups.subsystem.ProtocolResourceDefinition",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute package SHARED : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute package DIAGNOSTICS_SOCKET_BINDING : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute package DEFAULT_EXECUTOR : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute package OOB_EXECUTOR : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute package TIMER_EXECUTOR : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute package THREAD_FACTORY : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute package SITE : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute package RACK : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute package MACHINE : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute package ATTRIBUTES : AttributeDefinition[] from class org.infinispan.server.jgroups.subsystem.TransportResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute public DEFAULT_STACK : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private transport : TransportConfiguration from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.ProtocolStack",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private relay : RelayConfiguration from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.ProtocolStack",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private sasl : SaslConfiguration from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.ProtocolStack",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private diagnosticsSocketBinding : InjectedValue<SocketBinding> from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Transport",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private clusterRole : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Sasl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private mech : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Sasl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private expectedOperationCount : int from class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter site : String in method public setTopology(site String, rack String, machine String) : TransportConfigurationBuilder from class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter rack : String in method public setTopology(site String, rack String, machine String) : TransportConfigurationBuilder from class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter machine : String in method public setTopology(site String, rack String, machine String) : TransportConfigurationBuilder from class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable attribute : Attribute in method public forName(localName String) : Attribute from class org.jboss.as.clustering.jgroups.subsystem.Attribute",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable element : Element in method public forName(localName String) : Element from class org.jboss.as.clustering.jgroups.subsystem.Element",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable relayConfig : RelayConfiguration in method public createChannel(id String) : Channel from class org.jboss.as.clustering.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable localSite : String in method public createChannel(id String) : Channel from class org.jboss.as.clustering.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable remoteSites : List<RemoteSiteConfiguration> in method public createChannel(id String) : Channel from class org.jboss.as.clustering.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable sites : List<String> in method public createChannel(id String) : Channel from class org.jboss.as.clustering.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable bridges : Map<String,RelayConfig.BridgeConfig> in method public createChannel(id String) : Channel from class org.jboss.as.clustering.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable siteName : String in method public createChannel(id String) : Channel from class org.jboss.as.clustering.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable bridge : RelayConfig.BridgeConfig in method public createChannel(id String) : Channel from class org.jboss.as.clustering.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable relay : RELAY2 in method public createChannel(id String) : Channel from class org.jboss.as.clustering.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter property : Property in method private writeTransport(writer XMLExtendedStreamWriter, property Property) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLWriter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter protocol : ModelNode in method private writeProtocol(writer XMLExtendedStreamWriter, protocol ModelNode, element Element) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLWriter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter element : Element in method private writeProtocol(writer XMLExtendedStreamWriter, protocol ModelNode, element Element) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLWriter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemAddHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class org.infinispan.server.jgroups.subsystem.JChannelFactoryBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier package to public in class org.infinispan.server.jgroups.subsystem.SaslConfigurationBuilder",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier static in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemRemove.OriginalSubsystemRemoveHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier static in class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.ProtocolStack",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier static in class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Transport",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier static in class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Sasl",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Split Package",
    "description" : "Split Package org.jboss.as.clustering.jgroups to [org.infinispan.server.commons, org.infinispan.server.commons.msc, org.infinispan.server.jgroups.logging, org.infinispan.server.jgroups.security, org.infinispan.server.jgroups.spi]",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Split Package",
    "description" : "Split Package org.jboss.as.clustering to [org.infinispan.server, org.infinispan.server.commons]",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Package",
    "description" : "Merge Package [org.jboss.as.clustering, org.jboss.as.clustering.jgroups] to org.infinispan.server.commons",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable clusterName : String in method public createChannel(id String) : Channel from class org.jboss.as.clustering.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable site : String in method public createChannel(id String) : Channel from class org.jboss.as.clustering.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable channel : JChannel in method public createChannel(id String) : Channel from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter protocolConfig : ProtocolConfiguration to protocol : ProtocolConfiguration in method private createProtocol(stack ProtocolStackConfiguration, protocol ProtocolConfiguration) : ProtocolConfiguration from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter stack : ProtocolStackConfiguration in method private createProtocol(stack ProtocolStackConfiguration, protocol ProtocolConfiguration) : ProtocolConfiguration from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method private createProtocol(stack ProtocolStackConfiguration, protocol ProtocolConfiguration) : ProtocolConfiguration from class org.infinispan.server.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter protocolConfig : ProtocolConfiguration in method private createProtocol(protocolConfig ProtocolConfiguration) : ProtocolConfiguration from class org.jboss.as.clustering.jgroups.JChannelFactory",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable protocolDefaultsService : ServiceName in method protected removeRuntimeServices(context OperationContext, operation ModelNode, model ModelNode) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemRemove.OriginalSubsystemRemoveHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable subsystem : PathAddress to address : PathAddress in method protected getIgnoredChildResourcesForRemovalTest() : Set<PathAddress> from class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable protocolList : String[] to protocols : String[] in method protected getIgnoredChildResourcesForRemovalTest() : Set<PathAddress> from class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type addresses : List<PathAddress> to addresses : Set<PathAddress> in method protected getIgnoredChildResourcesForRemovalTest() : Set<PathAddress> from class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public getUri() : String from class org.jboss.as.clustering.jgroups.subsystem.Namespace to package format(pattern String) : String from class org.infinispan.server.jgroups.subsystem.JGroupsSchema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n",
      "mappingState" : 1,
      "validationComment" : "According to the manual validation of the commit, the -URN_PATTERN- attribute remained in the child version (https://jgroupsschema.java) but instead, the parameter -pattern- has been used in the statement. So, this makes the change impure."
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter pattern : String in method package format(pattern String) : String from class org.infinispan.server.jgroups.subsystem.JGroupsSchema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to package in method package format(pattern String) : String from class org.infinispan.server.jgroups.subsystem.JGroupsSchema",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable namespace : Namespace to schema : JGroupsSchema in method public initializeParsers(context ExtensionParsingContext) : void from class org.infinispan.server.jgroups.subsystem.JGroupsExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type namespace : Namespace to schema : JGroupsSchema in method public initializeParsers(context ExtensionParsingContext) : void from class org.infinispan.server.jgroups.subsystem.JGroupsExtension",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package pathElement(name String) : PathElement extracted from protected getProtocolAddress(stackName String, protocolType String) : PathAddress in class org.jboss.as.clustering.jgroups.subsystem.OperationTestCaseBase & moved to class org.infinispan.server.jgroups.subsystem.ProtocolResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.subsystem.StackResourceDefinition moved to org.infinispan.server.jgroups.subsystem.StackResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter resourceRegistration : ManagementResourceRegistration to registration : ManagementResourceRegistration in method public registerChildren(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.StackResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter resourceRegistration : ManagementResourceRegistration to registration : ManagementResourceRegistration in method public registerOperations(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.StackResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter runtimeRegistration : boolean to allowRuntimeOnlyRegistration : boolean in method public StackResourceDefinition(allowRuntimeOnlyRegistration boolean) from class org.infinispan.server.jgroups.subsystem.StackResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type PROTOCOLS : StringListAttributeDefinition to PROTOCOLS : AttributeDefinition in class org.infinispan.server.jgroups.subsystem.StackResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute runtimeRegistration : boolean to allowRuntimeOnlyRegistration : boolean in class org.infinispan.server.jgroups.subsystem.StackResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Deprecated in attribute package PROTOCOLS : AttributeDefinition from class org.infinispan.server.jgroups.subsystem.StackResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Deprecated in attribute package CLUSTER : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.RemoteSiteResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Deprecated in attribute package STACK : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.RemoteSiteResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.jboss.as.clustering.jgroups.subsystem.PropertyResourceDefinition moved to org.infinispan.server.jgroups.subsystem.PropertyResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter resourceRegistration : ManagementResourceRegistration to registration : ManagementResourceRegistration in method public registerOperations(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.PropertyResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter resourceRegistration : ManagementResourceRegistration to registration : ManagementResourceRegistration in method public registerAttributes(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.PropertyResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute package VALUE : SimpleAttributeDefinition from class org.infinispan.server.jgroups.subsystem.PropertyResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method package pathElement(name String) : PathElement extracted from protected getProtocolPropertyAddress(stackName String, protocolType String, propertyName String) : PathAddress in class org.jboss.as.clustering.jgroups.subsystem.OperationTestCaseBase & moved to class org.infinispan.server.jgroups.subsystem.PropertyResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public pathElement(name String) : PathElement extracted from protected getProtocolStackAddress(stackName String) : PathAddress in class org.jboss.as.clustering.jgroups.subsystem.OperationTestCaseBase & moved to class org.infinispan.server.jgroups.subsystem.StackResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Package",
    "description" : "Move Package org.jboss.as.clustering.jgroups.subsystem to org.infinispan.server.commons.controller",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter model : ModelNode in method protected performRuntime(context OperationContext, operation ModelNode, model ModelNode, verificationHandler ServiceVerificationHandler, newControllers List<ServiceController<?>>) : void from class org.jboss.as.clustering.jgroups.subsystem.AddStepHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter newControllers : List<ServiceController<?>> in method protected performRuntime(context OperationContext, operation ModelNode, model ModelNode, verificationHandler ServiceVerificationHandler, newControllers List<ServiceController<?>>) : void from class org.jboss.as.clustering.jgroups.subsystem.AddStepHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter verificationHandler : ServiceVerificationHandler in method protected performRuntime(context OperationContext, operation ModelNode, model ModelNode, verificationHandler ServiceVerificationHandler, newControllers List<ServiceController<?>>) : void from class org.jboss.as.clustering.jgroups.subsystem.AddStepHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter resource : Resource in method protected performRuntime(context OperationContext, operation ModelNode, resource Resource) : void from class org.infinispan.server.commons.controller.ReloadRequiredAddStepHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type OperationFailedException in method protected performRuntime(context OperationContext, operation ModelNode, model ModelNode, verificationHandler ServiceVerificationHandler, newControllers List<ServiceController<?>>) : void from class org.jboss.as.clustering.jgroups.subsystem.AddStepHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter attributes : AttributeDefinition... in method package AddStepHandler(attributes AttributeDefinition...) from class org.jboss.as.clustering.jgroups.subsystem.AddStepHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter Modifier",
    "description" : "Remove Parameter Modifier final in parameter attributes : Collection<AttributeDefinition> in method package AddStepHandler(attributes Collection<AttributeDefinition>) from class org.jboss.as.clustering.jgroups.subsystem.AddStepHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public ReloadRequiredAddStepHandler(attributes Collection<AttributeDefinition>) from class org.infinispan.server.commons.controller.ReloadRequiredAddStepHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier package to public in method public ReloadRequiredAddStepHandler(attributes AttributeDefinition...) from class org.infinispan.server.commons.controller.ReloadRequiredAddStepHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter type : String in method protected getTransportPropertyWriteOperation(stackName String, type String, propertyName String, propertyValue String) : ModelNode from class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter type : String in method protected getTransportWriteOperation(stackName String, type String, name String, value String) : ModelNode from class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Attribute",
    "description" : "Inline Attribute package readTransportTypeOp : ModelNode in class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Attribute",
    "description" : "Inline Attribute package readTransportRackOp : ModelNode in class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Attribute",
    "description" : "Inline Attribute package readSubsystemDefaultStackOp : ModelNode in class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Attribute",
    "description" : "Inline Attribute package readProtocolSocketBindingOp : ModelNode in class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Attribute",
    "description" : "Inline Attribute package addStackOpWithParams : ModelNode in class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Attribute",
    "description" : "Inline Attribute package writeProtocolSocketBindingOp : ModelNode in class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Attribute",
    "description" : "Inline Attribute package writeTransportRackOp : ModelNode in class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable name : String in initializer Element from class org.jboss.as.clustering.jgroups.subsystem.Element",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable name : String in initializer Attribute from class org.jboss.as.clustering.jgroups.subsystem.Attribute",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable protocolAddress : PathAddress in method protected getProtocolReadOperation(stackName String, protocolName String, name String) : ModelNode from class org.jboss.as.clustering.jgroups.subsystem.OperationTestCaseBase",
    "comment" : "<p>PathAddress protocolAddress = getProtocolAddress(stackName, protocolName);<br />inlined to<br />return Operations.createReadAttributeOperation(getProtocolAddress(stackName, protocolName), name);</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable addOp : ModelNode in method protected getProtocolStackAddOperationWithParameters(stackName String) : ModelNode from class org.jboss.as.clustering.jgroups.subsystem.OperationTestCaseBase",
    "comment" : "<p>ModelNode addOp = getProtocolStackAddOperation(stackName);<br />inlined to<br />ModelNode[] operations = new ModelNode[] {<br /> getProtocolStackAddOperation(stackName),<br /> getTransportAddOperation(stackName, 'UDP'),<br /> getProtocolAddOperation(stackName, 'MPING'),<br /> getProtocolAddOperation(stackName, 'pbcast.FLUSH'),<br /> };</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable transportPropertyAddress : PathAddress in method protected getProtocolPropertyReadOperation(stackName String, protocolName String, propertyName String) : ModelNode from class org.jboss.as.clustering.jgroups.subsystem.OperationTestCaseBase",
    "comment" : "<p>PathAddress transportPropertyAddress = getProtocolPropertyAddress(stackName, protocolName, propertyName);<br />inline to<br />return Operations.createReadAttributeOperation(getProtocolPropertyAddress(stackName, protocolName, propertyName), PropertyResourceDefinition.VALUE.getName());</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable transportPropertyAddress : PathAddress in method protected getProtocolPropertyWriteOperation(stackName String, protocolName String, propertyName String, propertyValue String) : ModelNode from class org.jboss.as.clustering.jgroups.subsystem.OperationTestCaseBase",
    "comment" : "<p>PathAddress transportPropertyAddress = getProtocolPropertyAddress(stackName, protocolName, propertyName);<br />inlined to<br />return Operations.createWriteAttributeOperation(getProtocolPropertyAddress(stackName, protocolName, propertyName), PropertyResourceDefinition.VALUE.getName(), new ModelNode(propertyValue));</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable protocolAddress : PathAddress in method protected getProtocolWriteOperation(stackName String, protocolName String, name String, value String) : ModelNode from class org.jboss.as.clustering.jgroups.subsystem.OperationTestCaseBase",
    "comment" : "<p>PathAddress protocolAddress = getProtocolAddress(stackName, protocolName);<br />inlined to<br />return Operations.createWriteAttributeOperation(getProtocolAddress(stackName, protocolName), name, new ModelNode(value));</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Attribute",
    "description" : "Extract Attribute package WILDCARD_PATH : PathElement in class org.infinispan.server.jgroups.subsystem.RemoteSiteResourceDefinition",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3908
}, {
  "id" : 1143042,
  "repository" : "https://github.com/hazelcast/hazelcast.git",
  "sha1" : "30c4ae09745d6062077925a54f27205b7401d8df",
  "url" : "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
  "author" : "Peter Veentjer",
  "time" : "7/16/15 1:56 AM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private renderConnection() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the variable inside the -append- method has been changed and there is no overlapped refactoring to justify that."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private renderThread() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the variable inside the -append- method has been changed -threadCount to threadThreadCount-"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private renderOperationService() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the variable inside the -append- method has been changed"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private renderEvents() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ".read() has been added to the new varibale passed to the -append- method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private renderNativeMemory() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the change inside the if condition happened within the extract method mechanics. So it's pure"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private renderHeap() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private renderClient() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ".read() has been added to the new varibale passed to the -append- method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private renderPhysicalMemory() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Changes cannot be justified"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private renderProcessors() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Changes cannot be justified"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method package getConnectionAddress() : Object extracted from public close(t Throwable) : void in class com.hazelcast.nio.tcp.TcpIpConnection",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private renderSwap() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Changes cannot be justified"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private renderCluster() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Changes cannot be justified"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private renderExecutors() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Changes cannot be justified"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private renderProxy() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ".read() has been added to the new varibale passed to the -append- method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private renderGc() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Changes cannot be justified"
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.hazelcast.internal.metrics.LongProbe renamed to com.hazelcast.internal.metrics.LongProbeFunction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.hazelcast.internal.metrics.DoubleProbe renamed to com.hazelcast.internal.metrics.DoubleProbeFunction",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.hazelcast.internal.metrics.impl.GaugeImplTest.SomeObject moved to com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest.SomeObject",
    "comment" : "<p>Class SomeObject is moved in both LongGaugeImplTest and DoubleGaugeImplTest</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface com.hazelcast.internal.metrics.ProbeFunction from class com.hazelcast.internal.metrics.DoubleProbe",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface com.hazelcast.internal.metrics.ProbeFunction from class com.hazelcast.internal.metrics.LongProbe",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface com.hazelcast.internal.metrics.ProbeFunction from class com.hazelcast.internal.metrics.impl.MethodProbe",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface com.hazelcast.internal.metrics.ProbeFunction from class com.hazelcast.internal.metrics.impl.FieldProbe",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMetric_whenNullName() : void renamed to public newGauge_whenNullName() : void in class com.hazelcast.internal.metrics.impl.MetricsRegistryImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMetric_whenNotExistingMetric() : void renamed to public newGauge_whenNotExistingMetric() : void in class com.hazelcast.internal.metrics.impl.MetricsRegistryImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getMetric_whenExistingMetric() : void renamed to public newGauge_whenExistingMetric() : void in class com.hazelcast.internal.metrics.impl.MetricsRegistryImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package getObjectMetadata(clazz Class<?>) : SourceMetadata renamed to package loadSourceMetadata(clazz Class<?>) : SourceMetadata in class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package getLastHandle() : long renamed to package getLastWriteTime() : long in class com.hazelcast.nio.tcp.WriteHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package getLastHandle() : long renamed to package getLastReadTime() : long in class com.hazelcast.nio.tcp.ReadHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public toString() : String renamed to public render() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.hazelcast.internal.metrics.impl.AccessibleObjectProbe renamed to com.hazelcast.internal.metrics.impl.ProbeUtils",
    "comment" : "<p>Usages and Git say this</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getInvocationUsagePercentage() : double renamed to private invocationsUsedPercentage() : double in class com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
    "comment" : "<p>We have an Extract local variable&nbsp;maxConcurrentInvocations, and an if statement added.</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getName() : String from class com.hazelcast.internal.metrics.impl.GaugeImpl to public getName() : String from class com.hazelcast.internal.metrics.impl.AbstractGauge",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setup() : void from class com.hazelcast.internal.metrics.impl.GaugeImplTest to public setup() : void from class com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
    "comment" : "<p>Matin: Seems false positive!</p><p>Davood: I'd say this is TP because the method bodies are identical. In this commit, a long test class is broken down into two smaller classes.&nbsp;</p><p>Nikos: The method exists in both com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest and com.hazelcast.internal.metrics.impl.LongGaugeImplTest after refactoring.</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x",
    "validators" : "Matin, Davood, Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public getName() : void from class com.hazelcast.internal.metrics.impl.GaugeImplTest to public getName() : void from class com.hazelcast.internal.metrics.impl.LongGaugeImplTest",
    "comment" : "<p>Seems false positive!</p><p>Nikos: The first statement changes, but next two statements that follow are identical.<br />Before: <span class='blob-code-inner'><span class='pl-smi'>Gauge</span> gauge <span class='pl-k'>=</span> metricsRegistry<span class='pl-k'>.</span>getGauge(<span class='pl-s'><span class='pl-pds'>'</span>foo<span class='pl-pds'>'</span></span>);<br />After: <span class='pl-smi'>LongGauge</span> gauge <span class='pl-k'>=</span> metricsRegistry<span class='pl-k'>.</span>newLongGauge(<span class='pl-s'><span class='pl-pds'>'</span>foo<span class='pl-pds'>'</span></span>);</span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public run() : void from class com.hazelcast.internal.monitors.HealthMonitor to public run() : void from class com.hazelcast.internal.monitors.HealthMonitor.HealthMonitorThread",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private delaySeconds : int from class com.hazelcast.internal.monitors.HealthMonitor to private delaySeconds : int from class com.hazelcast.internal.monitors.HealthMonitor.HealthMonitorThread",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private name : String from class com.hazelcast.internal.metrics.impl.GaugeImpl to protected name : String from class com.hazelcast.internal.metrics.impl.AbstractGauge",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private operationService : InternalOperationService from class com.hazelcast.internal.monitors.HealthMonitor to private operationService : InternalOperationService from class com.hazelcast.internal.monitors.PerformanceLogFile",
    "comment" : "<p>I think this is FP because PerformanceLogFile has not been instanciated in PerformanceLogFile and the way around</p>",
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private delaySeconds : int from class com.hazelcast.internal.monitors.PerformanceMonitor to private delaySeconds : int from class com.hazelcast.internal.monitors.HealthMonitor.HealthMonitorThread",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private operationService : InternalOperationService from class com.hazelcast.internal.monitors.HealthMonitor to private operationService : InternalOperationService from class com.hazelcast.internal.monitors.PerformanceMonitorTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private delaySeconds : int from class com.hazelcast.internal.monitors.HealthMonitor to private delaySeconds : int from class com.hazelcast.internal.monitors.PerformanceMonitor.MonitorThread",
    "comment" : "<p>The attribute has been moved to&nbsp;HealthMonitorThread</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private delaySeconds : int from class com.hazelcast.internal.monitors.PerformanceMonitor to private delaySeconds : int from class com.hazelcast.internal.monitors.PerformanceMonitor.MonitorThread",
    "comment" : "<p>This is extract class.</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter input : DoubleProbe<S> to function : DoubleProbeFunction<S> in method public register(source S, name String, function DoubleProbeFunction<S>) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter input : Object to function : ProbeFunction in method package registerInternal(source S, name String, function ProbeFunction) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter input : LongProbe<S> to function : LongProbeFunction<S> in method public register(source S, name String, function LongProbeFunction<S>) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable gauge : GaugeImpl to probeInstance : ProbeInstance in method public deregister(source S) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable gauge : GaugeImpl to probeInstance : ProbeInstance in method package registerInternal(source S, name String, function ProbeFunction) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute lastHandle : long to lastReadTime : long in class com.hazelcast.nio.tcp.ReadHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute lastHandle : long to lastWriteTime : long in class com.hazelcast.nio.tcp.WriteHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute metrics : ConcurrentMap<String,GaugeImpl> to probeInstances : ConcurrentMap<String,ProbeInstance> in class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute executedOperationsCount : AtomicLong to completedOperationsCount : AtomicLong in class com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute PERFORMANCE_MONITORING_ENABLED : GroupProperty to PERFORMANCE_MONITOR_ENABLED : GroupProperty in class com.hazelcast.instance.GroupProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute PERFORMANCE_MONITORING_DELAY_SECONDS : GroupProperty to PERFORMANCE_MONITOR_DELAY_SECONDS : GroupProperty in class com.hazelcast.instance.GroupProperties",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute THRESHOLD : double to THRESHOLD_PERCENTAGE : double in class com.hazelcast.internal.monitors.HealthMonitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class com.hazelcast.internal.monitors.PerformanceMonitor.MonitorThread from class com.hazelcast.internal.monitors.PerformanceMonitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class com.hazelcast.internal.monitors.HealthMonitor.HealthMonitorThread from class com.hazelcast.internal.monitors.HealthMonitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.hazelcast.internal.metrics.Gauge renamed to com.hazelcast.internal.metrics.LongGauge",
    "comment" : "<p>Class com.hazelcast.internal.metrics.Gauge is actually split into two new classes:<br />com.hazelcast.internal.metrics.LongGauge<br />com.hazelcast.internal.metrics.DoubleGauge<br /><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>Method long</span> <span class='pl-en'>readLong</span>()</span> becomes long read() in LongGauge<br />Method double readDouble() becomes double read() in DoubleGauge</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public run() : void from class com.hazelcast.internal.monitors.PerformanceMonitor to public run() : void from class com.hazelcast.internal.monitors.PerformanceMonitor.MonitorThread",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter input : LongProbe<S> to probe : LongProbeFunction<S> in method public register(source S, name String, probe LongProbeFunction<S>) : void from class com.hazelcast.internal.metrics.MetricsRegistry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter input : DoubleProbe<S> to probe : DoubleProbeFunction<S> in method public register(source S, name String, probe DoubleProbeFunction<S>) : void from class com.hazelcast.internal.metrics.MetricsRegistry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type input : LongProbe<S> to function : LongProbeFunction<S> in method public register(source S, name String, function LongProbeFunction<S>) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type input : DoubleProbe<S> to function : DoubleProbeFunction<S> in method public register(source S, name String, function DoubleProbeFunction<S>) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type input : Object to function : ProbeFunction in method package registerInternal(source S, name String, function ProbeFunction) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type input : LongProbe<S> to probe : LongProbeFunction<S> in method public register(source S, name String, probe LongProbeFunction<S>) : void from class com.hazelcast.internal.metrics.MetricsRegistry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type input : DoubleProbe<S> to probe : DoubleProbeFunction<S> in method public register(source S, name String, probe DoubleProbeFunction<S>) : void from class com.hazelcast.internal.metrics.MetricsRegistry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : GaugeImpl to probeInstance : ProbeInstance in method public deregister(source S) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : GaugeImpl to probeInstance : ProbeInstance in method package registerInternal(source S, name String, function ProbeFunction) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type metrics : ConcurrentMap<String,GaugeImpl> to probeInstances : ConcurrentMap<String,ProbeInstance> in class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type clusterTimeDiff : long to clusterTimeDiff : LongGauge in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type eventQueueSize : int to eventQueueSize : LongGauge in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type proxyCount : int to proxyCount : LongGauge in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type clientEndpointCount : int to clientEndpointCount : LongGauge in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type readEvents : long to readEvents : SwCounter in class com.hazelcast.nio.tcp.InSelectorImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type writeEvents : long to writeEvents : SwCounter in class com.hazelcast.nio.tcp.OutSelectorImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type eventCount : long to eventCount : SwCounter in class com.hazelcast.nio.tcp.ReadHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type totalFailures : AtomicLong to totalFailures : MwCounter in class com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGaugeImpl in method public newGauge_whenNotExistingMetric() : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImplTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type first : Gauge to first : LongGaugeImpl in method public newGauge_whenExistingMetric() : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImplTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type second : Gauge to second : LongGaugeImpl in method public newGauge_whenExistingMetric() : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImplTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_customName() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedFieldsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_primitiveInteger() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedFieldsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_primitiveLong() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedFieldsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : DoubleGauge in method public register_primitiveDouble() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedFieldsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_concurrentHashMap() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedFieldsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_counterFields() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedFieldsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_staticField() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedFieldsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_superclassRegistration() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedFieldsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_withCustomName() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_primitiveByte() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_primitiveShort() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_primitiveInt() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_primitiveLong() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : DoubleGauge in method public register_primitiveFloat() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : DoubleGauge in method public register_primitiveDouble() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_atomicLong() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_atomicInteger() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_counter() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_collection() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_map() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_subclass() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_staticMethod() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_interfaceWithGauges() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type methodGauge : Gauge to methodGauge : LongGauge in method public register_superclassWithGaugeMethods() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type fieldGauge : Gauge to fieldGauge : LongGauge in method public register_superclassWithGaugeMethods() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type field1 : Gauge to field1 : LongGauge in method public deregister_whenRegistered() : void from class com.hazelcast.internal.metrics.impl.RegisterMetricTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type field2 : Gauge to field2 : LongGauge in method public deregister_whenRegistered() : void from class com.hazelcast.internal.metrics.impl.RegisterMetricTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type method1 : Gauge to method1 : LongGauge in method public deregister_whenRegistered() : void from class com.hazelcast.internal.metrics.impl.RegisterMetricTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type method2 : Gauge to method2 : LongGauge in method public deregister_whenRegistered() : void from class com.hazelcast.internal.metrics.impl.RegisterMetricTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public loadedClassesCount() : void from class com.hazelcast.internal.metrics.metricsets.ClassLoadingMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public totalLoadedClassesCount() : void from class com.hazelcast.internal.metrics.metricsets.ClassLoadingMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public unloadedClassCount() : void from class com.hazelcast.internal.metrics.metricsets.ClassLoadingMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public minorCount() : void from class com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public minorTime() : void from class com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public majorCount() : void from class com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public majorTime() : void from class com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public unknownCount() : void from class com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public unknownTime() : void from class com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : DoubleGauge in method public registerMethod_whenDouble() : void from class com.hazelcast.internal.metrics.metricsets.OperatingSystemMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public registerMethod_whenLong() : void from class com.hazelcast.internal.metrics.metricsets.OperatingSystemMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public freeMemory() : void from class com.hazelcast.internal.metrics.metricsets.RuntimeMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public totalMemory() : void from class com.hazelcast.internal.metrics.metricsets.RuntimeMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public maxMemory() : void from class com.hazelcast.internal.metrics.metricsets.RuntimeMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public usedMemory() : void from class com.hazelcast.internal.metrics.metricsets.RuntimeMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public availableProcessors() : void from class com.hazelcast.internal.metrics.metricsets.RuntimeMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public uptime() : void from class com.hazelcast.internal.metrics.metricsets.RuntimeMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public threadCount() : void from class com.hazelcast.internal.metrics.metricsets.ThreadMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public peakThreadCount() : void from class com.hazelcast.internal.metrics.metricsets.ThreadMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public daemonThreadCount() : void from class com.hazelcast.internal.metrics.metricsets.ThreadMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public totalStartedThreadCount() : void from class com.hazelcast.internal.metrics.metricsets.ThreadMetricSetTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute PROP_PERFORMANCE_MONITORING_ENABLED : String to PROP_PERFORMANCE_MONITOR_ENABLED : String in class com.hazelcast.instance.GroupProperties",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute PROP_PERFORMANCE_MONITORING_DELAY_SECONDS : String to PROP_PERFORMANCE_MONITOR_DELAY_SECONDS : String in class com.hazelcast.instance.GroupProperties",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter gauge : GaugeImpl to probeInstance : ProbeInstance in method private logOverwrite(probeInstance ProbeInstance) : void in class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>private</span> <span class='pl-k'>void</span> <span class='pl-en'>logOverwrite</span>(<span class='pl-smi'>String</span> <span class='pl-v'>name</span>, <span class='pl-smi'>GaugeImpl</span> <span class='pl-v'>gauge</span>)</span> seems to be different than <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>private</span> <span class='pl-k'>void</span> <span class='pl-en'>logOverwrite</span>(<span class='pl-smi'>ProbeInstance</span> <span class='pl-v'>probeInstance</span>)</span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private renderLoad() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Changes cannot be justified"
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type gauge : GaugeImpl to probeInstance : ProbeInstance in method private logOverwrite(probeInstance ProbeInstance) : void in class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type entry : Map.Entry<String,GaugeImpl> to entry : Map.Entry<String,ProbeInstance> in method public deregister(source S) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type long to double in method private invocationsUsedPercentage() : double in class com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type double to long in method public getLastCallId() : long in class com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type double to void in method public dumpPerformanceMetrics(sb StringBuffer) : void in class com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type connectionManager : ConnectionManager to monitorThread : MonitorThread in class com.hazelcast.internal.monitors.PerformanceMonitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type sb : StringBuffer to threadGroup : HazelcastThreadGroup in method private initMonitorThread() : MonitorThread in class com.hazelcast.internal.monitors.PerformanceMonitor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public readDouble_whenDoubleGaugeField() : void renamed to public whenDoubleGaugeField() : void in class com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
    "comment" : "<p>Before:&nbsp;<a href='https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L187'>https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L187</a></p><p>After:&nbsp;<a href='https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L187'>https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L187</a>&nbsp;</p><p>due to FP RC, MAMR is detected as RM.</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method package getGauge(name String) : Gauge renamed to package newLongGauge(name String) : LongGauge in class com.hazelcast.internal.metrics.MetricsRegistry",
    "comment" : "<p>abstract methods</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public setup() : void from class com.hazelcast.internal.metrics.impl.GaugeImplTest to public setup() : void from class com.hazelcast.internal.metrics.impl.LongGaugeImplTest",
    "comment" : "<p>ideally this shud be FP.&nbsp;</p><p>This setup() method creates logger.</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public readDouble_whenExceptionalInput() : void renamed to public whenProbeThrowsException() : void in class com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
    "comment" : "<p>Before:&nbsp;<a href='https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L132'>https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L132</a></p><p>After:&nbsp;<a href='https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-27ace39a08b5d10f00a01d213fb022bbR111'>https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-27ace39a08b5d10f00a01d213fb022bbR111</a></p><p>Similar to the other case, due to FP RC, MAMR is detected as RM.</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public readDouble_whenLongGauge() : void renamed to public whenLongProbe() : void in class com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
    "comment" : "<p>Before:<a href='https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L163'>https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L163</a></p><p>After:<a href='https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-27ace39a08b5d10f00a01d213fb022bbR111'>https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-27ace39a08b5d10f00a01d213fb022bbR111</a></p><p>RD2x detects a Rename class - GaugeImplTest to DoubleGaugeImplTest (which is FP), hence this is detected as RM not MARM</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public readLong_whenDoubleGaugeField() : void from class com.hazelcast.internal.metrics.impl.GaugeImplTest to public whenDoubleProbeField() : void from class com.hazelcast.internal.metrics.impl.LongGaugeImplTest",
    "comment" : "<p>Before:<a href='https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L112'>https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L112</a></p><p>After:&nbsp;<a href='https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-27ace39a08b5d10f00a01d213fb022bbR111'>https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-27ace39a08b5d10f00a01d213fb022bbR111</a></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n",
      "mappingState" : 1,
      "validationComment" : "the replacement -getGauge -> newLongGauge- is not justifiable as there is no connection between the getGauge and newLongGauge methods"
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class com.hazelcast.internal.metrics.impl.GaugeImplTest.SomeObject moved to com.hazelcast.internal.metrics.impl.LongGaugeImplTest.SomeObject",
    "comment" : "<p><a href='3058'>http://refactoring.encs.concordia.ca/oracle/refactoring-details/1143042/3058</a></p><p>Class SomeObject is moved in both LongGaugeImplTest and DoubleGaugeImplTest</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public readLong_whenLongGaugeField() : void from class com.hazelcast.internal.metrics.impl.GaugeImplTest to public whenLongProbeField() : void from class com.hazelcast.internal.metrics.impl.LongGaugeImplTest",
    "comment" : "<p>Before:&nbsp;<a href='https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L103'>https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L103</a></p><p>After:&nbsp;<a href='https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-27ace39a08b5d10f00a01d213fb022bbR102'>https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-27ace39a08b5d10f00a01d213fb022bbR102</a></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n",
      "mappingState" : 1,
      "validationComment" : "the replacement -getGauge -> newLongGauge- is not justifiable as there is no connection between the getGauge and newLongGauge methods"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public readLong_whenLongGauge() : void from class com.hazelcast.internal.metrics.impl.GaugeImplTest to public whenLongProbe() : void from class com.hazelcast.internal.metrics.impl.LongGaugeImplTest",
    "comment" : "<p>Before:&nbsp;<a href='https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L74'>https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L74</a></p><p>After:&nbsp;<a href='https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-27ace39a08b5d10f00a01d213fb022bbR73'>https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-27ace39a08b5d10f00a01d213fb022bbR73</a></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n",
      "mappingState" : 1,
      "validationComment" : "the replacement -getGauge -> newLongGauge- is not justifiable as there is no connection between the getGauge and newLongGauge methods"
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.hazelcast.internal.metrics.impl.GaugeImplTest renamed to com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
    "comment" : "<p>This is a split class. GaugeImplTest splits into&nbsp;DoubleGaugeImplTest and LongGaugeImplTest</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public readDouble_whenLongGaugeField() : void renamed to public whenLongGaugeField() : void in class com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
    "comment" : "<p>Before:&nbsp;<a href='https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L178'>https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L178</a></p><p>After:&nbsp;<a href='https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-1a940f98562478f2ed03b4f044e96c93R92'>https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-1a940f98562478f2ed03b4f044e96c93R92</a></p><p>RD2x detects a Rename class - GaugeImplTest to DoubleGaugeImplTest (which is FP), hence this is detected as RM not MARM</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public readDouble_whenDoubleGauge() : void renamed to public whenDoubleProbe() : void in class com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
    "comment" : "<p>Before:&nbsp;<a href='https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L148'>https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L148</a></p><p>After:&nbsp;<a href='https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-1a940f98562478f2ed03b4f044e96c93R62'>https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-1a940f98562478f2ed03b4f044e96c93R62</a></p><p>RD2x detects a Rename class - GaugeImplTest to DoubleGaugeImplTest (which is FP), hence this is detected as RM not MARM</p>",
    "validation" : "FP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public readLong_whenExceptionalInput() : void from class com.hazelcast.internal.metrics.impl.GaugeImplTest to public whenProbeThrowsException() : void from class com.hazelcast.internal.metrics.impl.LongGaugeImplTest",
    "comment" : "<p>Before:&nbsp;<a href='https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L87'>https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-5e2c222374ddf576fc12a74fa01e3c65L87</a></p><p>After:<a href='https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-27ace39a08b5d10f00a01d213fb022bbR86'>https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df#diff-27ace39a08b5d10f00a01d213fb022bbR86</a></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n",
      "mappingState" : 1,
      "validationComment" : "the replacement -getGauge -> newLongGauge- is not justifiable as there is no connection between the getGauge and newLongGauge methods"
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class com.hazelcast.internal.metrics.impl.GaugeImpl renamed to com.hazelcast.internal.metrics.impl.ProbeInstance",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute input : Object to function : ProbeFunction in class com.hazelcast.internal.metrics.impl.ProbeInstance",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type input : Object to function : ProbeFunction in class com.hazelcast.internal.metrics.impl.ProbeInstance",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getInvocationUsagePercentage() : double renamed to public dumpPerformanceMetrics(sb StringBuffer) : void in class com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getLastCallId() : long renamed to private invocationsUsedPercentage() : double in class com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getInvocationUsagePercentage() : double renamed to public getLastCallId() : long in class com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"clusterTime\") in method public getClusterTime() : long from class com.hazelcast.cluster.impl.ClusterClockImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"clusterTimeDiff\") in method public getClusterTimeDiff() : long from class com.hazelcast.cluster.impl.ClusterClockImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"clusterUpTime\") in method public getClusterUpTime() : long from class com.hazelcast.cluster.impl.ClusterClockImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"clusterStartTime\") in method public getClusterStartTime() : long from class com.hazelcast.cluster.impl.ClusterClockImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"size\") in method public getSize() : int from class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getOwner() : IOSelector from class com.hazelcast.nio.tcp.AbstractSelectionHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"VO_VOLATILE_INCREMENT\", justification = \"eventCount is accessed by a single thread only.\") in method public handle() : void from class com.hazelcast.nio.tcp.ReadHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"clientCount\") in method public getCurrentClientConnections() : int from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"maxBackupCount\") in method public getMaxBackupCount() : int from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public memberAdded(member MemberImpl) : void from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public memberRemoved(member MemberImpl) : void from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public getActiveMigrations() : Collection<MigrationInfo> from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"eventQueueSize\") in method public getEventQueueSize() : int from class com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"invocations.lastCallId\") in method public getLastCallId() : long from class com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"running.count\") in method public getRunningOperationsCount() : int from class com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"response-queue.size\") in method public getResponseQueueSize() : int from class com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"queue.size\") in method public getOperationExecutorQueueSize() : int from class com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"priority-queue.size\") in method public getPriorityOperationExecutorQueueSize() : int from class com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"proxyCount\") in method public getProxyCount() : int from class com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"completedTaskCount\") in method public getCompletedTaskCount() : long from class com.hazelcast.util.executor.ManagedExecutorService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"maximumPoolSize\") in method public getMaximumPoolSize() : int from class com.hazelcast.util.executor.ManagedExecutorService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"poolSize\") in method public getPoolSize() : int from class com.hazelcast.util.executor.ManagedExecutorService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"queueSize\") in method public getQueueSize() : int from class com.hazelcast.util.executor.ManagedExecutorService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"remainingQueueCapacity\") in method public getRemainingQueueCapacity() : int from class com.hazelcast.util.executor.ManagedExecutorService",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public modCount() : int from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressFBWarnings({\"VO_VOLATILE_INCREMENT\"}) in method protected handleSelectionKey(sk SelectionKey) : void from class com.hazelcast.nio.tcp.InSelectorImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressFBWarnings({\"VO_VOLATILE_INCREMENT\"}) in method protected handleSelectionKey(sk SelectionKey) : void from class com.hazelcast.nio.tcp.OutSelectorImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressFBWarnings(value = \"VO_VOLATILE_INCREMENT\", justification = \"eventCount is accessed by a single thread only.\") in method public handle() : void from class com.hazelcast.nio.tcp.ReadHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @SuppressFBWarnings({\"VO_VOLATILE_INCREMENT\"}) in method private process(task Object) : void from class com.hazelcast.spi.impl.operationexecutor.classic.OperationThread",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"count\") in attribute private endpoints : ConcurrentMap<Connection,ClientEndpoint> from class com.hazelcast.client.impl.ClientEndpointManagerImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"lastHeartBeat\") in attribute private lastHeartBeat : long from class com.hazelcast.cluster.impl.ClusterServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"selectorQueueSize\") in attribute protected selectorQueue : Queue<Runnable> from class com.hazelcast.nio.tcp.AbstractIOSelector",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe in attribute private readEvents : SwCounter from class com.hazelcast.nio.tcp.InSelectorImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe in attribute private writeEvents : SwCounter from class com.hazelcast.nio.tcp.OutSelectorImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"in.eventCount\") in attribute private eventCount : SwCounter from class com.hazelcast.nio.tcp.ReadHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"count\") in attribute private connectionsMap : ConcurrentHashMap<Address,Connection> from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"monitorCount\") in attribute private monitors : ConcurrentHashMap<Address,TcpIpConnectionMonitor> from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"inProgressCount\") in attribute private connectionsInProgress : Set<Address> from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"connectionListenerCount\") in attribute private connectionListeners : Set<ConnectionListener> from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"acceptedSocketCount\") in attribute private acceptedSockets : Set<SocketChannelWrapper> from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"activeCount\") in attribute private activeConnections : Set<TcpIpConnection> from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"textCount\") in attribute private allTextConnections : AtomicInteger from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"out.writeQueueSize\") in attribute private writeQueue : Queue<SocketWritable> from class com.hazelcast.nio.tcp.WriteHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"out.priorityWriteQueueSize\") in attribute private urgentWriteQueue : Queue<SocketWritable> from class com.hazelcast.nio.tcp.WriteHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"out.eventCount\") in attribute private eventCount : long from class com.hazelcast.nio.tcp.WriteHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe in attribute private replicaSyncProcessLock : Semaphore from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe in attribute private stateVersion : AtomicInteger from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"migrationQueueSize\") in attribute private migrationQueue : BlockingQueue<Runnable> from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"lastRepartitionTime\") in attribute private lastRepartitionTime : AtomicLong from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe in attribute private memberGroupsSize : int from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"activeMigrationCount\") in attribute private activeMigrations : ConcurrentMap<Integer,MigrationInfo> from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"threadCount\") in attribute private eventThreadCount : int from class com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"queueCapacity\") in attribute private eventQueueCapacity : int from class com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"totalFailureCount\") in attribute private totalFailures : MwCounter from class com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"listenerCount\") in attribute private registrationIdMap : ConcurrentMap<String,Registration> from class com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"publicationCount\") in attribute private totalPublishes : AtomicLong from class com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"invocations.pending\") in attribute private invocations : ConcurrentMap<Long,Invocation> from class com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe(name = \"completed.count\") in attribute package completedOperationsCount : AtomicLong from class com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter metricsRegistry : MetricsRegistry in method public ClassicOperationExecutor(properties GroupProperties, loggerService LoggingService, thisAddress Address, operationRunnerFactory OperationRunnerFactory, responsePacketHandler ResponsePacketHandler, hazelcastThreadGroup HazelcastThreadGroup, nodeExtension NodeExtension, metricsRegistry MetricsRegistry) from class com.hazelcast.spi.impl.operationexecutor.classic.ClassicOperationExecutor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Probe(name = \"invocations.usedPercentage\") in method private invocationsUsedPercentage() : double from class com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
    "comment" : "<p>Assuming TP for<br />Rename Method public getInvocationUsagePercentage() : double renamed to private invocationsUsedPercentage() : double in class com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public getInvocationUsagePercentage() : double from class com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Annotation",
    "description" : "Add Attribute Annotation @Probe in attribute private processedTotalCount : SwCounter from class com.hazelcast.spi.impl.operationexecutor.classic.OperationThread",
    "comment" : "<p>if we assume<br /><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>volatile</span> <span class='pl-k'>long</span> processedCount<br /></span>is changed to<br /><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>private</span> <span class='pl-k'>final</span> <span class='pl-smi'>SwCounter</span> processedTotalCount <span class='pl-k'>=</span> newSwCounter();</span><br />with evidence from<br /><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>private</span> <span class='pl-k'>void</span> <span class='pl-en'>process</span>(<span class='pl-smi'>Object</span> <span class='pl-v'>task</span>)</span></p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to package in method package modCount() : int from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to package in method package ProbeInstance(name String, source S, function ProbeFunction) from class com.hazelcast.internal.metrics.impl.ProbeInstance",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public readDouble_whenNoMetricInput() : void from class com.hazelcast.internal.metrics.impl.GaugeImplTest to public whenNoProbeAvailable() : void from class com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n",
      "mappingState" : 1,
      "validationComment" : "the replacement -getGauge -> newDoubleGauge- is not justifiable as there is no connection between the getGauge and newLongGauge methods"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public readDouble_whenExceptionalInput() : void from class com.hazelcast.internal.metrics.impl.GaugeImplTest to public whenProbeThrowsException() : void from class com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n",
      "mappingState" : 1,
      "validationComment" : "the replacement -getGauge -> newDoubleGauge- is not justifiable as there is no connection between the getGauge and newLongGauge methods"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public readDouble_whenLongGaugeField() : void from class com.hazelcast.internal.metrics.impl.GaugeImplTest to public whenLongGaugeField() : void from class com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n",
      "mappingState" : 1,
      "validationComment" : "the replacement -getGauge -> newDoubleGauge- is not justifiable as there is no connection between the getGauge and newLongGauge methods"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public readDouble_whenDoubleGaugeField() : void from class com.hazelcast.internal.metrics.impl.GaugeImplTest to public whenDoubleGaugeField() : void from class com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n",
      "mappingState" : 1,
      "validationComment" : "the replacement -getGauge -> newDoubleGauge- is not justifiable as there is no connection between the getGauge and newLongGauge methods"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public readLong_whenDoubleGauge() : void from class com.hazelcast.internal.metrics.impl.GaugeImplTest to public whenDoubleProbe() : void from class com.hazelcast.internal.metrics.impl.LongGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n",
      "mappingState" : 1,
      "validationComment" : "the replacement -getGauge -> newLongGauge- is not justifiable as there is no connection between the getGauge and newLongGauge methods"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public readLong_whenNoInput() : void from class com.hazelcast.internal.metrics.impl.GaugeImplTest to public whenNoProbeSet() : void from class com.hazelcast.internal.metrics.impl.LongGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n",
      "mappingState" : 1,
      "validationComment" : "the replacement -getGauge -> newLongGauge- is not justifiable as there is no connection between the getGauge and newLongGauge methods"
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package logger : ILogger from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package clusterTimeDiff : LongGauge from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package eventQueueSize : LongGauge from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package proxyCount : LongGauge from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package clientEndpointCount : LongGauge from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package logger : ILogger from class com.hazelcast.internal.monitors.PerformanceMonitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package operationService : InternalOperationService from class com.hazelcast.internal.monitors.PerformanceMonitor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected selectorQueue : Queue<Runnable> from class com.hazelcast.nio.tcp.AbstractIOSelector",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to protected in attribute protected selectionKey : SelectionKey from class com.hazelcast.nio.tcp.AbstractSelectionHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to package in attribute package name : String from class com.hazelcast.internal.metrics.impl.ProbeInstance",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private ioBalancer : IOBalancer from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
    "comment" : "<p>public IOBalancer getIOBalancer()<br />is called in file<br />hazelcast/src/main/java/com/hazelcast/nio/tcp/AbstractSelectionHandler.java</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public scanAndRegister(source S, namePrefix String) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public deregister(source S) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public register(source S, name String, input LongProbe<S>) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier synchronized in method public register(source S, name String, input DoubleProbe<S>) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier final in method package handleSocketException(e Throwable) : void from class com.hazelcast.nio.tcp.AbstractSelectionHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private memoryUsedOfTotalPercentage : double from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private memoryUsedOfMaxPercentage : double from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private readEvents : SwCounter from class com.hazelcast.nio.tcp.InSelectorImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier volatile in attribute private readEvents : long from class com.hazelcast.nio.tcp.InSelectorImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private writeEvents : SwCounter from class com.hazelcast.nio.tcp.OutSelectorImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier volatile in attribute private writeEvents : long from class com.hazelcast.nio.tcp.OutSelectorImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier final in attribute private eventCount : SwCounter from class com.hazelcast.nio.tcp.ReadHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier volatile in attribute private eventCount : long from class com.hazelcast.nio.tcp.ReadHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Attribute Modifier",
    "description" : "Add Attribute Modifier volatile in attribute private currentPacket : SocketWritable from class com.hazelcast.nio.tcp.WriteHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Variable Modifier",
    "description" : "Add Variable Modifier final in variable executor : ManagedExecutorService in method public register(name String, defaultPoolSize int, defaultQueueCapacity int, type ExecutorType) : ManagedExecutorService from class com.hazelcast.spi.impl.executionservice.impl.ExecutionServiceImpl",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter source : S in method package ProbeInstance(name String, source S, function ProbeFunction) from class com.hazelcast.internal.metrics.impl.ProbeInstance",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter function : ProbeFunction in method package ProbeInstance(name String, source S, function ProbeFunction) from class com.hazelcast.internal.metrics.impl.ProbeInstance",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter logger : ILogger in method public GaugeImpl(name String, logger ILogger) from class com.hazelcast.internal.metrics.impl.GaugeImpl",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier private to package in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier public to package in class com.hazelcast.internal.metrics.impl.ProbeInstance",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Class Modifier",
    "description" : "Remove Class Modifier abstract in class com.hazelcast.internal.metrics.impl.AccessibleObjectProbe",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Class Modifier",
    "description" : "Add Class Modifier final in class com.hazelcast.internal.metrics.impl.ProbeUtils",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public readDouble_whenDoubleGauge() : void from class com.hazelcast.internal.metrics.impl.GaugeImplTest to public whenDoubleProbe() : void from class com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n",
      "mappingState" : 1,
      "validationComment" : "the replacement -getGauge -> newDoubleGauge- is not justifiable as there is no connection between the getGauge and newLongGauge methods"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public readDouble_whenLongGauge() : void from class com.hazelcast.internal.metrics.impl.GaugeImplTest to public whenLongProbe() : void from class com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n",
      "mappingState" : 1,
      "validationComment" : "the replacement -getGauge -> newDoubleGauge- is not justifiable as there is no connection between the getGauge and newLongGauge methods"
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public whenLongProbe() : void from class com.hazelcast.internal.metrics.impl.LongGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : DoubleGauge in method public whenDoubleGaugeField() : void from class com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : DoubleGauge in method public whenDoubleProbe() : void from class com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public whenDoubleProbeField() : void from class com.hazelcast.internal.metrics.impl.LongGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public whenNoProbeSet() : void from class com.hazelcast.internal.metrics.impl.LongGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public whenProbeThrowsException() : void from class com.hazelcast.internal.metrics.impl.LongGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : DoubleGauge in method public whenNoProbeAvailable() : void from class com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public whenDoubleProbe() : void from class com.hazelcast.internal.metrics.impl.LongGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : DoubleGauge in method public whenProbeThrowsException() : void from class com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public whenLongProbeField() : void from class com.hazelcast.internal.metrics.impl.LongGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : DoubleGauge in method public whenLongProbe() : void from class com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : LongGauge in method public getName() : void from class com.hazelcast.internal.metrics.impl.LongGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type gauge : Gauge to gauge : DoubleGauge in method public whenLongGaugeField() : void from class com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type source : GaugeImplTest to source : LongGaugeImplTest in method public get(source LongGaugeImplTest) : double from class com.hazelcast.internal.metrics.impl.LongGaugeImplTest.whenDoubleProbe.register.new DoubleProbeFunction<LongGaugeImplTest>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private sleep() : void extracted from public run() : void in class com.hazelcast.internal.monitors.PerformanceMonitor.MonitorThread",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the amount of sleep has been changed, in addition to lots of other changes"
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private operationService : InternalOperationService from class com.hazelcast.internal.monitors.HealthMonitor",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 5604
}, {
  "id" : 1145105,
  "repository" : "https://github.com/MovingBlocks/Terasology.git",
  "sha1" : "543a9808a85619dbe5acc2373cb4fe5344442de7",
  "url" : "https://github.com/MovingBlocks/Terasology/commit/543a9808a85619dbe5acc2373cb4fe5344442de7",
  "author" : "Immortius",
  "time" : "7/17/15 3:07 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.terasology.engine.subsystem.ThreadManagerSubsystem moved to org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private initTimer(context Context) : void inlined to public preInitialise(context Context) : void in class org.terasology.engine.subsystem.lwjgl.LwjglTimer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private time : EngineTime from class org.terasology.engine.TerasologyEngine to private time : EngineTime from class org.terasology.engine.subsystem.lwjgl.LwjglTimer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private time : EngineTime from class org.terasology.engine.TerasologyEngine to private time : EngineTime from class org.terasology.engine.subsystem.headless.HeadlessTimer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.terasology.engine.subsystem.ThreadManager moved to org.terasology.engine.subsystem.common.ThreadManager",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private initOpenAL(context Context) : void inlined to public initialise(rootContext Context) : void in class org.terasology.engine.subsystem.lwjgl.LwjglAudio",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Rename Parameter on top of the Inline Method"
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.terasology.engine.subsystem.lwjgl.LwjglCustomViewPort renamed to org.terasology.engine.subsystem.lwjgl.LwjglPortlet",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.headless.HeadlessAudio",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.lwjgl.LwjglAudio",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.lwjgl.LwjglInput",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shutdown(config Config) : void renamed to public preShutdown() : void in class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
    "comment" : "<p>preShutdown() is a new method added to interface <span class='blob-code-inner'><span class='pl-en'>EngineSubsystem</span>. Parameter config was removed from <span class='pl-en'>shutdown</span>(<span class='pl-smi'>Config</span> <span class='pl-v'>config</span>);<br />However, the bodies of the methods are almost identical.<br /></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private createSubsystemList() : Collection<EngineSubsystem> renamed to private populateSubsystems(builder TerasologyEngineBuilder) : void in class org.terasology.engine.Terasology",
    "comment" : "<p>Seems TP</p><p>Nikos: The call inside main() has been renamed too.<br />Before: <span class='blob-code-inner'><span class='pl-smi'>TerasologyEngine</span> engine <span class='pl-k'>=</span> <span class='pl-k'>new</span> <span class='pl-smi'>TerasologyEngine</span>(createSubsystemList());<br /></span><span class='blob-code-inner'>After: <span class='pl-smi'>TerasologyEngineBuilder</span> builder <span class='pl-k'>=</span> <span class='pl-k'>new</span> <span class='pl-smi'>TerasologyEngineBuilder</span>();&nbsp;&nbsp; populateSubsystems(builder);<br /></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public shutdown(config Config) : void from class org.terasology.engine.subsystem.headless.HeadlessAudio to package shutdown() : void from class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Pull Up Method",
    "description" : "Pull Up Method public shutdown(config Config) : void from class org.terasology.engine.subsystem.headless.HeadlessInput to package shutdown() : void from class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private validateServerIdentity() : boolean from class org.terasology.engine.TerasologyEngine to private validateServerIdentity() : boolean from class org.terasology.engine.subsystem.common.ConfigurationSubsystem",
    "comment" : "<p>Matin: TP</p><p>Nikos: After the move <span class='blob-code-inner'><span class='pl-k'>import</span> <span class='pl-smi'>org.terasology.engine.subsystem.common.ConfigurationSubsystem</span></span> is added to org.terasology.engine.TerasologyEngine</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private restartThreads() : void from class org.terasology.engine.subsystem.ThreadManagerSubsystem to private restartThreads() : void from class org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
    "comment" : "move class or package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private stopThreads() : void from class org.terasology.engine.subsystem.ThreadManagerSubsystem to private stopThreads() : void from class org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
    "comment" : "move class or package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public submitTask(name String, task Runnable) : void from class org.terasology.engine.subsystem.ThreadManagerSubsystem to public submitTask(name String, task Runnable) : void from class org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
    "comment" : "move class or package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public isFullscreen() : boolean from class org.terasology.engine.TerasologyEngine to public isFullscreen() : boolean from class org.terasology.engine.subsystem.lwjgl.LwjglDisplayDevice",
    "comment" : "<p>Method isFullScreen() was added to interface DisplayDevice, and all subclasses had to implement this method. There is no actual move.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public build() : TerasologyEngine extracted from public run() : void in class org.terasology.editor.TeraEd & moved to class org.terasology.engine.TerasologyEngineBuilder",
    "comment" : "Extract and Move to the inner class",
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood, Automatic",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private commonThreadPool : TaskMaster<Task> from class org.terasology.engine.subsystem.ThreadManagerSubsystem to private commonThreadPool : TaskMaster<Task> from class org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
    "comment" : "move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private logger : Logger from class org.terasology.engine.subsystem.ThreadManagerSubsystem to private logger : Logger from class org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
    "comment" : "move class/package",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private config : Config from class org.terasology.engine.TerasologyEngine to private config : Config from class org.terasology.engine.subsystem.common.ConfigurationSubsystem",
    "comment" : "<p>The moved attribute config is used by the moved methods <span class='blob-code-inner'><span class='pl-en'>checkServerIdentity</span>()</span>, <span class='blob-code-inner'><span class='pl-en'>validateServerIdentity</span>(), <span class='pl-en'>preInitialise</span>(), <span class='pl-en'>shutdown</span>()<br /></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Matin, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable lwjglCustomViewPort : LwjglCustomViewPort to lwjglPortlet : LwjglPortlet in method public run() : void from class org.terasology.editor.TeraEd",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable te : TerasologyEngine to display : DisplayDevice in method public fullscreen() : String from class org.terasology.logic.console.commands.CoreCommands",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter newContext : Context to rootContext : Context in method public initialise(rootContext Context) : void from class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter context : Context to rootContext : Context in method public postInitialise(rootContext Context) : void from class org.terasology.engine.subsystem.lwjgl.LwjglInput",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute subsystems : Deque<EngineSubsystem> to allSubsystems : Deque<EngineSubsystem> in class org.terasology.engine.TerasologyEngine",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute context : Context to config : RenderingConfig in class org.terasology.engine.subsystem.lwjgl.LwjglDisplayDevice",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute context : Context to rootContext : Context in class org.terasology.engine.TerasologyEngine",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter context : Context to rootContext : Context in method public initialise(rootContext Context) : void from class org.terasology.engine.subsystem.lwjgl.LwjglAudio",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter context : Context to rootContext : Context in method public initialise(rootContext Context) : void from class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter context : Context to rootContext : Context in method public preInitialise(rootContext Context) : void from class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter newContext : Context to rootContext : Context in method public postInitialise(rootContext Context) : void from class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shutdown(config Config) : void renamed to public preShutdown() : void in class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type lwjglCustomViewPort : LwjglCustomViewPort to lwjglPortlet : LwjglPortlet in method public run() : void from class org.terasology.editor.TeraEd",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type context : Context to config : RenderingConfig in class org.terasology.engine.subsystem.lwjgl.LwjglDisplayDevice",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type te : TerasologyEngine to display : DisplayDevice in method public fullscreen() : String from class org.terasology.logic.console.commands.CoreCommands",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute time : EngineTime to timeSubsystem : TimeSubsystem in class org.terasology.engine.TerasologyEngine",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'>context<span class='pl-k'>.</span>put(<span class='pl-smi'>Game</span><span class='pl-k'>.</span>class, <span class='pl-k'>new</span> <span class='pl-smi'>Game</span>(<span class='pl-c1'>this</span>, time));</span> -&gt; <span class='blob-code-inner blob-code-marker' data-code-marker=' '>rootContext<span class='pl-k'>.</span>put(<span class='pl-smi'>Game</span><span class='pl-k'>.</span>class, <span class='pl-k'>new</span> <span class='pl-smi'>Game</span>(<span class='pl-c1'>this</span>, timeSubsystem<span class='pl-k'>.</span>getEngineTime()));<br /></span>TimeSubSystem contains EngineTime</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter context : Context to rootContext : Context in method preInitialise(rootContext Context) : void in class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : "<p>interface methods</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter context : Context to rootContext : Context in method initialise(rootContext Context) : void in class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : "<p>interface methods</p>",
    "validation" : "CTP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type time : EngineTime to timeSubsystem : TimeSubsystem in class org.terasology.engine.TerasologyEngine",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type engine : TerasologyEngine to builder : TerasologyEngineBuilder in method public main(args String[]) : void in class org.terasology.engine.Terasology",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-smi'>variable still exists in child commit<br />TerasologyEngine</span> engine <span class='pl-k'>=</span> builder<span class='pl-k'>.</span>build();</span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private initConfig() : void from class org.terasology.engine.TerasologyEngine to public preInitialise(rootContext Context) : void from class org.terasology.engine.subsystem.common.ConfigurationSubsystem",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "FN",
      "purityComment" : "Severe Changes",
      "mappingState" : 5,
      "validationComment" : "Extract Method on top of the Move and Rename Method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private checkServerIdentity() : void extracted from private initConfig() : void in class org.terasology.engine.subsystem.common.ConfigurationSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public postUpdate(currentState GameState, delta float) : void renamed to public preUpdate(currentState GameState, delta float) : void in class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public preUpdate(currentState GameState, delta float) : void renamed to public postUpdate(currentState GameState, delta float) : void in class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public postInitialise(context Context) : void renamed to public preInitialise(context Context) : void in class org.terasology.engine.subsystem.lwjgl.LwjglTimer",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private initTimer(context Context) : void renamed to public getEngineTime() : EngineTime in class org.terasology.engine.subsystem.lwjgl.LwjglTimer",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.headless.HeadlessGraphics",
    "comment" : "<p>Method <span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>public</span> <span class='pl-k'>void</span> shutdown(<span class='pl-smi x x-first'>Config</span><span class='x x-last'> config</span>)</span> exists in parent commit. Parmeter Config is removed.</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public initialise(newContext Context) : void renamed to public getName() : String in class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public preUpdate(currentState GameState, delta float) : void renamed to public initialise(rootContext Context) : void in class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private initOpenAL(context Context) : void renamed to public initialise(rootContext Context) : void in class org.terasology.engine.subsystem.lwjgl.LwjglAudio",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public preInitialise(rootContext Context) : void from class org.terasology.engine.subsystem.common.ConfigurationSubsystem",
    "comment" : "<p>due to Move And Rename Method private initConfig() : void from class org.terasology.engine.TerasologyEngine to public preInitialise(rootContext Context) : void from class org.terasology.engine.subsystem.common.ConfigurationSubsystem</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter rootContext : Context in method public preInitialise(rootContext Context) : void from class org.terasology.engine.subsystem.common.ConfigurationSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter config : Config in method public shutdown(config Config) : void from class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter config : Config in method private initDisplay(config Config, lwjglDisplay LwjglDisplayDevice) : void from class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter config : Config in method public shutdown(config Config) : void from class org.terasology.engine.subsystem.EngineSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public shutdown(config Config) : void from class org.terasology.engine.subsystem.headless.HeadlessAudio",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public shutdown(config Config) : void from class org.terasology.engine.subsystem.headless.HeadlessInput",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public postUpdate(currentState GameState, delta float) : void from class org.terasology.engine.subsystem.headless.HeadlessTimer",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public shutdown(config Config) : void from class org.terasology.engine.subsystem.lwjgl.LwjglAudio",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public shutdown(config Config) : void from class org.terasology.engine.subsystem.lwjgl.LwjglInput",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public registerCoreAssetTypes(assetTypeManager ModuleAwareAssetTypeManager) : void from class org.terasology.engine.subsystem.lwjgl.LwjglTimer",
    "comment" : "<p>deleted method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public preInitialise(rootContext Context) : void from class org.terasology.engine.subsystem.common.ConfigurationSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter context : Context to rootContext : Context in method public preInitialise(rootContext Context) : void from class org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable rc : RenderingConfig in method private initDisplay(config Config, lwjglDisplay LwjglDisplayDevice) : void from class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable t : RuntimeException to e : RuntimeException in method private cleanup() : void from class org.terasology.engine.TerasologyEngine",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter config : Config in method public shutdown(config Config) : void from class org.terasology.engine.subsystem.headless.HeadlessGraphics",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2583
}, {
  "id" : 1149690,
  "repository" : "https://github.com/JetBrains/intellij-community.git",
  "sha1" : "6905d569a1e39d0d7b1ec5ceee4f0bbe60b85947",
  "url" : "https://github.com/JetBrains/intellij-community/commit/6905d569a1e39d0d7b1ec5ceee4f0bbe60b85947",
  "author" : "liana.bakradze",
  "time" : "7/24/15 4:28 PM",
  "refactorings" : [ {
    "type" : "Extract Interface",
    "description" : "Extract Interface com.jetbrains.edu.courseFormat.Named from class com.jetbrains.edu.courseFormat.Lesson",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Interface",
    "description" : "Extract Interface com.jetbrains.edu.courseFormat.Named from class com.jetbrains.edu.courseFormat.Task",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public processRename(project Project, directory PsiDirectory, course Course) : boolean from class com.jetbrains.edu.coursecreator.actions.CCRenameTask to private renameTask(project Project, course Course, directory PsiDirectory) : void from class com.jetbrains.edu.coursecreator.CCRenameHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Severe Changes",
      "mappingState" : 5,
      "validationComment" : "non-mapped leaves are not justifiable"
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public getFolderName() : String inlined to private renameTask(project Project, course Course, directory PsiDirectory) : void in class com.jetbrains.edu.coursecreator.CCRenameHandler",
    "comment" : "<p>We have a sequence of refactoring operations.<br />Move And Rename Method public processRename(project Project, directory PsiDirectory, course Course) : boolean from class com.jetbrains.edu.coursecreator.actions.CCRenameTask to private renameTask(project Project, course Course, directory PsiDirectory) : void from class com.jetbrains.edu.coursecreator.CCRenameHandler<br />then<br />private static void processRename(@NotNull final Named named, String namePrefix, @NotNull final Project project)<br />is extracted from private renameTask(project Project, course Course, directory PsiDirectory) : void<br />In the call to the extracted method EduNames.TASK is inlined from getFolderName()<br />processRename(task, EduNames.TASK, project);<br /><br /></p>",
    "validation" : "TP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private processRename(named Named, namePrefix String, project Project) : void extracted from public processRename(project Project, directory PsiDirectory, course Course) : boolean in class com.jetbrains.edu.coursecreator.CCRenameHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "logic has been changed. Method processRename first moved and rename into the CCRenameHandler new class. Then, the processRename method has been extracted from it"
    }
  }, {
    "type" : "Reorder Parameter",
    "description" : "Reorder Parameter [project : Project, directory : PsiDirectory, course : Course] to [project : Project, course : Course, directory : PsiDirectory] in method private renameTask(project Project, course Course, directory PsiDirectory) : void from class com.jetbrains.edu.coursecreator.CCRenameHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter directory : PsiDirectory in method private renameTask(project Project, course Course, directory PsiDirectory) : void from class com.jetbrains.edu.coursecreator.CCRenameHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter project : Project in method private renameTask(project Project, course Course, directory PsiDirectory) : void from class com.jetbrains.edu.coursecreator.CCRenameHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier public to private in method private renameTask(project Project, course Course, directory PsiDirectory) : void from class com.jetbrains.edu.coursecreator.CCRenameHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public processRename(project Project, directory PsiDirectory, course Course) : boolean from class com.jetbrains.edu.coursecreator.actions.CCRenameTask",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method private renameTask(project Project, course Course, directory PsiDirectory) : void from class com.jetbrains.edu.coursecreator.CCRenameHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method private renameTask(project Project, course Course, directory PsiDirectory) : void from class com.jetbrains.edu.coursecreator.CCRenameHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter project : Project in method private renameTask(project Project, course Course, directory PsiDirectory) : void from class com.jetbrains.edu.coursecreator.CCRenameHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter directory : PsiDirectory in method private renameTask(project Project, course Course, directory PsiDirectory) : void from class com.jetbrains.edu.coursecreator.CCRenameHandler",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable directoryName : String in method private renameTask(project Project, course Course, directory PsiDirectory) : void from class com.jetbrains.edu.coursecreator.CCRenameHandler",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 14895
}, {
  "id" : 1149799,
  "repository" : "https://github.com/neo4j/neo4j.git",
  "sha1" : "021d17c8234904dcb1d54596662352395927fe7b",
  "url" : "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
  "author" : "Rickard O?berg",
  "time" : "7/25/15 7:28 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private singlePropertyCursor : InstanceCache<StoreSinglePropertyCursor> from class org.neo4j.kernel.impl.api.store.StoreStatement to private singlePropertyCursor : InstanceCache<StoreSinglePropertyCursor> from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private allPropertyCursor : InstanceCache<StorePropertyCursor> from class org.neo4j.kernel.impl.api.store.StoreStatement to private allPropertyCursor : InstanceCache<StorePropertyCursor> from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private nodeDegreeByDirection(nodeId long, group RelationshipGroupRecord, direction Direction) : long from class org.neo4j.kernel.impl.api.store.DiskLayer to private nodeDegreeByDirection(group RelationshipGroupRecord, direction Direction) : long from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Class",
    "description" : "Move Class org.neo4j.kernel.impl.api.store.DiskLayer.AllStoreIdIterator moved to org.neo4j.kernel.impl.api.store.StoreStatement.AllStoreIdIterator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private singleLabelCursor : InstanceCache<StoreSingleLabelCursor> from class org.neo4j.kernel.impl.api.store.StoreStatement to private singleLabelCursor : InstanceCache<StoreSingleLabelCursor> from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private assertHasRelationships(node long) : void extracted from private deleteNode1(node long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty) : void in class org.neo4j.kernel.impl.store.TestNeoStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "try-catch has been added. Also, the arguemtn inside the assertion has been changed"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private assertHasRelationships(node long) : void extracted from private deleteNode2(node long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty) : void in class org.neo4j.kernel.impl.store.TestNeoStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "try-catch has been added. Also, the arguemtn inside the assertion has been changed"
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public GET_LABEL : ToIntFunction<LabelItem> from class org.neo4j.kernel.api.cursor.LabelItem to public GET_LABEL : ToIntFunction<LabelItem> from class org.neo4j.kernel.api.cursor.NodeItem",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private directionOf(nodeId long, relationshipId long, startNode long, endNode long) : Direction from class org.neo4j.kernel.impl.api.store.DiskLayer to private directionOf(nodeId long, relationshipId long, startNode long, endNode long) : Direction from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private singlePropertyCursor : InstanceCache<StoreSinglePropertyCursor> from class org.neo4j.kernel.impl.api.store.StoreStatement to private singlePropertyCursor : InstanceCache<StoreSinglePropertyCursor> from class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private allPropertyCursor : InstanceCache<StorePropertyCursor> from class org.neo4j.kernel.impl.api.store.StoreStatement to private allPropertyCursor : InstanceCache<StorePropertyCursor> from class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private countByFirstPrevPointer(nodeId long, relationshipId long) : long from class org.neo4j.kernel.impl.api.store.DiskLayer to private countByFirstPrevPointer(relationshipId long) : long from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private labelCursor : InstanceCache<StoreLabelCursor> from class org.neo4j.kernel.impl.api.store.StoreStatement to private labelCursor : InstanceCache<StoreLabelCursor> from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private nodeRelationshipCursor : InstanceCache<StoreNodeRelationshipCursor> from class org.neo4j.kernel.impl.api.store.StoreStatement to private nodeRelationshipCursor : InstanceCache<StoreNodeRelationshipCursor> from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.neo4j.kernel.api.cursor.NodeItem.NodeItemHelper from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.neo4j.kernel.api.cursor.EntityItem.EntityItemHelper from class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.neo4j.kernel.api.cursor.EntityItem.EntityItemHelper from class org.neo4j.kernel.impl.api.cursor.TxAbstractRelationshipCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.neo4j.kernel.api.cursor.NodeItem.NodeItemHelper from class org.neo4j.kernel.impl.api.cursor.TxAbstractNodeCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public nodesGetAllCursor(statement StoreStatement) : Cursor<NodeItem> from class org.neo4j.kernel.impl.api.store.DiskLayer to public nodesGetAllCursor() : Cursor<NodeItem> from class org.neo4j.kernel.impl.api.store.StoreStatement",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public relationshipsGetAllCursor(storeStatement StoreStatement) : Cursor<RelationshipItem> from class org.neo4j.kernel.impl.api.store.DiskLayer to public relationshipsGetAllCursor() : Cursor<RelationshipItem> from class org.neo4j.kernel.impl.api.store.StoreStatement",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private assertHasRelationships(node long) : void extracted from private deleteRel1(rel long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty, firstNode long, secondNode long, relType int) : void in class org.neo4j.kernel.impl.store.TestNeoStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private assertHasRelationships(node long) : void extracted from private deleteRel2(rel long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty, firstNode long, secondNode long, relType int) : void in class org.neo4j.kernel.impl.store.TestNeoStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method public acquireLabelCursor(labels long[]) : Cursor<LabelItem> moved from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor & inlined to public labels() : Cursor<LabelItem>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method public acquirePropertyCursor(firstPropertyRecordId long) : Cursor<PropertyItem> moved from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor & inlined to public properties() : Cursor<PropertyItem>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method public acquirePropertyCursor(firstPropertyRecordId long) : Cursor<PropertyItem> moved from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor & inlined to public properties() : Cursor<PropertyItem>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method public acquireSingleLabelCursor(labels long[], labelId int) : Cursor<LabelItem> moved from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor & inlined to public label(labelId int) : Cursor<LabelItem>",
    "comment" : "<p>Moved from StoreStatement and Inlined into StoreAbstractNodeCursor<br />acquireSingleLabelCursor(..) is in StoreStatement in the before refactoring version</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Laleh, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method public acquireSinglePropertyCursor(firstPropertyRecordId long, propertyKeyId int) : Cursor<PropertyItem> moved from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor & inlined to public property(propertyKeyId int) : Cursor<PropertyItem>",
    "comment" : "<p>acquireSinglePropertyCursor(..) is in StoreStatement in the before refactoring version</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method public acquireSinglePropertyCursor(firstPropertyRecordId long, propertyKeyId int) : Cursor<PropertyItem> moved from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor & inlined to public property(propertyKeyId int) : Cursor<PropertyItem>",
    "comment" : "<p>acquireSinglePropertyCursor(..) is in StoreStatement in the before refactoring version</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter relationshipStore : RelationshipStore to neoStore : NeoStore in method public StoreIteratorRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, storeStatement StoreStatement, instanceCache InstanceCache<StoreIteratorRelationshipCursor>) from class org.neo4j.kernel.impl.api.store.StoreIteratorRelationshipCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter nodeStore : NodeStore to neoStore : NeoStore in method public StoreIteratorNodeCursor(nodeRecord NodeRecord, neoStore NeoStore, storeStatement StoreStatement, instanceCache Consumer<StoreIteratorNodeCursor>) from class org.neo4j.kernel.impl.api.store.StoreIteratorNodeCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter nodeStore : NodeStore to neoStore : NeoStore in method public StoreSingleNodeCursor(nodeRecord NodeRecord, neoStore NeoStore, storeStatement StoreStatement, instanceCache Consumer<StoreSingleNodeCursor>) from class org.neo4j.kernel.impl.api.store.StoreSingleNodeCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter relationshipStore : RelationshipStore to neoStore : NeoStore in method public StoreNodeRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, groupRecord RelationshipGroupRecord, storeStatement StoreStatement, instanceCache Consumer<StoreNodeRelationshipCursor>) from class org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter relationshipStore : RelationshipStore to neoStore : NeoStore in method public StoreSingleRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, storeStatement StoreStatement, instanceCache InstanceCache<StoreSingleRelationshipCursor>) from class org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter nodeStore : NodeStore to neoStore : NeoStore in method public StoreAbstractNodeCursor(nodeRecord NodeRecord, neoStore NeoStore, storeStatement StoreStatement) from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter startNodeId : long to startNode : NodeItem in method public relationshipCreate(state KernelStatement, relationshipTypeId int, startNode NodeItem, endNode NodeItem) : long from class org.neo4j.kernel.impl.api.LockingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter endNodeId : long to endNode : NodeItem in method public relationshipCreate(state KernelStatement, relationshipTypeId int, startNode NodeItem, endNode NodeItem) : long from class org.neo4j.kernel.impl.api.LockingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute nodeStore : NodeStore to neoStore : NeoStore in class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter relationshipStore : RelationshipStore to neoStore : NeoStore in method public StoreAbstractRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, storeStatement StoreStatement) from class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type startNodeId : long to startNodeId : NodeItem in method public relationshipCreate(statement KernelStatement, relationshipTypeId int, startNodeId NodeItem, endNodeId NodeItem) : long from class org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type endNodeId : long to endNodeId : NodeItem in method public relationshipCreate(statement KernelStatement, relationshipTypeId int, startNodeId NodeItem, endNodeId NodeItem) : long from class org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type startNodeId : long to startNodeId : NodeItem in method public relationshipCreate(statement KernelStatement, relationshipTypeId int, startNodeId NodeItem, endNodeId NodeItem) : long from class org.neo4j.kernel.impl.api.GuardingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type endNodeId : long to endNodeId : NodeItem in method public relationshipCreate(statement KernelStatement, relationshipTypeId int, startNodeId NodeItem, endNodeId NodeItem) : long from class org.neo4j.kernel.impl.api.GuardingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type outgoing : int to outgoing : long in method private updateRelationshipsCountsFromDegrees(type int, label int, outgoing long, incoming long) : void from class org.neo4j.kernel.impl.api.KernelTransactionImplementation",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type incoming : int to incoming : long in method private updateRelationshipsCountsFromDegrees(type int, label int, outgoing long, incoming long) : void from class org.neo4j.kernel.impl.api.KernelTransactionImplementation",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type nodeStore : NodeStore to neoStore : NeoStore in method public StoreAbstractNodeCursor(nodeRecord NodeRecord, neoStore NeoStore, storeStatement StoreStatement) from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type relationshipStore : RelationshipStore to neoStore : NeoStore in method public StoreAbstractRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, storeStatement StoreStatement) from class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type nodeStore : NodeStore to neoStore : NeoStore in method public StoreIteratorNodeCursor(nodeRecord NodeRecord, neoStore NeoStore, storeStatement StoreStatement, instanceCache Consumer<StoreIteratorNodeCursor>) from class org.neo4j.kernel.impl.api.store.StoreIteratorNodeCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type relationshipStore : RelationshipStore to neoStore : NeoStore in method public StoreIteratorRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, storeStatement StoreStatement, instanceCache InstanceCache<StoreIteratorRelationshipCursor>) from class org.neo4j.kernel.impl.api.store.StoreIteratorRelationshipCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type nodeStore : NodeStore to neoStore : NeoStore in method public StoreSingleNodeCursor(nodeRecord NodeRecord, neoStore NeoStore, storeStatement StoreStatement, instanceCache Consumer<StoreSingleNodeCursor>) from class org.neo4j.kernel.impl.api.store.StoreSingleNodeCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type relationshipStore : RelationshipStore to neoStore : NeoStore in method public StoreSingleRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, storeStatement StoreStatement, instanceCache InstanceCache<StoreSingleRelationshipCursor>) from class org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type startNodeId : long to startNodeId : NodeItem in method public relationshipCreate(statement KernelStatement, relationshipTypeId int, startNodeId NodeItem, endNodeId NodeItem) : long from class org.neo4j.kernel.impl.api.operations.EntityWriteOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type endNodeId : long to endNodeId : NodeItem in method public relationshipCreate(statement KernelStatement, relationshipTypeId int, startNodeId NodeItem, endNodeId NodeItem) : long from class org.neo4j.kernel.impl.api.operations.EntityWriteOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type startNodeId : long to startNode : NodeItem in method public relationshipCreate(state KernelStatement, relationshipTypeId int, startNode NodeItem, endNode NodeItem) : long from class org.neo4j.kernel.impl.api.LockingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type endNodeId : long to endNode : NodeItem in method public relationshipCreate(state KernelStatement, relationshipTypeId int, startNode NodeItem, endNode NodeItem) : long from class org.neo4j.kernel.impl.api.LockingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type nodeStore : NodeStore to neoStore : NeoStore in class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type relationshipStore : RelationshipStore to neoStore : NeoStore in method public StoreNodeRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, groupRecord RelationshipGroupRecord, storeStatement StoreStatement, instanceCache Consumer<StoreNodeRelationshipCursor>) from class org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter node : NodeItem to startNode : NodeItem in method public relationshipCreate(state KernelStatement, relationshipTypeId int, startNode NodeItem, endNode NodeItem) : long in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter node : NodeItem to endNode : NodeItem in method public relationshipCreate(state KernelStatement, relationshipTypeId int, startNode NodeItem, endNode NodeItem) : long in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter groupStore : RelationshipGroupStore to neoStore : NeoStore in method public StoreNodeRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, groupRecord RelationshipGroupRecord, storeStatement StoreStatement, instanceCache Consumer<StoreNodeRelationshipCursor>) in class org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable relationships : PrimitiveLongIterator to nodeCursor : Cursor<NodeItem> in method private validateNodeRel1(node long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty, rel1 long, rel2 long, relType1 int, relType2 int) : void in class org.neo4j.kernel.impl.store.TestNeoStore",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>Cursor&lt;<span class='pl-smi'>RelationshipItem</span>&gt;</span> relationships <span class='pl-k'>=</span> nodeCursor<span class='pl-k'>.</span>get()<span class='pl-k'>.</span>relationships( <span class='pl-smi'>Direction</span><span class='pl-c1'><span class='pl-k'>.</span>BOTH</span> )</span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable relationships : PrimitiveLongIterator to nodeCursor : Cursor<NodeItem> in method private validateNodeRel2(node long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty, rel1 long, rel2 long, relType1 int, relType2 int) : void in class org.neo4j.kernel.impl.store.TestNeoStore",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>Cursor&lt;<span class='pl-smi'>RelationshipItem</span>&gt;</span> relationships <span class='pl-k'>=</span> nodeCursor<span class='pl-k'>.</span>get()<span class='pl-k'>.</span>relationships( <span class='pl-smi'>Direction</span><span class='pl-c1'><span class='pl-k'>.</span>BOTH</span> )</span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable relationships : PrimitiveLongIterator to nodeCursor : Cursor<NodeItem> in method public testRels2() : void in class org.neo4j.kernel.impl.store.TestNeoStore",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-smi'>PrimitiveLongIterator</span> relationships <span class='pl-k'>=</span> nodeCursor<span class='pl-k'>.</span>get()<span class='pl-k'>.</span>getRelationships( <span class='pl-smi'>Direction</span><span class='pl-c1'><span class='pl-k'>.</span>BOTH</span> );</span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type groupStore : RelationshipGroupStore to neoStore : NeoStore in method public StoreNodeRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, groupRecord RelationshipGroupRecord, storeStatement StoreStatement, instanceCache Consumer<StoreNodeRelationshipCursor>) in class org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public nodeGetDegree(statement StoreStatement, nodeId long, direction Direction) : int from class org.neo4j.kernel.impl.api.store.DiskLayer to public degree(direction Direction) : int from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Severe Changes",
      "mappingState" : 5,
      "validationComment" : "changes are not justifiable"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public nodeGetDegree(statement StoreStatement, nodeId long, direction Direction, relType int) : int from class org.neo4j.kernel.impl.api.store.DiskLayer to public degree(direction Direction, relType int) : int from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Severe Changes",
      "mappingState" : 5,
      "validationComment" : "changes are not justifiable"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public nodeGetLabels(txStateHolder TxStateHolder, storeStatement StoreStatement, node NodeItem) : PrimitiveIntIterator from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations to public getLabels() : PrimitiveIntIterator from class org.neo4j.kernel.api.cursor.NodeItem.NodeItemHelper",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Changes are within the Move Method refactoring mechanics\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n- Move Attribute-",
      "mappingState" : 1,
      "validationComment" : "Move Attribute and Move Method mechanic changes on top"
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public nodeGetRelationships(state KernelStatement, node NodeItem, direction Direction, relTypes int[]) : RelationshipIterator from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations to public getRelationships(direction Direction, relTypes int[]) : RelationshipIterator from class org.neo4j.kernel.api.cursor.NodeItem.NodeItemHelper",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Changes are within the Move Method refactoring mechanics\n",
      "mappingState" : 1,
      "validationComment" : "Move Attribute and Move Method mechanic changes on top"
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method public acquireNodeRelationshipCursor(dense boolean, nextRel long, id long, direction Direction, relTypes int[]) : Cursor<RelationshipItem> moved from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor & inlined to public relationships(direction Direction, relTypes int...) : Cursor<RelationshipItem>",
    "comment" : "<p>Its move and inline&nbsp;</p><p>from :&nbsp;<a href='https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b#diff-4159f341b81c35652144c22af5ca85dcL180'>https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b#diff-4159f341b81c35652144c22af5ca85dcL180</a></p><p>to:&nbsp;<a href='https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b#diff-99399908a4ac886aea6563e0a228210fR152'>https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b#diff-99399908a4ac886aea6563e0a228210fR152</a></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method public acquireNodeRelationshipCursor(dense boolean, nextRel long, id long, direction Direction, relTypes int[]) : Cursor<RelationshipItem> moved from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor & inlined to public relationships(direction Direction) : Cursor<RelationshipItem>",
    "comment" : "<p>Idk, this one is like&nbsp;acquireNodeRelationshipCursor is inlined into two relationship() methods.&nbsp;</p><p>One I marked TP, do we count these as two different instances?&nbsp;</p><p>Can definition of inline contain multiple targets?</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public nodeHasLabel(state KernelStatement, node NodeItem, labelId int) : boolean from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations to public hasLabel(labelId int) : boolean from class org.neo4j.kernel.api.cursor.NodeItem.NodeItemHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Changes are within the Move Method refactoring mechanics\n",
      "mappingState" : 1,
      "validationComment" : "Move Method mechanics caused changes are on top"
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method public relationshipExists(state KernelStatement, relId long) : boolean moved from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations to class org.neo4j.kernel.impl.api.OperationsFacade & inlined to public relationshipExists(relId long) : boolean",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Inline Method",
    "description" : "Move And Inline Method public nodeExists(state KernelStatement, nodeId long) : boolean moved from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations to class org.neo4j.kernel.impl.api.OperationsFacade & inlined to public nodeExists(nodeId long) : boolean",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public nodesGetAllCursor(statement StoreStatement) : Cursor<NodeItem> from class org.neo4j.kernel.impl.api.store.DiskLayer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public relationshipsGetAllCursor(storeStatement StoreStatement) : Cursor<RelationshipItem> from class org.neo4j.kernel.impl.api.store.DiskLayer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter statement : StoreStatement in method public nodeGetDegree(statement StoreStatement, nodeId long, direction Direction) : int from class org.neo4j.kernel.impl.api.store.DiskLayer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter nodeId : long in method public nodeGetDegree(statement StoreStatement, nodeId long, direction Direction) : int from class org.neo4j.kernel.impl.api.store.DiskLayer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter statement : StoreStatement in method public nodeGetDegree(statement StoreStatement, nodeId long, direction Direction, relType int) : int from class org.neo4j.kernel.impl.api.store.DiskLayer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter nodeId : long in method public nodeGetDegree(statement StoreStatement, nodeId long, direction Direction, relType int) : int from class org.neo4j.kernel.impl.api.store.DiskLayer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter nodeId : long in method private nodeDegreeByDirection(nodeId long, group RelationshipGroupRecord, direction Direction) : long from class org.neo4j.kernel.impl.api.store.DiskLayer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter nodeId : long in method private countByFirstPrevPointer(nodeId long, relationshipId long) : long from class org.neo4j.kernel.impl.api.store.DiskLayer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter statement : StoreStatement in method public nodesGetAllCursor(statement StoreStatement) : Cursor<NodeItem> from class org.neo4j.kernel.impl.api.store.DiskLayer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter storeStatement : StoreStatement in method public relationshipsGetAllCursor(storeStatement StoreStatement) : Cursor<RelationshipItem> from class org.neo4j.kernel.impl.api.store.DiskLayer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter state : KernelStatement in method public nodeHasLabel(state KernelStatement, node NodeItem, labelId int) : boolean from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter node : NodeItem in method public nodeHasLabel(state KernelStatement, node NodeItem, labelId int) : boolean from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter txStateHolder : TxStateHolder in method public nodeGetLabels(txStateHolder TxStateHolder, storeStatement StoreStatement, node NodeItem) : PrimitiveIntIterator from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter storeStatement : StoreStatement in method public nodeGetLabels(txStateHolder TxStateHolder, storeStatement StoreStatement, node NodeItem) : PrimitiveIntIterator from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter node : NodeItem in method public nodeGetLabels(txStateHolder TxStateHolder, storeStatement StoreStatement, node NodeItem) : PrimitiveIntIterator from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter state : KernelStatement in method public nodeGetRelationships(state KernelStatement, node NodeItem, direction Direction, relTypes int[]) : RelationshipIterator from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter node : NodeItem in method public nodeGetRelationships(state KernelStatement, node NodeItem, direction Direction, relTypes int[]) : RelationshipIterator from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public labels() : Cursor<LabelItem> from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public properties() : Cursor<PropertyItem> from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public relationships(direction Direction) : Cursor<RelationshipItem> from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public properties() : Cursor<PropertyItem> from class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public nodeGetRelationships(state KernelStatement, node NodeItem, direction Direction) : RelationshipIterator from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations to public getRelationships(direction Direction) : RelationshipIterator from class org.neo4j.kernel.api.cursor.NodeItem.NodeItemHelper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Changes are within the Move Method refactoring mechanics\n",
      "mappingState" : 1,
      "validationComment" : "Move Method mechanics caused changes are on top"
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter state : KernelStatement in method public nodeGetRelationships(state KernelStatement, node NodeItem, direction Direction) : RelationshipIterator from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter node : NodeItem in method public nodeGetRelationships(state KernelStatement, node NodeItem, direction Direction) : RelationshipIterator from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type EntityNotFoundException in method public nodeGetDegree(statement StoreStatement, nodeId long, direction Direction) : int from class org.neo4j.kernel.impl.api.store.DiskLayer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type EntityNotFoundException in method public nodeGetDegree(statement StoreStatement, nodeId long, direction Direction, relType int) : int from class org.neo4j.kernel.impl.api.store.DiskLayer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter storeStatement : StoreStatement in method public StoreAbstractNodeCursor(nodeRecord NodeRecord, neoStore NeoStore, storeStatement StoreStatement) from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter neoStore : NeoStore in method public StoreAbstractNodeCursor(nodeRecord NodeRecord, neoStore NeoStore, storeStatement StoreStatement) from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Modifier",
    "description" : "Add Parameter Modifier final in parameter neoStore : NeoStore in method public StoreAbstractRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, storeStatement StoreStatement) from class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter startNode : NodeItem in method public relationshipCreate(state KernelStatement, relationshipTypeId int, startNode NodeItem, endNode NodeItem) : long from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter endNode : NodeItem in method public relationshipCreate(state KernelStatement, relationshipTypeId int, startNode NodeItem, endNode NodeItem) : long from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter startNodeId : long in method public relationshipCreate(state KernelStatement, relationshipTypeId int, startNodeId long, endNodeId long) : long from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter endNodeId : long in method public relationshipCreate(state KernelStatement, relationshipTypeId int, startNodeId long, endNodeId long) : long from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter groupStore : RelationshipGroupStore in method public StoreNodeRelationshipCursor(relationshipRecord RelationshipRecord, relationshipStore RelationshipStore, groupRecord RelationshipGroupRecord, groupStore RelationshipGroupStore, storeStatement StoreStatement, instanceCache Consumer<StoreNodeRelationshipCursor>) from class org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type relationships : PrimitiveLongIterator to relationships : Cursor<RelationshipItem> in method private validateNodeRel2(node long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty, rel1 long, rel2 long, relType1 int, relType2 int) : void from class org.neo4j.kernel.impl.store.TestNeoStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type relationships : PrimitiveLongIterator to relationships : Cursor<RelationshipItem> in method private validateNodeRel1(node long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty, rel1 long, rel2 long, relType1 int, relType2 int) : void from class org.neo4j.kernel.impl.store.TestNeoStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable node1 : NodeItem in method public shouldAcquireEntityWriteLockCreatingRelationship() : void from class org.neo4j.kernel.impl.api.LockingStatementOperationsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable node2 : NodeItem in method public shouldAcquireEntityWriteLockCreatingRelationship() : void from class org.neo4j.kernel.impl.api.LockingStatementOperationsTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 15734
}, {
  "id" : 1150670,
  "repository" : "https://github.com/neo4j/neo4j.git",
  "sha1" : "03ece4f24163204d8a3948eb53576f1feaa86a61",
  "url" : "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
  "author" : "Chris Vest",
  "time" : "7/27/15 6:06 AM",
  "refactorings" : [ {
    "type" : "Move Attribute",
    "description" : "Move Attribute private fileLock : FileLock from class org.neo4j.kernel.impl.store.CommonAbstractStore to class org.neo4j.io.pagecache.impl.SingleFilePageSwapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute private fileLock : FileLock from class org.neo4j.kernel.impl.store.standard.StoreOpenCloseCycle to class org.neo4j.io.pagecache.impl.SingleFilePageSwapper",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method protected releaseFileLockAndCloseFileChannel() : void renamed to protected closeFileChannel() : void in class org.neo4j.kernel.impl.store.CommonAbstractStore",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private storeLockException(message String, e Exception) : StoreLockException extracted from public checkLock(storeDir File) : void in class org.neo4j.kernel.StoreLocker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable resolver : DependencyResolver in method public shouldContainTransactionsThatHappenDuringBackupProcess() : void from class org.neo4j.backup.BackupServiceIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable resolver : DependencyResolver in method public run() : void from class org.neo4j.backup.BackupServiceIT.shouldContainTransactionsThatHappenDuringBackupProcess.execute.new Runnable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type channel : StoreChannel to exception : IOException in method private closeAndCollectExceptions(channelIndex int, exception IOException) : void in class org.neo4j.io.pagecache.impl.SingleFilePageSwapper",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public testDatabaseLocking() : void from class org.neo4j.kernel.impl.store.TestOsSpecificLocks to public mustPreventMultipleInstancesFromStartingOnSameStore() : void from class org.neo4j.kernel.StoreLockerTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Severe Changes",
      "mappingState" : 5,
      "validationComment" : "try-finally has been added to the moved method"
    }
  }, {
    "type" : "Move And Rename Class",
    "description" : "Move And Rename Class org.neo4j.kernel.impl.store.standard.NoOpStoreOpenCloseCycle moved and renamed to org.neo4j.io.pagecache.impl.FileLockException",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public tryLock(fileName File, channel StoreChannel) : FileLock renamed to public open(fileName File, mode String) : StoreChannel in class org.neo4j.kernel.StoreLockerTest.shouldNotObtainLockWhenStoreAlreadyInUse.fileSystemAbstraction",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter txIdFromOrigin : long in method private checkLastCommittedTxIdInLogAndNeoStore(txId long, txIdFromOrigin long) : void from class org.neo4j.backup.BackupServiceIT",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter fs : FileSystemAbstraction in method public StoreOpenCloseCycle(log Log, dbFileName File, format StoreFormat<?,?>, fs FileSystemAbstraction) from class org.neo4j.kernel.impl.store.standard.StoreOpenCloseCycle",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @SuppressWarnings(\"UnusedParameters\") in parameter name : String in method public FileSystemAbstractionInterruptionTest(name String, factory Factory<FileSystemAbstraction>) from class org.neo4j.io.fs.FileSystemAbstractionInterruptionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 4635
}, {
  "id" : 1152358,
  "repository" : "https://github.com/hibernate/hibernate-orm.git",
  "sha1" : "0b6ea757e34a63b1421b77ed5fbb61398377aab1",
  "url" : "https://github.com/hibernate/hibernate-orm/commit/0b6ea757e34a63b1421b77ed5fbb61398377aab1",
  "author" : "Gail Badner",
  "time" : "7/29/15 12:10 AM",
  "refactorings" : [ {
    "type" : "Move Class",
    "description" : "Move Class org.hibernate.jpa.test.callbacks.EntityWithLazyProperty moved to org.hibernate.jpa.test.instrument.domain.EntityWithLazyProperty",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private checkLazyField(entity EntityWithLazyProperty, em EntityManager, expected byte[]) : void from class org.hibernate.jpa.test.callbacks.CallbacksTest to private checkLazyField(entity EntityWithLazyProperty, em EntityManager, expected byte[]) : void from class org.hibernate.jpa.test.instrument.cases.TestLazyPropertyOnPreUpdateExecutable",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method public testJpaFlushEntityEventListener() : void from class org.hibernate.jpa.test.callbacks.CallbacksTest to public execute() : void from class org.hibernate.jpa.test.instrument.cases.TestLazyPropertyOnPreUpdateExecutable",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "TP",
      "purityComment" : "Identical statements",
      "mappingState" : 1,
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public execute() : void from class org.hibernate.jpa.test.instrument.cases.TestLazyPropertyOnPreUpdateExecutable",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Test in method public testJpaFlushEntityEventListener() : void from class org.hibernate.jpa.test.callbacks.CallbacksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @TestForIssue(jiraKey = \"HHH-7573\") in method public testJpaFlushEntityEventListener() : void from class org.hibernate.jpa.test.callbacks.CallbacksTest",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 5200
}, {
  "id" : 1153762,
  "repository" : "https://github.com/netty/netty.git",
  "sha1" : "d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
  "url" : "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
  "author" : "Jakob Buchgraber",
  "time" : "7/30/15 2:38 PM",
  "refactorings" : [ {
    "type" : "Inline Method",
    "description" : "Inline Method private comparator(ignoreCase boolean) : Comparator<CharSequence> inlined to public contains(name CharSequence, value CharSequence, ignoreCase boolean) : boolean in class io.netty.handler.codec.DefaultTextHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Inline Method happened inside the method argument. The mapping is not accurate!"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public as(value byte[]) : ByteString renamed to public bs(value byte[]) : ByteString in class io.netty.handler.codec.http2.Http2TestUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getInt(name T, defaultValue short) : short renamed to public getShort(name T, defaultValue short) : short in class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getInt(name T, defaultValue short) : short renamed to public getShort(name T, defaultValue short) : short in class io.netty.handler.codec.EmptyHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public visit(entry Entry<ByteString,ByteString>) : boolean renamed to public translate(entry Entry<ByteString,ByteString>) : void in class io.netty.handler.codec.http2.HttpUtil.Http2ToHttpHeaderTranslator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public visit(entry Entry<CharSequence,CharSequence>) : boolean renamed to public encode(entry Entry<CharSequence,CharSequence>) : void in class io.netty.handler.codec.AsciiHeadersEncoder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class io.netty.handler.codec.DefaultTextHeaders.DefaultTextValueTypeConverter renamed to io.netty.handler.codec.DefaultTextHeaders.CharSequenceConverter",
    "comment" : "<p>All methods are common between the two classes. CharSequenceConverter declares an additional field<br />public static final CharSequenceConverter INSTANCE = new CharSequenceConverter();</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class io.netty.handler.codec.http.DefaultHttpHeaders.HttpHeadersValidationConverter renamed to io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
    "comment" : "<p>Matin: FP</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-2x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class io.netty.handler.codec.http.DefaultLastHttpContent.TrailingHttpHeaders.TrailingHttpHeadersNameConverter renamed to io.netty.handler.codec.http.DefaultLastHttpContent.TrailingHttpHeaders.TrailingHttpHeadersNameValidator",
    "comment" : "<p>Matin: FP</p><p>We already accepted the only method of this class to be a rename, so http://refactoring.encs.concordia.ca/oracle/refactoring-details/1153762/3736</p>",
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public visit(entry Entry<CharSequence,CharSequence>) : boolean renamed to public encoderHeader(name CharSequence, value CharSequence, buf ByteBuf) : void in class io.netty.handler.codec.http.HttpHeadersEncoder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public convertName(name CharSequence) : CharSequence renamed to public validate(name CharSequence) : void in class io.netty.handler.codec.http.DefaultLastHttpContent.TrailingHttpHeaders.TrailingHttpHeadersNameValidator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private convertName(name T) : T renamed to private validateName(name T) : void in class io.netty.handler.codec.DefaultHeaders",
    "comment" : "<p>Matin: FP&nbsp;</p><p>convertName() used to (indirectly) call validateName(), which does the same thing as validate() which is now callsed in validateName. So this is TP</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public headersWithSameValuesShouldBeEquivalent() : void renamed to public headersWithDifferentNamesAndValuesShouldNotBeEquivalent() : void in class io.netty.handler.codec.DefaultBinaryHeadersTest",
    "comment" : "Matin: FP",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public remove() : void from class io.netty.handler.codec.DefaultHeaders.KeyValueHeaderIterator to public remove() : void from class io.netty.handler.codec.DefaultHeaders.NameValueIterator",
    "comment" : "Implement the same interfacec. Matin: FP",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private isList(value Object) : boolean extracted from public get(name T) : T in class io.netty.handler.codec.DefaultHeaders",
    "comment" : "<p>The code in method isList(value Object) does not exist inside the original method. It seems that the functionality of the method is re-implemented with some new logic.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private isList(value Object) : boolean extracted from public getAndRemove(name T) : T in class io.netty.handler.codec.DefaultHeaders",
    "comment" : "<p>The code in method isList(value Object) does not exist inside the original method. It seems that the functionality of the method is re-implemented with some new logic.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private isList(value Object) : boolean extracted from public getAll(name T) : List<T> in class io.netty.handler.codec.DefaultHeaders",
    "comment" : "<p>The code in method isList(value Object) does not exist inside the original method. It seems that the functionality of the method is re-implemented with some new logic.</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh, Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private setAllVisitor() : EntryVisitor<T> inlined to public setAll(headers Headers<? extends T>) : Headers<T> in class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public entriesConverted() : List<Entry<ConvertedType,ConvertedType>> inlined to public iteratorConverted() : Iterator<Entry<ConvertedType,ConvertedType>> in class io.netty.handler.codec.EmptyConvertibleHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public entries() : List<Entry<T,T>> inlined to public iterator() : Iterator<Entry<T,T>> in class io.netty.handler.codec.EmptyHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RMiner-1x",
    "validators" : "Laleh",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private validateValue(seq CharSequence) : void inlined to public convertObject(value Object) : CharSequence in class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
    "comment" : "<p>Since class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator is a new class =&gt; FP</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setAllShouldMergeHeaders() : void renamed to public setAllShouldOverwriteSomeAndLeaveOthersUntouched() : void in class io.netty.handler.codec.DefaultBinaryHeadersTest",
    "comment" : "<p>new</p><p>The bodies of the two methods are different. There are statements that are repeated, but they are repeated in other methods as well.</p>",
    "validation" : "FP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method public contains(name T, value T, keyComparator Comparator<? super T>, valueComparator Comparator<? super T>) : boolean inlined to public contains(name T, value T, valueComparator Comparator<? super T>) : boolean in class io.netty.handler.codec.DefaultHeaders",
    "comment" : "<p>new</p><p>The body of the inlined method is not similar to the statements added instead of the method call</p>",
    "validation" : "FP",
    "detectionTools" : "RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public setShouldReplacePreviousValues() : void renamed to public setShouldOverWritePreviousValue() : void in class io.netty.handler.codec.DefaultBinaryHeadersTest",
    "comment" : "<p>new</p><p>It seems that the two methods are doing almost the same thing.</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable h1 : DefaultBinaryHeaders to headers : DefaultBinaryHeaders in method public setShouldOverWritePreviousValue() : void from class io.netty.handler.codec.DefaultBinaryHeadersTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable e : HeaderEntry to value : Object in method public get(name T) : T from class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable e : HeaderEntry to value : Object in method public getAll(name T) : List<T> from class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable v : T to value : T in method public set(name T, values Iterable<? extends T>) : Headers<T> from class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable visitor : Http2ToHttpHeaderTranslator to translator : Http2ToHttpHeaderTranslator in method public addHttp2ToHttpHeaders(streamId int, sourceHeaders Http2Headers, destinationMessage FullHttpMessage, addToTrailer boolean) : void from class io.netty.handler.codec.http2.HttpUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable h2 : DefaultHeaders<T> to other : DefaultHeaders<T> in method public equals(o Object) : boolean from class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable value : ByteString in method public encodeHeaders(headers Http2Headers, buffer ByteBuf) : void from class io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable name : ByteString in method public encodeHeaders(headers Http2Headers, buffer ByteBuf) : void from class io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Parameter",
    "description" : "Merge Parameter [keyComparator : Comparator<? super UnconvertedType>, valueComparator : Comparator<? super UnconvertedType>] to map : Map<UnconvertedType,Object> in method public DefaultConvertibleHeaders(map Map<UnconvertedType,Object>, nameValidator NameValidator<UnconvertedType>, valueConverter ValueConverter<UnconvertedType>, typeConverter TypeConverter<UnconvertedType,ConvertedType>) from class io.netty.handler.codec.DefaultConvertibleHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Merge Variable",
    "description" : "Merge Variable [name : ByteString, value : ByteString] to header : Entry<ByteString,ByteString> in method public encodeHeaders(headers Http2Headers, buffer ByteBuf) : void from class io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter comparator : Comparator<? super T> to valueComparator : Comparator<? super T> in method public contains(name T, value T, valueComparator Comparator<? super T>) : boolean from class io.netty.handler.codec.EmptyHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter comparator : Comparator<? super T> to valueComparator : Comparator<? super T> in method public contains(name T, value T, valueComparator Comparator<? super T>) : boolean from class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter comparator : Comparator<? super T> to valueComparator : Comparator<? super T> in method public contains(name T, value T, valueComparator Comparator<? super T>) : boolean from class io.netty.handler.codec.Headers",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public getInt(name T, defaultValue short) : short renamed to public getShort(name T, defaultValue short) : short in class io.netty.handler.codec.Headers",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type headers : Headers<T> to headers : Headers<? extends T> in method public set(headers Headers<? extends T>) : Headers<T> from class io.netty.handler.codec.DefaultHeaders",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type headers : Headers<T> to headers : Headers<? extends T> in method public add(headers Headers<? extends T>) : Headers<T> from class io.netty.handler.codec.EmptyHeaders",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type headers : Headers<T> to headers : Headers<? extends T> in method public set(headers Headers<? extends T>) : Headers<T> from class io.netty.handler.codec.EmptyHeaders",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type headers : Headers<T> to headers : Headers<? extends T> in method public setAll(headers Headers<? extends T>) : Headers<T> from class io.netty.handler.codec.EmptyHeaders",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type headers : Headers<T> to headers : Headers<? extends T> in method public add(headers Headers<? extends T>) : Headers<T> from class io.netty.handler.codec.Headers",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type headers : Headers<T> to headers : Headers<? extends T> in method public set(headers Headers<? extends T>) : Headers<T> from class io.netty.handler.codec.Headers",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type headers : Headers<T> to headers : Headers<? extends T> in method public setAll(headers Headers<? extends T>) : Headers<T> from class io.netty.handler.codec.Headers",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method public translate(entry Entry<ByteString,ByteString>) : void from class io.netty.handler.codec.http2.HttpUtil.Http2ToHttpHeaderTranslator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method public encode(entry Entry<CharSequence,CharSequence>) : void from class io.netty.handler.codec.AsciiHeadersEncoder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type T to void in method private validateName(name T) : void from class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter value : byte to nameValidator : DefaultHeaders.NameValidator<CharSequence> in method protected DefaultHttpHeaders(validate boolean, nameValidator DefaultHeaders.NameValidator<CharSequence>, singleHeaderFields boolean) in class io.netty.handler.codec.http.DefaultHttpHeaders",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter seq : AsciiString to other : Object in method public equals(other Object) : boolean in class io.netty.handler.codec.http.DefaultHttpHeaders",
    "comment" : "<p>equals() is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter seq : CharSequence to value : Object in method public convertObject(value Object) : CharSequence in class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter entry : Entry<CharSequence,CharSequence> to value : CharSequence in method public encoderHeader(name CharSequence, value CharSequence, buf ByteBuf) : void in class io.netty.handler.codec.http.HttpHeadersEncoder",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>Entry&lt;<span class='pl-smi'>CharSequence</span>, <span class='pl-smi'>CharSequence</span>&gt;</span> <span class='pl-v'>entry</span></span> is split to parameters <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-smi'>CharSequence</span> <span class='pl-v'>name</span>, <span class='pl-smi'>CharSequence</span> <span class='pl-v'>value</span></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter name : ByteString to two : ByteString in method public compare(one ByteString, two ByteString) : int in class io.netty.handler.codec.http2.DefaultHttp2Headers.Http2HeaderNameComparator",
    "comment" : "<p>Http2HeaderNameComparator is a new inner class</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter headers : Http2Headers to str : String in method private bs(str String) : ByteString in class io.netty.handler.codec.http2.DefaultHttp2HeadersTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter nameConverter : NameConverter<ByteString> to nameValidator : NameValidator<ByteString> in method public DefaultBinaryHeaders(map Map<ByteString,Object>, nameValidator NameValidator<ByteString>) in class io.netty.handler.codec.DefaultBinaryHeaders",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter keyComparator : Comparator<? super UnconvertedType> to map : Map<UnconvertedType,Object> in method public DefaultConvertibleHeaders(map Map<UnconvertedType,Object>, nameValidator NameValidator<UnconvertedType>, valueConverter ValueConverter<UnconvertedType>, typeConverter TypeConverter<UnconvertedType,ConvertedType>) in class io.netty.handler.codec.DefaultConvertibleHeaders",
    "comment" : "<p>Merge Parameter [keyComparator : Comparator&lt;? super UnconvertedType&gt;, valueComparator : Comparator&lt;? super UnconvertedType&gt;] to map : Map&lt;UnconvertedType,Object&gt;</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter nameConverter : NameConverter<UnconvertedType> to nameValidator : NameValidator<UnconvertedType> in method public DefaultConvertibleHeaders(map Map<UnconvertedType,Object>, nameValidator NameValidator<UnconvertedType>, valueConverter ValueConverter<UnconvertedType>, typeConverter TypeConverter<UnconvertedType,ConvertedType>) in class io.netty.handler.codec.DefaultConvertibleHeaders",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter nameConverter : NameConverter<CharSequence> to map : Map<CharSequence,Object> in method public DefaultTextHeaders(map Map<CharSequence,Object>, nameValidator NameValidator<CharSequence>, valueConverter ValueConverter<CharSequence>, singleHeaderFields boolean) in class io.netty.handler.codec.DefaultTextHeaders",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter nameConverter : NameConverter<CharSequence> to nameValidator : NameValidator<CharSequence> in method public DefaultTextHeaders(map Map<CharSequence,Object>, nameValidator NameValidator<CharSequence>, valueConverter ValueConverter<CharSequence>, singleHeaderFields boolean) in class io.netty.handler.codec.DefaultTextHeaders",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type boolean to void in method public encoderHeader(name CharSequence, value CharSequence, buf ByteBuf) : void from class io.netty.handler.codec.http.HttpHeadersEncoder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Split Parameter",
    "description" : "Split Parameter entry : Entry<CharSequence,CharSequence> to [name : CharSequence, value : CharSequence] in method public encoderHeader(name CharSequence, value CharSequence, buf ByteBuf) : void from class io.netty.handler.codec.http.HttpHeadersEncoder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : HeaderEntry to value : Object in method public get(name T) : T from class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : HeaderEntry to value : Object in method public getAll(name T) : List<T> from class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Attribute",
    "description" : "Move And Rename Attribute private NO_VALIDATE_NAME_CONVERTER : HttpHeadersNameConverter renamed to public NO_NAME_VALIDATOR : NameValidator<CharSequence> and moved from class io.netty.handler.codec.http.DefaultHttpHeaders to class io.netty.handler.codec.DefaultTextHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type seq : AsciiString to other : Object in method public equals(other Object) : boolean in class io.netty.handler.codec.http.DefaultHttpHeaders",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type seq : CharSequence to value : Object in method public convertObject(value Object) : CharSequence in class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type headers : Http2Headers to str : String in method private bs(str String) : ByteString in class io.netty.handler.codec.http2.DefaultHttp2HeadersTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type nameConverter : NameConverter<ByteString> to nameValidator : NameValidator<ByteString> in method public DefaultBinaryHeaders(map Map<ByteString,Object>, nameValidator NameValidator<ByteString>) in class io.netty.handler.codec.DefaultBinaryHeaders",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type keyComparator : Comparator<? super UnconvertedType> to map : Map<UnconvertedType,Object> in method public DefaultConvertibleHeaders(map Map<UnconvertedType,Object>, nameValidator NameValidator<UnconvertedType>, valueConverter ValueConverter<UnconvertedType>, typeConverter TypeConverter<UnconvertedType,ConvertedType>) in class io.netty.handler.codec.DefaultConvertibleHeaders",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type nameConverter : NameConverter<UnconvertedType> to nameValidator : NameValidator<UnconvertedType> in method public DefaultConvertibleHeaders(map Map<UnconvertedType,Object>, nameValidator NameValidator<UnconvertedType>, valueConverter ValueConverter<UnconvertedType>, typeConverter TypeConverter<UnconvertedType,ConvertedType>) in class io.netty.handler.codec.DefaultConvertibleHeaders",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type nameConverter : NameConverter<CharSequence> to map : Map<CharSequence,Object> in method public DefaultTextHeaders(map Map<CharSequence,Object>, nameValidator NameValidator<CharSequence>, valueConverter ValueConverter<CharSequence>, singleHeaderFields boolean) in class io.netty.handler.codec.DefaultTextHeaders",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type nameConverter : NameConverter<CharSequence> to nameValidator : NameValidator<CharSequence> in method public DefaultTextHeaders(map Map<CharSequence,Object>, nameValidator NameValidator<CharSequence>, valueConverter ValueConverter<CharSequence>, singleHeaderFields boolean) in class io.netty.handler.codec.DefaultTextHeaders",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type AsciiString to CharSequence in method public convertTimeMillis(value long) : CharSequence from class io.netty.handler.codec.DefaultTextHeaders.CharSequenceConverter",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type NO_VALIDATE_OBJECT_CONVERTER : HttpHeadersValidationConverter to INSTANCE : HeaderValueConverter in class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverter",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type NO_VALIDATE_NAME_CONVERTER : HttpHeadersNameConverter to INSTANCE : HeaderValueConverterAndValidator in class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type VALIDATE_NAME_CONVERTER : TrailingHttpHeadersNameConverter to INSTANCE : TrailingHttpHeadersNameValidator in class io.netty.handler.codec.http.DefaultLastHttpContent.TrailingHttpHeaders.TrailingHttpHeadersNameValidator",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type i : int to serialVersionUID : long in class io.netty.handler.codec.http2.DefaultHttp2Headers.Http2HeaderNameComparator",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type OBJECT_TO_BYTE : ValueConverter<ByteString> to NO_NAME_VALIDATOR : NameValidator<ByteString> in class io.netty.handler.codec.DefaultBinaryHeaders",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type CHARSEQUECE_CASE_INSENSITIVE_HASH_CODE_GENERATOR : HashCodeGenerator<CharSequence> to NO_NAME_VALIDATOR : NameValidator<CharSequence> in class io.netty.handler.codec.DefaultTextHeaders",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type entry : Map.Entry<ByteString,ByteString> to entry : Entry<ByteString,ByteString> in method public iteratorShouldReturnAllNameValuePairs() : void in class io.netty.handler.codec.DefaultBinaryHeadersTest",
    "comment" : "<p>different methods contain the variables</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type c1 : int to c1 : char in method public compare(o1 CharSequence, o2 CharSequence) : int in class io.netty.util.AsciiString.CHARSEQUENCE_CASE_INSENSITIVE_ORDER",
    "comment" : "<p>The algorithm implemented in the method changed substantially</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type c2 : int to c2 : char in method public compare(o1 CharSequence, o2 CharSequence) : int in class io.netty.util.AsciiString.CHARSEQUENCE_CASE_INSENSITIVE_ORDER",
    "comment" : "<p>The algorithm implemented in the method changed substantially</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private validateValueChar(state int, c char, seq CharSequence) : int from class io.netty.handler.codec.http.DefaultHttpHeaders.HttpHeadersValidationConverter to private validateValueChar(seq CharSequence, state int, character char) : int from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
    "comment" : "<p>HeaderValueConverterAndValidator is a new inner class</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method public convertObject(value Object) : CharSequence from class io.netty.handler.codec.http.DefaultHttpHeaders.HttpHeadersValidationConverter to public convertObject(value Object) : CharSequence from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverter",
    "comment" : "<p>HeaderValueConverter is a new inner class</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Inline Method",
    "description" : "Inline Method private validateNameChar(character int, seq CharSequence) : void inlined to public validate(name CharSequence) : void in class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderNameValidator",
    "comment" : "<p>We have a sequence of refactorings<br />Move And Rename Method private validateName(name CharSequence) : void from class io.netty.handler.codec.http.DefaultHttpHeaders.HttpHeadersNameConverter to public validate(name CharSequence) : void from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderNameValidator<br />next<br />Inline Method private validateNameChar(character int, seq CharSequence) : void inlined to public validate(name CharSequence) : void in class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderNameValidator</p>",
    "validation" : "TP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos, Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private validateName(name CharSequence) : void from class io.netty.handler.codec.http.DefaultHttpHeaders.HttpHeadersNameConverter to public validate(name CharSequence) : void from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderNameValidator",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RD-2x",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "- Rename Variable-",
      "mappingState" : 5,
      "validationComment" : "the if condition with the throw body has been added to the moved method, which is an impure change"
    }
  }, {
    "type" : "Inline Variable",
    "description" : "Inline Variable list : List<ByteString> in method public setShouldReplacePreviousValues() : void from class io.netty.handler.codec.DefaultBinaryHeadersTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private first(headers Http2Headers) : ByteString renamed to private bs(str String) : ByteString in class io.netty.handler.codec.http2.DefaultHttp2HeadersTest",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private newCsvTextHeaders() : TextHeaders renamed to private newDefaultTextHeaders() : TextHeaders in class io.netty.handler.codec.DefaultTextHeadersTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private newDefaultTextHeaders() : TextHeaders renamed to private newCsvTextHeaders() : TextHeaders in class io.netty.handler.codec.DefaultTextHeadersTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public get(name T) : T from class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public getAndRemove(name T) : T from class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public getAll(name T) : List<T> from class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public contains(name T, value T) : boolean from class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public contains(name T, value T, valueComparator Comparator<? super T>) : boolean from class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public iterator() : Iterator<Entry<T,T>> from class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public equals(o Object) : boolean from class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public visit(entry Entry<CharSequence,CharSequence>) : boolean from class io.netty.handler.codec.http.HttpHeadersEncoder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public visit(entry Entry<ByteString,ByteString>) : boolean from class io.netty.handler.codec.http2.HttpUtil.Http2ToHttpHeaderTranslator",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public visit(entry Entry<CharSequence,CharSequence>) : boolean from class io.netty.handler.codec.AsciiHeadersEncoder",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public convertObject(value Object) : CharSequence from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public visit(entry Entry<CharSequence,CharSequence>) : boolean from class io.netty.handler.codec.http2.HttpUtil.toHttp2Headers.inHeaders",
    "comment" : "<p>anonymous class declaration is removed</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public iteratorConverted() : Iterator<Entry<ConvertedType,ConvertedType>> from class io.netty.handler.codec.EmptyConvertibleHeaders",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public iterator() : Iterator<Entry<T,T>> from class io.netty.handler.codec.EmptyHeaders",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Annotation",
    "description" : "Remove Variable Annotation @SuppressWarnings(\"unchecked\") in variable h2 : DefaultHeaders<T> in method public equals(o Object) : boolean from class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Thrown Exception Type",
    "description" : "Remove Thrown Exception Type Exception in method public visit(entry Entry<CharSequence,CharSequence>) : boolean from class io.netty.handler.codec.AsciiHeadersEncoder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private validateValue(seq CharSequence) : void from class io.netty.handler.codec.http.DefaultHttpHeaders.HttpHeadersValidationConverter to public convertObject(value Object) : CharSequence from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Severe Changes",
      "mappingState" : 5,
      "validationComment" : "return statement and the variable it returns has been added to the moved method"
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Override in method public validate(name CharSequence) : void from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderNameValidator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public convertObject(value Object) : CharSequence from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public validate(name CharSequence) : void from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderNameValidator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type void to CharSequence in method public convertObject(value Object) : CharSequence from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter c : char to character : char in method private validateValueChar(seq CharSequence, state int, character char) : int from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>private</span> <span class='pl-k'>static</span> <span class='pl-k'>int</span> <span class='pl-en'>validateValueChar</span>(<span class='pl-k'>int</span> <span class='pl-v'>state</span>, <span class='pl-k'>char</span> <span class='pl-v'>c</span>, <span class='pl-smi'>CharSequence</span> <span class='pl-v'>seq</span>)</span> is moved from DefaultHttpHeaders.<span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-en'>HttpHeadersValidationConverter</span> </span> to <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>private</span> <span class='pl-k'>static</span> <span class='pl-k'>int</span> <span class='pl-en'>validateValueChar</span>(<span class='pl-smi'>CharSequence</span> <span class='pl-v'>seq</span>, <span class='pl-k'>int</span> <span class='pl-v'>state</span>, <span class='pl-k'>char</span> <span class='pl-v'>character</span>) in DefaultHttpHeaders.HeaderValueConverterAndValidator</span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method public encoderHeader(name CharSequence, value CharSequence, buf ByteBuf) : void from class io.netty.handler.codec.http.HttpHeadersEncoder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private validateName(name CharSequence) : void from class io.netty.handler.codec.http.DefaultHttpHeaders.HttpHeadersNameConverter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Modifier",
    "description" : "Remove Method Modifier static in method private validateValue(seq CharSequence) : void from class io.netty.handler.codec.http.DefaultHttpHeaders.HttpHeadersValidationConverter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type headers : Headers<T> to headers : Headers<? extends T> in method public setAll(headers Headers<? extends T>) : Headers<T> from class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type headers : Headers<T> to headers : Headers<? extends T> in method public add(headers Headers<? extends T>) : Headers<T> from class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter nameValidator : NameValidator<UnconvertedType> in method public DefaultConvertibleHeaders(map Map<UnconvertedType,Object>, nameValidator NameValidator<UnconvertedType>, valueConverter ValueConverter<UnconvertedType>, typeConverter TypeConverter<UnconvertedType,ConvertedType>) from class io.netty.handler.codec.DefaultConvertibleHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter hashCodeGenerator : HashCodeGenerator<UnconvertedType> in method public DefaultConvertibleHeaders(keyComparator Comparator<? super UnconvertedType>, valueComparator Comparator<? super UnconvertedType>, hashCodeGenerator HashCodeGenerator<UnconvertedType>, valueConverter ValueConverter<UnconvertedType>, typeConverter TypeConverter<UnconvertedType,ConvertedType>) from class io.netty.handler.codec.DefaultConvertibleHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter map : Map<CharSequence,Object> in method public DefaultTextHeaders(map Map<CharSequence,Object>, nameValidator NameValidator<CharSequence>, valueConverter ValueConverter<CharSequence>, singleHeaderFields boolean) from class io.netty.handler.codec.DefaultTextHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter nameValidator : NameValidator<CharSequence> in method public DefaultTextHeaders(map Map<CharSequence,Object>, nameValidator NameValidator<CharSequence>, valueConverter ValueConverter<CharSequence>, singleHeaderFields boolean) from class io.netty.handler.codec.DefaultTextHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter ignoreCase : boolean in method public DefaultTextHeaders(ignoreCase boolean, valueConverter ValueConverter<CharSequence>, nameConverter NameConverter<CharSequence>, singleHeaderFields boolean) from class io.netty.handler.codec.DefaultTextHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Parameter",
    "description" : "Remove Parameter nameConverter : NameConverter<CharSequence> in method public DefaultTextHeaders(ignoreCase boolean, valueConverter ValueConverter<CharSequence>, nameConverter NameConverter<CharSequence>, singleHeaderFields boolean) from class io.netty.handler.codec.DefaultTextHeaders",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Class Access Modifier",
    "description" : "Change Class Access Modifier public to protected in class io.netty.handler.codec.DefaultTextHeaders.CharSequenceConverter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type value : T to value : Object in method public getAndRemove(name T) : T from class io.netty.handler.codec.DefaultHeaders",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable buf : ByteBuf in method public visit(entry Entry<CharSequence,CharSequence>) : boolean from class io.netty.handler.codec.http.HttpHeadersEncoder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable buf : ByteBuf to buf : ByteBuf in method public encoderHeader(name CharSequence, value CharSequence, buf ByteBuf) : void from class io.netty.handler.codec.http.HttpHeadersEncoder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter entry : Entry<CharSequence,CharSequence> to entry : Entry<CharSequence,CharSequence> in method public toHttp2Headers(inHeaders HttpHeaders) : Http2Headers from class io.netty.handler.codec.http2.HttpUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter value : Object in method public convertObject(value Object) : CharSequence from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter seq : CharSequence to seq : CharSequence in method public convertObject(value Object) : CharSequence from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable c : char to character : char in method public validate(name CharSequence) : void from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderNameValidator",
    "comment" : "<p>Seems that <span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>private</span> <span class='pl-k'>static</span> <span class='pl-k'>void</span> <span class='pl-en'>validateName</span>(<span class='pl-smi'>CharSequence</span> <span class='pl-v'>name</span>) and <span class='pl-k'>private</span> <span class='pl-k'>static</span> <span class='pl-k'>void</span> <span class='pl-en'>validateNameChar</span>(<span class='pl-k'>int</span> <span class='pl-v'>character</span>, <span class='pl-smi'>CharSequence</span> <span class='pl-v'>seq</span>)<br /></span>are merged and moved from DefaultHttpHeaders.<span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-en'>HttpHeadersNameConverter</span> </span> to <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>public</span> <span class='pl-k'>void</span> <span class='pl-en'>validate</span>(<span class='pl-smi'>CharSequence</span> <span class='pl-v'>name</span>)</span> in DefaultHttpHeaders.HeaderNameValidator</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Localize Parameter",
    "description" : "Localize Parameter entry : Entry<CharSequence,CharSequence> to entry : Entry<CharSequence,CharSequence> in method private addHttpHeadersToHttp2Headers(httpHeaders HttpHeaders, http2Headers Http2Headers) : void from class io.netty.handler.codec.http2.InboundHttp2ToHttpPriorityAdapter",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable v1 : byte to c1 : byte in method public compare(o1 CharSequence, o2 CharSequence) : int from class io.netty.util.AsciiString.CHARSEQUENCE_CASE_INSENSITIVE_ORDER.new Comparator<CharSequence>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable length1 : int to len1 : int in method public compare(o1 CharSequence, o2 CharSequence) : int from class io.netty.util.AsciiString.CHARSEQUENCE_CASE_INSENSITIVE_ORDER.new Comparator<CharSequence>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable result : int to delta : int in method public compare(o1 CharSequence, o2 CharSequence) : int from class io.netty.util.AsciiString.CHARSEQUENCE_CASE_INSENSITIVE_ORDER.new Comparator<CharSequence>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable v2 : byte to c2 : byte in method public compare(o1 CharSequence, o2 CharSequence) : int from class io.netty.util.AsciiString.CHARSEQUENCE_CASE_INSENSITIVE_ORDER.new Comparator<CharSequence>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type c2 : int to c2 : char in method public compare(o1 CharSequence, o2 CharSequence) : int from class io.netty.util.AsciiString.CHARSEQUENCE_CASE_INSENSITIVE_ORDER.new Comparator<CharSequence>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type c1 : int to c1 : char in method public compare(o1 CharSequence, o2 CharSequence) : int from class io.netty.util.AsciiString.CHARSEQUENCE_CASE_INSENSITIVE_ORDER.new Comparator<CharSequence>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable value : CharSequence to value : CharSequence in method public encoderHeader(name CharSequence, value CharSequence, buf ByteBuf) : void from class io.netty.handler.codec.http.HttpHeadersEncoder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable name : CharSequence to name : CharSequence in method public encoderHeader(name CharSequence, value CharSequence, buf ByteBuf) : void from class io.netty.handler.codec.http.HttpHeadersEncoder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable name : CharSequence in method public visit(entry Entry<CharSequence,CharSequence>) : boolean from class io.netty.handler.codec.http.HttpHeadersEncoder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Variable Modifier",
    "description" : "Remove Variable Modifier final in variable value : CharSequence in method public visit(entry Entry<CharSequence,CharSequence>) : boolean from class io.netty.handler.codec.http.HttpHeadersEncoder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Reorder Parameter",
    "description" : "Reorder Parameter [state : int, c : char, seq : CharSequence] to [seq : CharSequence, state : int, character : char] in method private validateValueChar(seq CharSequence, state int, character char) : int from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 2532
}, {
  "id" : 1159151,
  "repository" : "https://github.com/neo4j/neo4j.git",
  "sha1" : "e0072aac53b3b88de787e7ca653c7e17f9499018",
  "url" : "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
  "author" : "Nigel Small",
  "time" : "8/5/15 12:32 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private unpackBytesHeader() : int extracted from public unpackBytes() : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the method invocation -unpackBytes- has been removed."
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private unpackRawBytesInto(buffer byte[], offset int, size int) : void extracted from private unpackBytes(size int) : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "added statements"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public unpackString() : String renamed to public unpackText() : String in class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private unpackBytes(size int) : byte[] renamed to private unpackRawBytes(size int) : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Class",
    "description" : "Rename Class org.neo4j.packstream.PackStream.PackstreamException renamed to org.neo4j.packstream.PackStream.PackStreamException",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public unpackUtf8() : byte[] renamed to public unpackTextHeader() : int in class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : "<p>Matin: the bodies are so similar but there is a method with the same name in the target revision. Also wherever&nbsp;it has been called is calling the method with the same name. FP</p><p>Davood: It seems that unpackTextHeader&nbsp;is extracted from unpackUTF8 rather than being renamed, because&nbsp;unpackUTF8 exists before and after</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private packRawMap(map Map<String,Object>) : void from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer to public packRawMap(map Map<String,Object>) : void from class org.neo4j.ndp.messaging.v1.Neo4jPack.Packer",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private unpackRawMap() : Map<String,Object> from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader to public unpackRawMap() : Map<String,Object> from class org.neo4j.ndp.messaging.v1.Neo4jPack.Unpacker",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Method",
    "description" : "Move Method private unpackProperties() : Map<String,Object> from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader to public unpackProperties() : Map<String,Object> from class org.neo4j.ndp.messaging.v1.Neo4jPack.Unpacker",
    "comment" : "<p>Move to new class</p>",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public NODE : byte from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1 to public NODE : byte from class org.neo4j.ndp.messaging.v1.Neo4jPack",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public RELATIONSHIP : byte from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1 to public RELATIONSHIP : byte from class org.neo4j.ndp.messaging.v1.Neo4jPack",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move Attribute",
    "description" : "Move Attribute public PATH : byte from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1 to public PATH : byte from class org.neo4j.ndp.messaging.v1.Neo4jPack",
    "comment" : "new",
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter input : PackStream.Unpacker to unpacker : Neo4jPack.Unpacker in method public Reader(unpacker Neo4jPack.Unpacker) from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable size : long to longSize : long in method private unpackBytesHeader() : int from class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable heapBuffer : byte[] to buffer : byte[] in method private unpackRawBytesInto(buffer byte[], offset int, size int) : void from class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public shouldSerializePath() : void renamed to public shouldSerializePaths() : void in class org.neo4j.ndp.messaging.v1.MessageFormatTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.neo4j.ndp.messaging.v1.Neo4jPack.Unpacker from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.neo4j.ndp.messaging.v1.Neo4jPack.Packer from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Class",
    "description" : "Extract Class org.neo4j.ndp.messaging.v1.Neo4jPack from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type packer : PackStream.Packer to packer : Neo4jPack.Packer in method public Writer(packer Neo4jPack.Packer, onMessageComplete MessageBoundaryHook) from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type input : PackStream.Unpacker to unpacker : Neo4jPack.Unpacker in method public Reader(unpacker Neo4jPack.Unpacker) from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type labels : List<Label> to labels : Collection<Label> in method public ValueNode(id long, labels Collection<Label>, props Map<String,Object>) from class org.neo4j.ndp.messaging.v1.infrastructure.ValueNode",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type packer : PackStream.Packer to packer : Neo4jPack.Packer in method public pack(value String, packer Neo4jPack.Packer, writer PackStreamMessageFormatV1.Writer) : void from class org.neo4j.ndp.docs.v1.DocSerialization",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type packer : PackStream.Packer to packer : Neo4jPack.Packer in class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type unpacker : PackStream.Unpacker to unpacker : Neo4jPack.Unpacker in class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type labels : List<Label> to labels : Collection<Label> in class org.neo4j.ndp.messaging.v1.infrastructure.ValueNode",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type entities : PropertyContainer[] to entities : List<PropertyContainer> in class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type packer : PackStream.Packer to packer : Neo4jPack.Packer in method public pack(value String) : byte[] from class org.neo4j.ndp.docs.v1.DocSerialization",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute entities : PropertyContainer[] to nodes : List<Node> in class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath",
    "comment" : "<p>It seems like PropertyContainer[] entities is split to <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>List&lt;<span class='pl-smi'>Node</span>&gt;</span> nodes</span> and <span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-k'>List&lt;<span class='pl-smi'>Relationship</span>&gt;</span> relationships</span>, but there are not many statement mappings to confirm that.</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter entities : PropertyContainer to sequence : List<Integer> in method public ValuePath(nodes List<Node>, relationships List<Relationship>, sequence List<Integer>) in class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute idx : int to i : int in class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath.iterator",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable size : long to longSize : long in method public unpackTextHeader() : int from class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : "<p>If the method pair<br />public byte[] unpackUtf8() throws IOException<br />public int unpackTextHeader() throws IOException<br />is matched, then<br /><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>long</span> size <span class='pl-k'>=</span> unpackUINT32(); becomes <span class='pl-k'>long</span> longSize <span class='pl-k'>=</span> unpackUINT32();<br /></span></p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method public unpackTextHeader() : int extracted from public unpackUtf8() : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the method invocation -unpackBytes- has been removed."
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public unpackUtf8() : byte[] renamed to public unpackUTF8() : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.neo4j.packstream.PackStream.PackStreamException from class org.neo4j.packstream.PackStream.Overflow",
    "comment" : "<p>Rename Class org.neo4j.packstream.PackStream.PackstreamException renamed to org.neo4j.packstream.PackStream.PackStreamException</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Superclass",
    "description" : "Extract Superclass org.neo4j.packstream.PackStream.PackStreamException from class org.neo4j.packstream.PackStream.EndOfStream",
    "comment" : "<p>Rename Class org.neo4j.packstream.PackStream.PackstreamException renamed to org.neo4j.packstream.PackStream.PackStreamException</p>",
    "validation" : "FP",
    "detectionTools" : "RD-1x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public pack(packer Neo4jPack.Packer, rel Relationship) : void extracted from private packValue(obj Object) : void in class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer & moved to class org.neo4j.ndp.messaging.v1.infrastructure.ValueRelationship",
    "comment" : "<p>ValueRelationship.pack( this, (Relationship) obj );</p>",
    "validation" : "CTP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method public pack(packer Neo4jPack.Packer, node Node) : void extracted from private packValue(obj Object) : void in class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer & moved to class org.neo4j.ndp.messaging.v1.infrastructure.ValueNode",
    "comment" : "<p>ValueNode.pack( this, (Node) obj );</p>",
    "validation" : "CTP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private packValue(obj Object) : void from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer to public pack(obj Object) : void from class org.neo4j.ndp.messaging.v1.Neo4jPack.Packer",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RD-2x",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "Although most of the replacements are justifiable, the non-mapped leaves are not justifiable based on the manual validation. There is no Extract Method relating to the pack function"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public unpackBytes() : byte[] renamed to private unpackBytesHeader() : int in class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public unpackUtf8() : byte[] renamed to public unpackBytes() : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter exampleValue : String in method public Field(typeSignature String, name String, exampleValue String) from class org.neo4j.ndp.docs.v1.DocStruct.Field",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public startNode() : Node from class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public endNode() : Node from class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public lastRelationship() : Relationship from class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public isPackstreamType(packStreamType String) : Matcher<? super byte[]> from class org.neo4j.ndp.docs.v1.NDPValueDocTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public packRawMap(map Map<String,Object>) : void from class org.neo4j.ndp.messaging.v1.Neo4jPack.Packer",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public unpackRawMap() : Map<String,Object> from class org.neo4j.ndp.messaging.v1.Neo4jPack.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public unpackProperties() : Map<String,Object> from class org.neo4j.ndp.messaging.v1.Neo4jPack.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Access Modifier",
    "description" : "Change Attribute Access Modifier private to public in attribute public UTF_8 : Charset from class org.neo4j.packstream.PackStream",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Encapsulate Attribute",
    "description" : "Encapsulate Attribute private name : String from class org.neo4j.ndp.docs.v1.DocStruct.Field",
    "comment" : "<p>is called in method<br />private void packValueOf( DocStruct.Field field, Neo4jPack.Packer packer ) throws IOException<br />community/ndp/v1-docs/src/test/java/org/neo4j/ndp/docs/v1/NDPValueStructsDocTest.java<br />String name = field.name().toLowerCase();</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method public isPackstreamType(packStreamType String) : Matcher<? super byte[]> from class org.neo4j.ndp.docs.v1.NDPValueDocTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Attribute Modifier",
    "description" : "Remove Attribute Modifier final in attribute private entities : PropertyContainer[] from class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type e : PackStream.PackstreamException to e : PackStream.PackStreamException in method public read(output MessageHandler<E>) : void from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private unpackValue() : Object from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader to public unpack() : Object from class org.neo4j.ndp.messaging.v1.Neo4jPack.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Severe Changes",
      "mappingState" : 5,
      "validationComment" : "Although most of the replacements are justifiable, the non-mapped leaves are not justifiable based on the manual validation. There is no Extract Method relating to the unpack function"
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public unpack() : Object from class org.neo4j.ndp.messaging.v1.Neo4jPack.Unpacker",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 3709
}, {
  "id" : 1159409,
  "repository" : "https://github.com/ignatov/intellij-erlang.git",
  "sha1" : "e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
  "url" : "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
  "author" : "Alexandra Vesloguzova",
  "time" : "8/6/15 12:37 PM",
  "refactorings" : [ {
    "type" : "Extract Method",
    "description" : "Extract Method private collectFiles(module Module, onlyTestModules boolean, filesCollector Processor<VirtualFile>) : void extracted from private addErlangModules(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>) : Collection<ErlangFile> in class org.intellij.erlang.utils.ErlangModulesUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "rename variable on top of the extracted method"
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private addSourceRoot(module Module, sourceRootName String, rootType JpsModuleSourceRootType<?>) : VirtualFile extracted from private addSourceRoot(module Module, sourceRootName String, isTestSourceRoot boolean) : VirtualFile in class org.intellij.erlang.compilation.ErlangCompilationTestBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "rename variable on top of the extracted method"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private getErlangModuleDescriptorFromConfig(target ErlangTarget, context CompileContext, isTests boolean) : List<ErlangFileDescriptor> renamed to private getErlangFileDescriptorFromConfig(target ErlangTarget, context CompileContext, isTests boolean) : List<ErlangFileDescriptor> in class org.intellij.erlang.jps.builder.ErlangBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private assertSameErlangModules(moduleDescriptors List<ErlangFileDescriptor>, expectedModules String...) : void renamed to private assertSameErlangFiles(moduleDescriptors List<ErlangFileDescriptor>, expectedModules String...) : void in class org.intellij.erlang.compilation.ErlangDependenciesResolutionTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, GumTreeDiff, RD-1x, RD-2x, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private addErlangModules(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>) : Collection<ErlangFile> renamed to private addErlangFiles(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>, type ErlangFileType) : Collection<ErlangFile> in class org.intellij.erlang.utils.ErlangModulesUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RMiner-1x",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private addErlangModules(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>) : Collection<ErlangFile> renamed to private collectFiles(module Module, onlyTestModules boolean, filesCollector Processor<VirtualFile>) : void in class org.intellij.erlang.utils.ErlangModulesUtil",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff, GumTreeDiff, RD-1x, RD-2x",
    "validators" : "Matin, Laleh",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private addFile(sourceDir VirtualFile, relativePath String, content String) : VirtualFile extracted from protected addFile(module Module, relativePath String, content String, toTests boolean) : VirtualFile in class org.intellij.erlang.compilation.ErlangCompilationTestBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff, RD-1x, RD-2x",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "1",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> extracted from private getModuleBuildOrderInner(module Module) : ErlangModuleBuildOrderDescriptor in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Method",
    "description" : "Extract Method private isSourceOrHeader(file File) : boolean extracted from private buildSources(target ErlangTarget, context CompileContext, compilerOptions ErlangCompilerOptions, holder DirtyFilesHolder<ErlangSourceRootDescriptor,ErlangTarget>, outputConsumer BuildOutputConsumer, outputDir File, isTests boolean) : void in class org.intellij.erlang.jps.builder.ErlangBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, RefDiff",
    "validators" : "Matin, Davood",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : "the return statement, which returns a boolean, has been changed"
    }
  }, {
    "type" : "Extract And Move Method",
    "description" : "Extract And Move Method private isSourceOrHeader(file File) : boolean extracted from protected getDirtyElement(target ErlangTarget, file File, root ErlangSourceRootDescriptor) : String in class org.intellij.erlang.jps.builder.ErlangBuilder$1 & moved to class org.intellij.erlang.jps.builder.ErlangBuilder",
    "comment" : "<p>This method is extracted from an anonymous class inside method<br />buildSources(target ErlangTarget, context CompileContext, compilerOptions ErlangCompilerOptions, holder DirtyFilesHolder, outputConsumer BuildOutputConsumer, outputDir File, isTests boolean) : void<br />The name of the anonymous class is actually org.intellij.erlang.jps.builder.ErlangBuilder$2<br />http://refactoring.encs.concordia.ca/oracle/refactoring-details/1159409/4224</p>",
    "validation" : "FP",
    "detectionTools" : "RefDiff",
    "validators" : "Davood, Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable moduleDescriptors : List<ErlangFileDescriptor> to fileDescriptors : List<ErlangFileDescriptor> in method private getErlangModulePaths(target ErlangTarget, context CompileContext, dirtyFilePaths List<String>, isTest boolean) : List<String> from class org.intellij.erlang.jps.builder.ErlangBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable dirtyErlangModulePaths : List<String> to dirtyErlangFilePaths : List<String> in method private buildSources(target ErlangTarget, context CompileContext, compilerOptions ErlangCompilerOptions, holder DirtyFilesHolder<ErlangSourceRootDescriptor,ErlangTarget>, outputConsumer BuildOutputConsumer, outputDir File, isTests boolean) : void from class org.intellij.erlang.jps.builder.ErlangBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter isTestSourceRoot : boolean to rootType : JpsModuleSourceRootType<?> in method private addSourceRoot(module Module, sourceRootName String, rootType JpsModuleSourceRootType<?>) : VirtualFile from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable modulesCollector : Processor<VirtualFile> to filesCollector : Processor<VirtualFile> in method private addErlangFiles(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>, type ErlangFileType) : Collection<ErlangFile> from class org.intellij.erlang.utils.ErlangModulesUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Parameterize Variable",
    "description" : "Parameterize Variable modulesCollector : Processor<VirtualFile> to filesCollector : Processor<VirtualFile> in method private collectFiles(module Module, onlyTestModules boolean, filesCollector Processor<VirtualFile>) : void from class org.intellij.erlang.utils.ErlangModulesUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute myOrderedErlangModulePaths : List<ErlangFileDescriptor> to myOrderedErlangFilePaths : List<ErlangFileDescriptor> in class org.intellij.erlang.jps.builder.ErlangModuleBuildOrderDescriptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Attribute",
    "description" : "Rename Attribute myOrderedErlangTestModulePaths : List<ErlangFileDescriptor> to myOrderedErlangTestFilePaths : List<ErlangFileDescriptor> in class org.intellij.erlang.jps.builder.ErlangModuleBuildOrderDescriptor",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable file : File in method private getExpectedOutputFileName(relativePath String) : String from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter expected : T to module : Module in method protected addIncludeRoot(module Module, sourceRootName String) : VirtualFile in class org.intellij.erlang.compilation.ErlangCompilationTestBase",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter globalParseTransforms : List<String> to onlyTestModules : boolean in method private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter globalParseTransforms : List<String> to onlyTestModules : boolean in method public createSemiGraph(module Module, onlyTestModules boolean) : ErlangFilesDependencyGraph in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter modules : Collection<ErlangFile> to erlangModules : Collection<VirtualFile> in method private ErlangFilesDependencyGraph(erlangModules Collection<VirtualFile>, erlangHeaders Collection<VirtualFile>, globalParseTransforms List<String>, psiManager PsiManager) in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter node : Node to virtualFile : VirtualFile in method private getErlangFile(virtualFile VirtualFile) : ErlangFile in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter modules : Collection<ErlangFile> to erlangHeaders : Collection<VirtualFile> in method private buildForHeaders(erlangHeaders Collection<VirtualFile>) : void in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter deps : Collection<Node> to erlangModules : Collection<VirtualFile> in method private buildNamesMap(erlangModules Collection<VirtualFile>) : void in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter pt : String to filePath : String in method public getIn(filePath String) : Iterator<String> in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable moduleNames : Set<String> to dependencies : Set<String> in method private buildForHeaders(erlangHeaders Collection<VirtualFile>) : void in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Variable",
    "description" : "Rename Variable node : Node to erlangFile : ErlangFile in method private buildForHeaders(erlangHeaders Collection<VirtualFile>) : void in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter moduleFile : ErlangFile to erlangFile : ErlangFile in method public fun(erlangFile ErlangFile) : String in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph.getDeclaredIncludePaths",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter moduleFile : ErlangFile to erlangFile : ErlangFile in method public fun(erlangFile ErlangFile) : String in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph.getDeclaredIncludePaths.ContainerUtil",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Extract Variable",
    "description" : "Extract Variable outputFile : File in method private lastOutputModificationTime(module Module, sourceFile VirtualFile) : long from class org.intellij.erlang.compilation.ErlangModuleCompilationTest",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type nodes : List<String> to nodes : Collection<String> in method private getNodesByName(nodes Collection<String>) : List<Node> from class org.intellij.erlang.jps.builder.ErlangBuilder.SortedModuleDependencyGraph",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type fileNames : String... to fileNames : List<String> in method protected assertContains(parentPath VirtualFile, fileNames List<String>) : void from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type isTestSourceRoot : boolean to rootType : JpsModuleSourceRootType<?> in method private addSourceRoot(module Module, sourceRootName String, rootType JpsModuleSourceRootType<?>) : VirtualFile from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type modules : Collection<ErlangFile> to erlangModules : Collection<VirtualFile> in method private ErlangFilesDependencyGraph(erlangModules Collection<VirtualFile>, erlangHeaders Collection<VirtualFile>, globalParseTransforms List<String>, psiManager PsiManager) in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type modules : Collection<ErlangFile> to erlangHeaders : Collection<VirtualFile> in method private buildForHeaders(erlangHeaders Collection<VirtualFile>) : void in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type node : Node to virtualFile : VirtualFile in method private getErlangFile(virtualFile VirtualFile) : ErlangFile in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type dep : Node to erlangModule : VirtualFile in method private buildNamesMap(erlangModules Collection<VirtualFile>) : void in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type deps : Collection<Node> to erlangModules : Collection<VirtualFile> in method private buildNamesMap(erlangModules Collection<VirtualFile>) : void in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Parameter Type",
    "description" : "Change Parameter Type expected : T to module : Module in method protected addIncludeRoot(module Module, sourceRootName String) : VirtualFile in class org.intellij.erlang.compilation.ErlangCompilationTestBase",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<Node> to List<String> in method private getDeclaredIncludePaths(file ErlangFile) : List<String> in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<Node> to List<String> in method public getDependencies(filePath String) : List<String> in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>List&lt;<span class='pl-smi'>Node</span>&gt;</span> <span class='pl-en'>getDependencies</span>()</span> belongs to <span class='blob-code-inner blob-code-marker' data-code-marker='-'><span class='pl-k'>private</span> <span class='pl-k'>static</span> <span class='pl-k'>class</span> <span class='pl-en'>Node</span></span></p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Attribute Type",
    "description" : "Change Attribute Type myModules : Collection<ErlangFile> to myNamesToPathsMap : Map<String,String> in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private getSortedModules() : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangModulesSorter to private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Severe Changes",
      "mappingState" : 5,
      "validationComment" : "non-mapped leaves are not justifiable"
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method public testRebuildWithNewFile() : void renamed to public testRebuildWithInclude() : void in class org.intellij.erlang.compilation.ErlangModuleCompilationTest",
    "comment" : null,
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Method",
    "description" : "Rename Method private getTopologicallySortedErlangModulePaths(erlangModules Collection<ErlangFile>, globalParseTransforms List<String>) : List<ErlangFileDescriptor> renamed to private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
    "comment" : "<p><a href='https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41?diff=split#diff-907db6387e9cfa10cc5c69576fa38873R143' target='_blank' rel='noopener'><code></code></a><code><a href='https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41?diff=split#diff-907db6387e9cfa10cc5c69576fa38873R143' target='_blank' rel='noopener'>getTopologicallySortedErlangFilesPath<br /></a></code></p><p>is the target of an extract method refactoring</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Ameya",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @NotNull in method private getAppConfigDestinationFileName(sourceFileName String) : String from class org.intellij.erlang.jps.builder.ErlangBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @NotNull in method private getSortedErlangModulePathsToCompile(sortedModuleDescriptors List<ErlangFileDescriptor>, dirtyModules List<String>) : List<String> from class org.intellij.erlang.jps.builder.ErlangBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @NotNull in method private getOutputErlangModuleFiles(erlangModulePathsToCompile List<String>, outputDirectory File) : List<File> from class org.intellij.erlang.jps.builder.ErlangBuilder",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Nullable in method protected getOutputFile(module Module, sourceFile VirtualFile, isTest boolean) : File from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Nullable in method private getExpectedOutputFileName(relativePath String) : String from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @NotNull in method private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @NotNull in method private getExpectedOutputFileName(relativePath String) : String from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter type : ErlangFileType in method private addErlangFiles(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>, type ErlangFileType) : Collection<ErlangFile> from class org.intellij.erlang.utils.ErlangModulesUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter type : ErlangFileType in method private getErlangModulesCollector(psiManager PsiManager, erlangFiles Collection<ErlangFile>, type ErlangFileType) : Processor<VirtualFile> from class org.intellij.erlang.utils.ErlangModulesUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter module : Module in method private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter",
    "description" : "Add Parameter onlyTestModules : boolean in method private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter nodes : Collection<String> in method private getNodesByName(nodes Collection<String>) : List<Node> from class org.intellij.erlang.jps.builder.ErlangBuilder.SortedModuleDependencyGraph",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter module : Module in method protected addFile(module Module, relativePath String, content String, toTests boolean) : VirtualFile from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter relativePath : String in method protected addFile(module Module, relativePath String, content String, toTests boolean) : VirtualFile from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter content : String in method protected addFile(module Module, relativePath String, content String, toTests boolean) : VirtualFile from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @NotNull in method private getDeclaredIncludePaths(file ErlangFile) : List<String> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : "<p>getDeclaredIncludePaths() is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @NotNull in method private getDeclaredParseTransformPaths(erlangModule ErlangFile) : List<String> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : "<p><span class='blob-code-inner blob-code-marker' data-code-marker=' '><span class='pl-en'>getDeclaredParseTransformPaths</span></span>() is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @Nullable in method public fun(source String) : String from class org.intellij.erlang.compilation.ErlangCompilationTestBase.assertSourcesCompiled.assertContains.mapNotNull.new Function<String,String>",
    "comment" : "null",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Remove Method Annotation",
    "description" : "Remove Method Annotation @Override in method public fun(pt String) : Node from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangModulesSorter.ErlangModulesDependencyGraph.getModuleNodes.ContainerUtil",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter module : Module in method private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
    "comment" : "null",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter erlangModules : Collection<VirtualFile> in method private ErlangFilesDependencyGraph(erlangModules Collection<VirtualFile>, erlangHeaders Collection<VirtualFile>, globalParseTransforms List<String>, psiManager PsiManager) from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : "<p>ErlangFilesDependencyGraph(erlangModules Collection&lt;VirtualFile&gt;, erlangHeaders Collection&lt;VirtualFile&gt;, globalParseTransforms List&lt;String&gt;, psiManager PsiManager) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter globalParseTransforms : List<String> in method private ErlangFilesDependencyGraph(erlangModules Collection<VirtualFile>, erlangHeaders Collection<VirtualFile>, globalParseTransforms List<String>, psiManager PsiManager) from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : "<p>ErlangFilesDependencyGraph(erlangModules Collection&lt;VirtualFile&gt;, erlangHeaders Collection&lt;VirtualFile&gt;, globalParseTransforms List&lt;String&gt;, psiManager PsiManager) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter globalParseTransforms : List<String> in method private buildForModules(erlangModules Collection<VirtualFile>, globalParseTransforms List<String>) : void from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : "<p>private buildForModules(erlangModules Collection&lt;VirtualFile&gt;, globalParseTransforms List&lt;String&gt;) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter virtualFile : VirtualFile in method private getErlangFile(virtualFile VirtualFile) : ErlangFile from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : "<p>getErlangFile(virtualFile VirtualFile) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter erlangHeaders : Collection<VirtualFile> in method private buildForHeaders(erlangHeaders Collection<VirtualFile>) : void from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : "<p>buildForHeaders(erlangHeaders Collection&lt;VirtualFile&gt;) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter erlangModule : ErlangFile in method private addDeclaredDependencies(erlangModule ErlangFile, dependencies Set<String>) : void from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : "<p>addDeclaredDependencies(erlangModule ErlangFile, dependencies Set&lt;String&gt;) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter erlangModules : Collection<VirtualFile> in method private buildNamesMap(erlangModules Collection<VirtualFile>) : void from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : "<p>buildNamesMap(erlangModules Collection&lt;VirtualFile&gt;) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter erlangModuleNames : Collection<String> in method private getPathsFromNames(erlangModuleNames Collection<String>) : List<String> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : "<p>Move And Rename Method private getModuleNodes(nodesName Collection&lt;String&gt;) : List&lt;Node&gt; from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangModulesSorter.ErlangModulesDependencyGraph to private getPathsFromNames(erlangModuleNames Collection&lt;String&gt;) : List&lt;String&gt; from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph</p>",
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter module : Module in method protected addIncludeRoot(module Module, sourceRootName String) : VirtualFile from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
    "comment" : "<p>addIncludeRoot(module Module, sourceRootName String) is a new method</p>",
    "validation" : "FP",
    "detectionTools" : "GumTreeDiff",
    "validators" : "Nikos",
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter rootType : JpsModuleSourceRootType<?> in method private addSourceRoot(module Module, sourceRootName String, rootType JpsModuleSourceRootType<?>) : VirtualFile from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Parameter Annotation",
    "description" : "Add Parameter Annotation @NotNull in parameter filesCollector : Processor<VirtualFile> in method private collectFiles(module Module, onlyTestModules boolean, filesCollector Processor<VirtualFile>) : void from class org.intellij.erlang.utils.ErlangModulesUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Method Access Modifier",
    "description" : "Change Method Access Modifier private to public in method public addDeclaredBehaviourModuleNames(file ErlangFile, behaviourNames Set<String>) : void from class org.intellij.erlang.psi.impl.ErlangPsiImplUtil",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Move And Rename Method",
    "description" : "Move And Rename Method private getModuleNodes(nodesName Collection<String>) : List<Node> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangModulesSorter.ErlangModulesDependencyGraph to private getPathsFromNames(erlangModuleNames Collection<String>) : List<String> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : null,
    "validation" : "CTP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "0",
      "purityValidation" : "TN",
      "purityComment" : "Tolerable changes in the body\nOverlapped refactoring - can be identical by undoing the overlapped refactoring\n- Rename Variable-",
      "mappingState" : 1,
      "validationComment" : "The first one returns a node and the second one returns a string. That's why the replacement among -myNamesToNodesMap -> myNamesToPathsMap- is not justifiable. Note that there is no refactoring related to this replacement. "
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type List<Node> to List<String> in method private getPathsFromNames(erlangModuleNames Collection<String>) : List<String> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Annotation",
    "description" : "Add Method Annotation @NotNull in method private getPathsFromNames(erlangModuleNames Collection<String>) : List<String> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter nodesName : Collection<String> to erlangModuleNames : Collection<String> in method private getPathsFromNames(erlangModuleNames Collection<String>) : List<String> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner, GumTreeDiff",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Add Method Modifier",
    "description" : "Add Method Modifier static in method private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Variable Type",
    "description" : "Change Variable Type builder : DFSTBuilder<Node> to builder : DFSTBuilder<String> in method private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Change Return Type",
    "description" : "Change Return Type Node to String in method public fun(name String) : String from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph.getPathsFromNames.mapNotNull.new Function<String,String>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  }, {
    "type" : "Rename Parameter",
    "description" : "Rename Parameter pt : String to name : String in method public fun(name String) : String from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph.getPathsFromNames.mapNotNull.new Function<String,String>",
    "comment" : null,
    "validation" : "TP",
    "detectionTools" : "RefactoringMiner",
    "validators" : null,
    "purity" : {
      "purityValue" : "-",
      "purityValidation" : "-",
      "purityComment" : "",
      "mappingState" : "",
      "validationComment" : ""
    }
  } ],
  "refDiffExecutionTime" : 1833
} ]